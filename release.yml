pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  testProjects: "**/*Test/*.csproj"
  buildConfiguration: 'Release'

steps:
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)/Configuration-Generator'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/Configuration-Generator/ConfigurationGenerator.zip'
    replaceExistingArchive: true

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/src/$(Build.BuildId).zip'
    replaceExistingArchive: true
    
- task: DotNetCoreCLI@2
  displayName: Build Engine Core
  inputs:
    command: build
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration)'

- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
    checkLatest: true

- script: |
    npm install --prefix Configuration-Generator $(System.DefaultWorkingDirectory)\Configuration-Generator
    npm run build Configuration-Generator
  displayName: 'Install & Build Configuartion Generator'

- script: npm run citest --prefix Configuration-Generator
  displayName: 'Run Configuartion Generator Tests'

- task: DotNetCoreCLI@2
  displayName: Run Engine Core Tests
  inputs:
    command: test
    projects: '$(testProjects)'
    arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'

- task: PublishTestResults@2
  displayName: Publish Test Results
  condition: succeededOrFailed()
  inputs:
    testRunner: JUnit
    testResultsFiles: '**/TEST-RESULTS.xml'

- task: DotNetCoreCLI@2
  displayName: Build Batch Executor
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'Microsoft.Health.Fhir.Transformation.BatchExecutor\*.csproj'
    arguments: '-c Release -r win10-x64 --self-contained true --output $(build.artifactstagingdirectory)/BatchExecutor'
    modifyOutputPath: false

- task: DotNetCoreCLI@2
  displayName: Build Local Tool
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'Microsoft.Health.Fhir.Transformation.Cdm.Tool\*.csproj'
    arguments: '-c Release -r win10-x64 --self-contained true --output $(build.artifactstagingdirectory)/TransformationCdmTool'
    modifyOutputPath: false
    
- task: PublishBuildArtifacts@1
  displayName: Publish Batch Executor
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/BatchExecutor'
    ArtifactName: 'Packages'
    publishLocation: 'Container'

- task: PublishBuildArtifacts@1
  displayName: Publish Local Tool
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/TransformationCdmTool'
    ArtifactName: 'Packages'
    publishLocation: 'Container'

- task: PublishBuildArtifacts@1
  displayName: Publish Configuration Generator
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/Configuration-Generator'
    ArtifactName: 'Packages'
    publishLocation: 'Container'

- task: PublishBuildArtifacts@1
  displayName: Publish Source Code
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/src'
    ArtifactName: 'Packages'
    publishLocation: 'Container'
