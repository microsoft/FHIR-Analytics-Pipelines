CREATE EXTERNAL TABLE [fhir].[Claim] (
    [resourceType] NVARCHAR(4000),
    [id] VARCHAR(64),
    [meta.id] NVARCHAR(4000),
    [meta.extension] NVARCHAR(MAX),
    [meta.versionId] VARCHAR(64),
    [meta.lastUpdated] VARCHAR(30),
    [meta.source] VARCHAR(256),
    [meta.profile] VARCHAR(MAX),
    [meta.security] VARCHAR(MAX),
    [meta.tag] VARCHAR(MAX),
    [implicitRules] VARCHAR(256),
    [language] NVARCHAR(4000),
    [text.id] NVARCHAR(4000),
    [text.extension] NVARCHAR(MAX),
    [text.status] NVARCHAR(64),
    [text.div] NVARCHAR(MAX),
    [extension] NVARCHAR(MAX),
    [modifierExtension] NVARCHAR(MAX),
    [identifier] VARCHAR(MAX),
    [status] NVARCHAR(4000),
    [type.id] NVARCHAR(4000),
    [type.extension] NVARCHAR(MAX),
    [type.coding] VARCHAR(MAX),
    [type.text] NVARCHAR(4000),
    [subType.id] NVARCHAR(4000),
    [subType.extension] NVARCHAR(MAX),
    [subType.coding] VARCHAR(MAX),
    [subType.text] NVARCHAR(4000),
    [use] NVARCHAR(64),
    [patient.id] NVARCHAR(4000),
    [patient.extension] NVARCHAR(MAX),
    [patient.reference] NVARCHAR(4000),
    [patient.type] VARCHAR(256),
    [patient.identifier.id] NVARCHAR(4000),
    [patient.identifier.extension] NVARCHAR(MAX),
    [patient.identifier.use] NVARCHAR(64),
    [patient.identifier.type] NVARCHAR(MAX),
    [patient.identifier.system] VARCHAR(256),
    [patient.identifier.value] NVARCHAR(4000),
    [patient.identifier.period] NVARCHAR(MAX),
    [patient.identifier.assigner] NVARCHAR(MAX),
    [patient.display] NVARCHAR(4000),
    [billablePeriod.id] NVARCHAR(4000),
    [billablePeriod.extension] NVARCHAR(MAX),
    [billablePeriod.start] VARCHAR(30),
    [billablePeriod.end] VARCHAR(30),
    [created] VARCHAR(30),
    [enterer.id] NVARCHAR(4000),
    [enterer.extension] NVARCHAR(MAX),
    [enterer.reference] NVARCHAR(4000),
    [enterer.type] VARCHAR(256),
    [enterer.identifier.id] NVARCHAR(4000),
    [enterer.identifier.extension] NVARCHAR(MAX),
    [enterer.identifier.use] NVARCHAR(64),
    [enterer.identifier.type] NVARCHAR(MAX),
    [enterer.identifier.system] VARCHAR(256),
    [enterer.identifier.value] NVARCHAR(4000),
    [enterer.identifier.period] NVARCHAR(MAX),
    [enterer.identifier.assigner] NVARCHAR(MAX),
    [enterer.display] NVARCHAR(4000),
    [insurer.id] NVARCHAR(4000),
    [insurer.extension] NVARCHAR(MAX),
    [insurer.reference] NVARCHAR(4000),
    [insurer.type] VARCHAR(256),
    [insurer.identifier.id] NVARCHAR(4000),
    [insurer.identifier.extension] NVARCHAR(MAX),
    [insurer.identifier.use] NVARCHAR(64),
    [insurer.identifier.type] NVARCHAR(MAX),
    [insurer.identifier.system] VARCHAR(256),
    [insurer.identifier.value] NVARCHAR(4000),
    [insurer.identifier.period] NVARCHAR(MAX),
    [insurer.identifier.assigner] NVARCHAR(MAX),
    [insurer.display] NVARCHAR(4000),
    [provider.id] NVARCHAR(4000),
    [provider.extension] NVARCHAR(MAX),
    [provider.reference] NVARCHAR(4000),
    [provider.type] VARCHAR(256),
    [provider.identifier.id] NVARCHAR(4000),
    [provider.identifier.extension] NVARCHAR(MAX),
    [provider.identifier.use] NVARCHAR(64),
    [provider.identifier.type] NVARCHAR(MAX),
    [provider.identifier.system] VARCHAR(256),
    [provider.identifier.value] NVARCHAR(4000),
    [provider.identifier.period] NVARCHAR(MAX),
    [provider.identifier.assigner] NVARCHAR(MAX),
    [provider.display] NVARCHAR(4000),
    [priority.id] NVARCHAR(4000),
    [priority.extension] NVARCHAR(MAX),
    [priority.coding] VARCHAR(MAX),
    [priority.text] NVARCHAR(4000),
    [fundsReserve.id] NVARCHAR(4000),
    [fundsReserve.extension] NVARCHAR(MAX),
    [fundsReserve.coding] VARCHAR(MAX),
    [fundsReserve.text] NVARCHAR(4000),
    [related] VARCHAR(MAX),
    [prescription.id] NVARCHAR(4000),
    [prescription.extension] NVARCHAR(MAX),
    [prescription.reference] NVARCHAR(4000),
    [prescription.type] VARCHAR(256),
    [prescription.identifier.id] NVARCHAR(4000),
    [prescription.identifier.extension] NVARCHAR(MAX),
    [prescription.identifier.use] NVARCHAR(64),
    [prescription.identifier.type] NVARCHAR(MAX),
    [prescription.identifier.system] VARCHAR(256),
    [prescription.identifier.value] NVARCHAR(4000),
    [prescription.identifier.period] NVARCHAR(MAX),
    [prescription.identifier.assigner] NVARCHAR(MAX),
    [prescription.display] NVARCHAR(4000),
    [originalPrescription.id] NVARCHAR(4000),
    [originalPrescription.extension] NVARCHAR(MAX),
    [originalPrescription.reference] NVARCHAR(4000),
    [originalPrescription.type] VARCHAR(256),
    [originalPrescription.identifier.id] NVARCHAR(4000),
    [originalPrescription.identifier.extension] NVARCHAR(MAX),
    [originalPrescription.identifier.use] NVARCHAR(64),
    [originalPrescription.identifier.type] NVARCHAR(MAX),
    [originalPrescription.identifier.system] VARCHAR(256),
    [originalPrescription.identifier.value] NVARCHAR(4000),
    [originalPrescription.identifier.period] NVARCHAR(MAX),
    [originalPrescription.identifier.assigner] NVARCHAR(MAX),
    [originalPrescription.display] NVARCHAR(4000),
    [payee.id] NVARCHAR(4000),
    [payee.extension] NVARCHAR(MAX),
    [payee.modifierExtension] NVARCHAR(MAX),
    [payee.type.id] NVARCHAR(4000),
    [payee.type.extension] NVARCHAR(MAX),
    [payee.type.coding] NVARCHAR(MAX),
    [payee.type.text] NVARCHAR(4000),
    [payee.party.id] NVARCHAR(4000),
    [payee.party.extension] NVARCHAR(MAX),
    [payee.party.reference] NVARCHAR(4000),
    [payee.party.type] VARCHAR(256),
    [payee.party.identifier] NVARCHAR(MAX),
    [payee.party.display] NVARCHAR(4000),
    [referral.id] NVARCHAR(4000),
    [referral.extension] NVARCHAR(MAX),
    [referral.reference] NVARCHAR(4000),
    [referral.type] VARCHAR(256),
    [referral.identifier.id] NVARCHAR(4000),
    [referral.identifier.extension] NVARCHAR(MAX),
    [referral.identifier.use] NVARCHAR(64),
    [referral.identifier.type] NVARCHAR(MAX),
    [referral.identifier.system] VARCHAR(256),
    [referral.identifier.value] NVARCHAR(4000),
    [referral.identifier.period] NVARCHAR(MAX),
    [referral.identifier.assigner] NVARCHAR(MAX),
    [referral.display] NVARCHAR(4000),
    [facility.id] NVARCHAR(4000),
    [facility.extension] NVARCHAR(MAX),
    [facility.reference] NVARCHAR(4000),
    [facility.type] VARCHAR(256),
    [facility.identifier.id] NVARCHAR(4000),
    [facility.identifier.extension] NVARCHAR(MAX),
    [facility.identifier.use] NVARCHAR(64),
    [facility.identifier.type] NVARCHAR(MAX),
    [facility.identifier.system] VARCHAR(256),
    [facility.identifier.value] NVARCHAR(4000),
    [facility.identifier.period] NVARCHAR(MAX),
    [facility.identifier.assigner] NVARCHAR(MAX),
    [facility.display] NVARCHAR(4000),
    [careTeam] VARCHAR(MAX),
    [supportingInfo] VARCHAR(MAX),
    [diagnosis] VARCHAR(MAX),
    [procedure] VARCHAR(MAX),
    [insurance] VARCHAR(MAX),
    [accident.id] NVARCHAR(4000),
    [accident.extension] NVARCHAR(MAX),
    [accident.modifierExtension] NVARCHAR(MAX),
    [accident.date] VARCHAR(10),
    [accident.type.id] NVARCHAR(4000),
    [accident.type.extension] NVARCHAR(MAX),
    [accident.type.coding] NVARCHAR(MAX),
    [accident.type.text] NVARCHAR(4000),
    [accident.location.Address.id] NVARCHAR(4000),
    [accident.location.Address.extension] NVARCHAR(MAX),
    [accident.location.Address.use] NVARCHAR(64),
    [accident.location.Address.type] NVARCHAR(64),
    [accident.location.Address.text] NVARCHAR(4000),
    [accident.location.Address.line] NVARCHAR(MAX),
    [accident.location.Address.city] NVARCHAR(4000),
    [accident.location.Address.district] NVARCHAR(4000),
    [accident.location.Address.state] NVARCHAR(4000),
    [accident.location.Address.postalCode] NVARCHAR(4000),
    [accident.location.Address.country] NVARCHAR(4000),
    [accident.location.Address.period] NVARCHAR(MAX),
    [accident.location.Reference.id] NVARCHAR(4000),
    [accident.location.Reference.extension] NVARCHAR(MAX),
    [accident.location.Reference.reference] NVARCHAR(4000),
    [accident.location.Reference.type] VARCHAR(256),
    [accident.location.Reference.identifier] NVARCHAR(MAX),
    [accident.location.Reference.display] NVARCHAR(4000),
    [item] VARCHAR(MAX),
    [total.id] NVARCHAR(4000),
    [total.extension] NVARCHAR(MAX),
    [total.value] float,
    [total.currency] NVARCHAR(4000),
) WITH (
    LOCATION='/Claim/**',
    DATA_SOURCE = ParquetSource,
    FILE_FORMAT = ParquetFormat
);

GO

CREATE VIEW fhir.ClaimIdentifier AS
SELECT
    [id],
    [identifier.JSON],
    [identifier.id],
    [identifier.extension],
    [identifier.use],
    [identifier.type.id],
    [identifier.type.extension],
    [identifier.type.coding],
    [identifier.type.text],
    [identifier.system],
    [identifier.value],
    [identifier.period.id],
    [identifier.period.extension],
    [identifier.period.start],
    [identifier.period.end],
    [identifier.assigner.id],
    [identifier.assigner.extension],
    [identifier.assigner.reference],
    [identifier.assigner.type],
    [identifier.assigner.identifier],
    [identifier.assigner.display]
FROM openrowset (
        BULK 'Claim/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [identifier.JSON]  VARCHAR(MAX) '$.identifier'
    ) AS rowset
    CROSS APPLY openjson (rowset.[identifier.JSON]) with (
        [identifier.id]                NVARCHAR(4000)      '$.id',
        [identifier.extension]         NVARCHAR(MAX)       '$.extension',
        [identifier.use]               NVARCHAR(64)        '$.use',
        [identifier.type.id]           NVARCHAR(4000)      '$.type.id',
        [identifier.type.extension]    NVARCHAR(MAX)       '$.type.extension',
        [identifier.type.coding]       NVARCHAR(MAX)       '$.type.coding',
        [identifier.type.text]         NVARCHAR(4000)      '$.type.text',
        [identifier.system]            VARCHAR(256)        '$.system',
        [identifier.value]             NVARCHAR(4000)      '$.value',
        [identifier.period.id]         NVARCHAR(4000)      '$.period.id',
        [identifier.period.extension]  NVARCHAR(MAX)       '$.period.extension',
        [identifier.period.start]      VARCHAR(30)         '$.period.start',
        [identifier.period.end]        VARCHAR(30)         '$.period.end',
        [identifier.assigner.id]       NVARCHAR(4000)      '$.assigner.id',
        [identifier.assigner.extension] NVARCHAR(MAX)       '$.assigner.extension',
        [identifier.assigner.reference] NVARCHAR(4000)      '$.assigner.reference',
        [identifier.assigner.type]     VARCHAR(256)        '$.assigner.type',
        [identifier.assigner.identifier] NVARCHAR(MAX)       '$.assigner.identifier',
        [identifier.assigner.display]  NVARCHAR(4000)      '$.assigner.display'
    ) j

GO

CREATE VIEW fhir.ClaimRelated AS
SELECT
    [id],
    [related.JSON],
    [related.id],
    [related.extension],
    [related.modifierExtension],
    [related.claim.id],
    [related.claim.extension],
    [related.claim.reference],
    [related.claim.type],
    [related.claim.identifier],
    [related.claim.display],
    [related.relationship.id],
    [related.relationship.extension],
    [related.relationship.coding],
    [related.relationship.text],
    [related.reference.id],
    [related.reference.extension],
    [related.reference.use],
    [related.reference.type],
    [related.reference.system],
    [related.reference.value],
    [related.reference.period],
    [related.reference.assigner]
FROM openrowset (
        BULK 'Claim/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [related.JSON]  VARCHAR(MAX) '$.related'
    ) AS rowset
    CROSS APPLY openjson (rowset.[related.JSON]) with (
        [related.id]                   NVARCHAR(4000)      '$.id',
        [related.extension]            NVARCHAR(MAX)       '$.extension',
        [related.modifierExtension]    NVARCHAR(MAX)       '$.modifierExtension',
        [related.claim.id]             NVARCHAR(4000)      '$.claim.id',
        [related.claim.extension]      NVARCHAR(MAX)       '$.claim.extension',
        [related.claim.reference]      NVARCHAR(4000)      '$.claim.reference',
        [related.claim.type]           VARCHAR(256)        '$.claim.type',
        [related.claim.identifier]     NVARCHAR(MAX)       '$.claim.identifier',
        [related.claim.display]        NVARCHAR(4000)      '$.claim.display',
        [related.relationship.id]      NVARCHAR(4000)      '$.relationship.id',
        [related.relationship.extension] NVARCHAR(MAX)       '$.relationship.extension',
        [related.relationship.coding]  NVARCHAR(MAX)       '$.relationship.coding',
        [related.relationship.text]    NVARCHAR(4000)      '$.relationship.text',
        [related.reference.id]         NVARCHAR(4000)      '$.reference.id',
        [related.reference.extension]  NVARCHAR(MAX)       '$.reference.extension',
        [related.reference.use]        NVARCHAR(64)        '$.reference.use',
        [related.reference.type]       NVARCHAR(MAX)       '$.reference.type',
        [related.reference.system]     VARCHAR(256)        '$.reference.system',
        [related.reference.value]      NVARCHAR(4000)      '$.reference.value',
        [related.reference.period]     NVARCHAR(MAX)       '$.reference.period',
        [related.reference.assigner]   NVARCHAR(MAX)       '$.reference.assigner'
    ) j

GO

CREATE VIEW fhir.ClaimCareTeam AS
SELECT
    [id],
    [careTeam.JSON],
    [careTeam.id],
    [careTeam.extension],
    [careTeam.modifierExtension],
    [careTeam.sequence],
    [careTeam.provider.id],
    [careTeam.provider.extension],
    [careTeam.provider.reference],
    [careTeam.provider.type],
    [careTeam.provider.identifier],
    [careTeam.provider.display],
    [careTeam.responsible],
    [careTeam.role.id],
    [careTeam.role.extension],
    [careTeam.role.coding],
    [careTeam.role.text],
    [careTeam.qualification.id],
    [careTeam.qualification.extension],
    [careTeam.qualification.coding],
    [careTeam.qualification.text]
FROM openrowset (
        BULK 'Claim/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [careTeam.JSON]  VARCHAR(MAX) '$.careTeam'
    ) AS rowset
    CROSS APPLY openjson (rowset.[careTeam.JSON]) with (
        [careTeam.id]                  NVARCHAR(4000)      '$.id',
        [careTeam.extension]           NVARCHAR(MAX)       '$.extension',
        [careTeam.modifierExtension]   NVARCHAR(MAX)       '$.modifierExtension',
        [careTeam.sequence]            bigint              '$.sequence',
        [careTeam.provider.id]         NVARCHAR(4000)      '$.provider.id',
        [careTeam.provider.extension]  NVARCHAR(MAX)       '$.provider.extension',
        [careTeam.provider.reference]  NVARCHAR(4000)      '$.provider.reference',
        [careTeam.provider.type]       VARCHAR(256)        '$.provider.type',
        [careTeam.provider.identifier] NVARCHAR(MAX)       '$.provider.identifier',
        [careTeam.provider.display]    NVARCHAR(4000)      '$.provider.display',
        [careTeam.responsible]         bit                 '$.responsible',
        [careTeam.role.id]             NVARCHAR(4000)      '$.role.id',
        [careTeam.role.extension]      NVARCHAR(MAX)       '$.role.extension',
        [careTeam.role.coding]         NVARCHAR(MAX)       '$.role.coding',
        [careTeam.role.text]           NVARCHAR(4000)      '$.role.text',
        [careTeam.qualification.id]    NVARCHAR(4000)      '$.qualification.id',
        [careTeam.qualification.extension] NVARCHAR(MAX)       '$.qualification.extension',
        [careTeam.qualification.coding] NVARCHAR(MAX)       '$.qualification.coding',
        [careTeam.qualification.text]  NVARCHAR(4000)      '$.qualification.text'
    ) j

GO

CREATE VIEW fhir.ClaimSupportingInfo AS
SELECT
    [id],
    [supportingInfo.JSON],
    [supportingInfo.id],
    [supportingInfo.extension],
    [supportingInfo.modifierExtension],
    [supportingInfo.sequence],
    [supportingInfo.category.id],
    [supportingInfo.category.extension],
    [supportingInfo.category.coding],
    [supportingInfo.category.text],
    [supportingInfo.code.id],
    [supportingInfo.code.extension],
    [supportingInfo.code.coding],
    [supportingInfo.code.text],
    [supportingInfo.reason.id],
    [supportingInfo.reason.extension],
    [supportingInfo.reason.coding],
    [supportingInfo.reason.text],
    [supportingInfo.timing.date],
    [supportingInfo.timing.Period.id],
    [supportingInfo.timing.Period.extension],
    [supportingInfo.timing.Period.start],
    [supportingInfo.timing.Period.end],
    [supportingInfo.value.boolean],
    [supportingInfo.value.string],
    [supportingInfo.value.Quantity.id],
    [supportingInfo.value.Quantity.extension],
    [supportingInfo.value.Quantity.value],
    [supportingInfo.value.Quantity.comparator],
    [supportingInfo.value.Quantity.unit],
    [supportingInfo.value.Quantity.system],
    [supportingInfo.value.Quantity.code],
    [supportingInfo.value.Attachment.id],
    [supportingInfo.value.Attachment.extension],
    [supportingInfo.value.Attachment.contentType],
    [supportingInfo.value.Attachment.language],
    [supportingInfo.value.Attachment.data],
    [supportingInfo.value.Attachment.url],
    [supportingInfo.value.Attachment.size],
    [supportingInfo.value.Attachment.hash],
    [supportingInfo.value.Attachment.title],
    [supportingInfo.value.Attachment.creation],
    [supportingInfo.value.Reference.id],
    [supportingInfo.value.Reference.extension],
    [supportingInfo.value.Reference.reference],
    [supportingInfo.value.Reference.type],
    [supportingInfo.value.Reference.identifier],
    [supportingInfo.value.Reference.display]
FROM openrowset (
        BULK 'Claim/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [supportingInfo.JSON]  VARCHAR(MAX) '$.supportingInfo'
    ) AS rowset
    CROSS APPLY openjson (rowset.[supportingInfo.JSON]) with (
        [supportingInfo.id]            NVARCHAR(4000)      '$.id',
        [supportingInfo.extension]     NVARCHAR(MAX)       '$.extension',
        [supportingInfo.modifierExtension] NVARCHAR(MAX)       '$.modifierExtension',
        [supportingInfo.sequence]      bigint              '$.sequence',
        [supportingInfo.category.id]   NVARCHAR(4000)      '$.category.id',
        [supportingInfo.category.extension] NVARCHAR(MAX)       '$.category.extension',
        [supportingInfo.category.coding] NVARCHAR(MAX)       '$.category.coding',
        [supportingInfo.category.text] NVARCHAR(4000)      '$.category.text',
        [supportingInfo.code.id]       NVARCHAR(4000)      '$.code.id',
        [supportingInfo.code.extension] NVARCHAR(MAX)       '$.code.extension',
        [supportingInfo.code.coding]   NVARCHAR(MAX)       '$.code.coding',
        [supportingInfo.code.text]     NVARCHAR(4000)      '$.code.text',
        [supportingInfo.reason.id]     NVARCHAR(4000)      '$.reason.id',
        [supportingInfo.reason.extension] NVARCHAR(MAX)       '$.reason.extension',
        [supportingInfo.reason.coding] NVARCHAR(MAX)       '$.reason.coding',
        [supportingInfo.reason.text]   NVARCHAR(4000)      '$.reason.text',
        [supportingInfo.timing.date]   VARCHAR(10)         '$.timing.date',
        [supportingInfo.timing.Period.id] NVARCHAR(4000)      '$.timing.Period.id',
        [supportingInfo.timing.Period.extension] NVARCHAR(MAX)       '$.timing.Period.extension',
        [supportingInfo.timing.Period.start] VARCHAR(30)         '$.timing.Period.start',
        [supportingInfo.timing.Period.end] VARCHAR(30)         '$.timing.Period.end',
        [supportingInfo.value.boolean] bit                 '$.value.boolean',
        [supportingInfo.value.string]  NVARCHAR(4000)      '$.value.string',
        [supportingInfo.value.Quantity.id] NVARCHAR(4000)      '$.value.Quantity.id',
        [supportingInfo.value.Quantity.extension] NVARCHAR(MAX)       '$.value.Quantity.extension',
        [supportingInfo.value.Quantity.value] float               '$.value.Quantity.value',
        [supportingInfo.value.Quantity.comparator] NVARCHAR(64)        '$.value.Quantity.comparator',
        [supportingInfo.value.Quantity.unit] NVARCHAR(4000)      '$.value.Quantity.unit',
        [supportingInfo.value.Quantity.system] VARCHAR(256)        '$.value.Quantity.system',
        [supportingInfo.value.Quantity.code] NVARCHAR(4000)      '$.value.Quantity.code',
        [supportingInfo.value.Attachment.id] NVARCHAR(4000)      '$.value.Attachment.id',
        [supportingInfo.value.Attachment.extension] NVARCHAR(MAX)       '$.value.Attachment.extension',
        [supportingInfo.value.Attachment.contentType] NVARCHAR(4000)      '$.value.Attachment.contentType',
        [supportingInfo.value.Attachment.language] NVARCHAR(4000)      '$.value.Attachment.language',
        [supportingInfo.value.Attachment.data] NVARCHAR(MAX)       '$.value.Attachment.data',
        [supportingInfo.value.Attachment.url] VARCHAR(256)        '$.value.Attachment.url',
        [supportingInfo.value.Attachment.size] bigint              '$.value.Attachment.size',
        [supportingInfo.value.Attachment.hash] NVARCHAR(MAX)       '$.value.Attachment.hash',
        [supportingInfo.value.Attachment.title] NVARCHAR(4000)      '$.value.Attachment.title',
        [supportingInfo.value.Attachment.creation] VARCHAR(30)         '$.value.Attachment.creation',
        [supportingInfo.value.Reference.id] NVARCHAR(4000)      '$.value.Reference.id',
        [supportingInfo.value.Reference.extension] NVARCHAR(MAX)       '$.value.Reference.extension',
        [supportingInfo.value.Reference.reference] NVARCHAR(4000)      '$.value.Reference.reference',
        [supportingInfo.value.Reference.type] VARCHAR(256)        '$.value.Reference.type',
        [supportingInfo.value.Reference.identifier] NVARCHAR(MAX)       '$.value.Reference.identifier',
        [supportingInfo.value.Reference.display] NVARCHAR(4000)      '$.value.Reference.display'
    ) j

GO

CREATE VIEW fhir.ClaimDiagnosis AS
SELECT
    [id],
    [diagnosis.JSON],
    [diagnosis.id],
    [diagnosis.extension],
    [diagnosis.modifierExtension],
    [diagnosis.sequence],
    [diagnosis.type],
    [diagnosis.onAdmission.id],
    [diagnosis.onAdmission.extension],
    [diagnosis.onAdmission.coding],
    [diagnosis.onAdmission.text],
    [diagnosis.packageCode.id],
    [diagnosis.packageCode.extension],
    [diagnosis.packageCode.coding],
    [diagnosis.packageCode.text],
    [diagnosis.diagnosis.CodeableConcept.id],
    [diagnosis.diagnosis.CodeableConcept.extension],
    [diagnosis.diagnosis.CodeableConcept.coding],
    [diagnosis.diagnosis.CodeableConcept.text],
    [diagnosis.diagnosis.Reference.id],
    [diagnosis.diagnosis.Reference.extension],
    [diagnosis.diagnosis.Reference.reference],
    [diagnosis.diagnosis.Reference.type],
    [diagnosis.diagnosis.Reference.identifier],
    [diagnosis.diagnosis.Reference.display]
FROM openrowset (
        BULK 'Claim/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [diagnosis.JSON]  VARCHAR(MAX) '$.diagnosis'
    ) AS rowset
    CROSS APPLY openjson (rowset.[diagnosis.JSON]) with (
        [diagnosis.id]                 NVARCHAR(4000)      '$.id',
        [diagnosis.extension]          NVARCHAR(MAX)       '$.extension',
        [diagnosis.modifierExtension]  NVARCHAR(MAX)       '$.modifierExtension',
        [diagnosis.sequence]           bigint              '$.sequence',
        [diagnosis.type]               NVARCHAR(MAX)       '$.type' AS JSON,
        [diagnosis.onAdmission.id]     NVARCHAR(4000)      '$.onAdmission.id',
        [diagnosis.onAdmission.extension] NVARCHAR(MAX)       '$.onAdmission.extension',
        [diagnosis.onAdmission.coding] NVARCHAR(MAX)       '$.onAdmission.coding',
        [diagnosis.onAdmission.text]   NVARCHAR(4000)      '$.onAdmission.text',
        [diagnosis.packageCode.id]     NVARCHAR(4000)      '$.packageCode.id',
        [diagnosis.packageCode.extension] NVARCHAR(MAX)       '$.packageCode.extension',
        [diagnosis.packageCode.coding] NVARCHAR(MAX)       '$.packageCode.coding',
        [diagnosis.packageCode.text]   NVARCHAR(4000)      '$.packageCode.text',
        [diagnosis.diagnosis.CodeableConcept.id] NVARCHAR(4000)      '$.diagnosis.CodeableConcept.id',
        [diagnosis.diagnosis.CodeableConcept.extension] NVARCHAR(MAX)       '$.diagnosis.CodeableConcept.extension',
        [diagnosis.diagnosis.CodeableConcept.coding] NVARCHAR(MAX)       '$.diagnosis.CodeableConcept.coding',
        [diagnosis.diagnosis.CodeableConcept.text] NVARCHAR(4000)      '$.diagnosis.CodeableConcept.text',
        [diagnosis.diagnosis.Reference.id] NVARCHAR(4000)      '$.diagnosis.Reference.id',
        [diagnosis.diagnosis.Reference.extension] NVARCHAR(MAX)       '$.diagnosis.Reference.extension',
        [diagnosis.diagnosis.Reference.reference] NVARCHAR(4000)      '$.diagnosis.Reference.reference',
        [diagnosis.diagnosis.Reference.type] VARCHAR(256)        '$.diagnosis.Reference.type',
        [diagnosis.diagnosis.Reference.identifier] NVARCHAR(MAX)       '$.diagnosis.Reference.identifier',
        [diagnosis.diagnosis.Reference.display] NVARCHAR(4000)      '$.diagnosis.Reference.display'
    ) j

GO

CREATE VIEW fhir.ClaimProcedure AS
SELECT
    [id],
    [procedure.JSON],
    [procedure.id],
    [procedure.extension],
    [procedure.modifierExtension],
    [procedure.sequence],
    [procedure.type],
    [procedure.date],
    [procedure.udi],
    [procedure.procedure.CodeableConcept.id],
    [procedure.procedure.CodeableConcept.extension],
    [procedure.procedure.CodeableConcept.coding],
    [procedure.procedure.CodeableConcept.text],
    [procedure.procedure.Reference.id],
    [procedure.procedure.Reference.extension],
    [procedure.procedure.Reference.reference],
    [procedure.procedure.Reference.type],
    [procedure.procedure.Reference.identifier],
    [procedure.procedure.Reference.display]
FROM openrowset (
        BULK 'Claim/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [procedure.JSON]  VARCHAR(MAX) '$.procedure'
    ) AS rowset
    CROSS APPLY openjson (rowset.[procedure.JSON]) with (
        [procedure.id]                 NVARCHAR(4000)      '$.id',
        [procedure.extension]          NVARCHAR(MAX)       '$.extension',
        [procedure.modifierExtension]  NVARCHAR(MAX)       '$.modifierExtension',
        [procedure.sequence]           bigint              '$.sequence',
        [procedure.type]               NVARCHAR(MAX)       '$.type' AS JSON,
        [procedure.date]               VARCHAR(30)         '$.date',
        [procedure.udi]                NVARCHAR(MAX)       '$.udi' AS JSON,
        [procedure.procedure.CodeableConcept.id] NVARCHAR(4000)      '$.procedure.CodeableConcept.id',
        [procedure.procedure.CodeableConcept.extension] NVARCHAR(MAX)       '$.procedure.CodeableConcept.extension',
        [procedure.procedure.CodeableConcept.coding] NVARCHAR(MAX)       '$.procedure.CodeableConcept.coding',
        [procedure.procedure.CodeableConcept.text] NVARCHAR(4000)      '$.procedure.CodeableConcept.text',
        [procedure.procedure.Reference.id] NVARCHAR(4000)      '$.procedure.Reference.id',
        [procedure.procedure.Reference.extension] NVARCHAR(MAX)       '$.procedure.Reference.extension',
        [procedure.procedure.Reference.reference] NVARCHAR(4000)      '$.procedure.Reference.reference',
        [procedure.procedure.Reference.type] VARCHAR(256)        '$.procedure.Reference.type',
        [procedure.procedure.Reference.identifier] NVARCHAR(MAX)       '$.procedure.Reference.identifier',
        [procedure.procedure.Reference.display] NVARCHAR(4000)      '$.procedure.Reference.display'
    ) j

GO

CREATE VIEW fhir.ClaimInsurance AS
SELECT
    [id],
    [insurance.JSON],
    [insurance.id],
    [insurance.extension],
    [insurance.modifierExtension],
    [insurance.sequence],
    [insurance.focal],
    [insurance.identifier.id],
    [insurance.identifier.extension],
    [insurance.identifier.use],
    [insurance.identifier.type],
    [insurance.identifier.system],
    [insurance.identifier.value],
    [insurance.identifier.period],
    [insurance.identifier.assigner],
    [insurance.coverage.id],
    [insurance.coverage.extension],
    [insurance.coverage.reference],
    [insurance.coverage.type],
    [insurance.coverage.identifier],
    [insurance.coverage.display],
    [insurance.businessArrangement],
    [insurance.preAuthRef],
    [insurance.claimResponse.id],
    [insurance.claimResponse.extension],
    [insurance.claimResponse.reference],
    [insurance.claimResponse.type],
    [insurance.claimResponse.identifier],
    [insurance.claimResponse.display]
FROM openrowset (
        BULK 'Claim/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [insurance.JSON]  VARCHAR(MAX) '$.insurance'
    ) AS rowset
    CROSS APPLY openjson (rowset.[insurance.JSON]) with (
        [insurance.id]                 NVARCHAR(4000)      '$.id',
        [insurance.extension]          NVARCHAR(MAX)       '$.extension',
        [insurance.modifierExtension]  NVARCHAR(MAX)       '$.modifierExtension',
        [insurance.sequence]           bigint              '$.sequence',
        [insurance.focal]              bit                 '$.focal',
        [insurance.identifier.id]      NVARCHAR(4000)      '$.identifier.id',
        [insurance.identifier.extension] NVARCHAR(MAX)       '$.identifier.extension',
        [insurance.identifier.use]     NVARCHAR(64)        '$.identifier.use',
        [insurance.identifier.type]    NVARCHAR(MAX)       '$.identifier.type',
        [insurance.identifier.system]  VARCHAR(256)        '$.identifier.system',
        [insurance.identifier.value]   NVARCHAR(4000)      '$.identifier.value',
        [insurance.identifier.period]  NVARCHAR(MAX)       '$.identifier.period',
        [insurance.identifier.assigner] NVARCHAR(MAX)       '$.identifier.assigner',
        [insurance.coverage.id]        NVARCHAR(4000)      '$.coverage.id',
        [insurance.coverage.extension] NVARCHAR(MAX)       '$.coverage.extension',
        [insurance.coverage.reference] NVARCHAR(4000)      '$.coverage.reference',
        [insurance.coverage.type]      VARCHAR(256)        '$.coverage.type',
        [insurance.coverage.identifier] NVARCHAR(MAX)       '$.coverage.identifier',
        [insurance.coverage.display]   NVARCHAR(4000)      '$.coverage.display',
        [insurance.businessArrangement] NVARCHAR(4000)      '$.businessArrangement',
        [insurance.preAuthRef]         NVARCHAR(MAX)       '$.preAuthRef' AS JSON,
        [insurance.claimResponse.id]   NVARCHAR(4000)      '$.claimResponse.id',
        [insurance.claimResponse.extension] NVARCHAR(MAX)       '$.claimResponse.extension',
        [insurance.claimResponse.reference] NVARCHAR(4000)      '$.claimResponse.reference',
        [insurance.claimResponse.type] VARCHAR(256)        '$.claimResponse.type',
        [insurance.claimResponse.identifier] NVARCHAR(MAX)       '$.claimResponse.identifier',
        [insurance.claimResponse.display] NVARCHAR(4000)      '$.claimResponse.display'
    ) j

GO

CREATE VIEW fhir.ClaimItem AS
SELECT
    [id],
    [item.JSON],
    [item.id],
    [item.extension],
    [item.modifierExtension],
    [item.sequence],
    [item.careTeamSequence],
    [item.diagnosisSequence],
    [item.procedureSequence],
    [item.informationSequence],
    [item.revenue.id],
    [item.revenue.extension],
    [item.revenue.coding],
    [item.revenue.text],
    [item.category.id],
    [item.category.extension],
    [item.category.coding],
    [item.category.text],
    [item.productOrService.id],
    [item.productOrService.extension],
    [item.productOrService.coding],
    [item.productOrService.text],
    [item.modifier],
    [item.programCode],
    [item.quantity.id],
    [item.quantity.extension],
    [item.quantity.value],
    [item.quantity.comparator],
    [item.quantity.unit],
    [item.quantity.system],
    [item.quantity.code],
    [item.unitPrice.id],
    [item.unitPrice.extension],
    [item.unitPrice.value],
    [item.unitPrice.currency],
    [item.factor],
    [item.net.id],
    [item.net.extension],
    [item.net.value],
    [item.net.currency],
    [item.udi],
    [item.bodySite.id],
    [item.bodySite.extension],
    [item.bodySite.coding],
    [item.bodySite.text],
    [item.subSite],
    [item.encounter],
    [item.detail],
    [item.serviced.date],
    [item.serviced.Period.id],
    [item.serviced.Period.extension],
    [item.serviced.Period.start],
    [item.serviced.Period.end],
    [item.location.CodeableConcept.id],
    [item.location.CodeableConcept.extension],
    [item.location.CodeableConcept.coding],
    [item.location.CodeableConcept.text],
    [item.location.Address.id],
    [item.location.Address.extension],
    [item.location.Address.use],
    [item.location.Address.type],
    [item.location.Address.text],
    [item.location.Address.line],
    [item.location.Address.city],
    [item.location.Address.district],
    [item.location.Address.state],
    [item.location.Address.postalCode],
    [item.location.Address.country],
    [item.location.Address.period],
    [item.location.Reference.id],
    [item.location.Reference.extension],
    [item.location.Reference.reference],
    [item.location.Reference.type],
    [item.location.Reference.identifier],
    [item.location.Reference.display]
FROM openrowset (
        BULK 'Claim/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [item.JSON]  VARCHAR(MAX) '$.item'
    ) AS rowset
    CROSS APPLY openjson (rowset.[item.JSON]) with (
        [item.id]                      NVARCHAR(4000)      '$.id',
        [item.extension]               NVARCHAR(MAX)       '$.extension',
        [item.modifierExtension]       NVARCHAR(MAX)       '$.modifierExtension',
        [item.sequence]                bigint              '$.sequence',
        [item.careTeamSequence]        NVARCHAR(MAX)       '$.careTeamSequence' AS JSON,
        [item.diagnosisSequence]       NVARCHAR(MAX)       '$.diagnosisSequence' AS JSON,
        [item.procedureSequence]       NVARCHAR(MAX)       '$.procedureSequence' AS JSON,
        [item.informationSequence]     NVARCHAR(MAX)       '$.informationSequence' AS JSON,
        [item.revenue.id]              NVARCHAR(4000)      '$.revenue.id',
        [item.revenue.extension]       NVARCHAR(MAX)       '$.revenue.extension',
        [item.revenue.coding]          NVARCHAR(MAX)       '$.revenue.coding',
        [item.revenue.text]            NVARCHAR(4000)      '$.revenue.text',
        [item.category.id]             NVARCHAR(4000)      '$.category.id',
        [item.category.extension]      NVARCHAR(MAX)       '$.category.extension',
        [item.category.coding]         NVARCHAR(MAX)       '$.category.coding',
        [item.category.text]           NVARCHAR(4000)      '$.category.text',
        [item.productOrService.id]     NVARCHAR(4000)      '$.productOrService.id',
        [item.productOrService.extension] NVARCHAR(MAX)       '$.productOrService.extension',
        [item.productOrService.coding] NVARCHAR(MAX)       '$.productOrService.coding',
        [item.productOrService.text]   NVARCHAR(4000)      '$.productOrService.text',
        [item.modifier]                NVARCHAR(MAX)       '$.modifier' AS JSON,
        [item.programCode]             NVARCHAR(MAX)       '$.programCode' AS JSON,
        [item.quantity.id]             NVARCHAR(4000)      '$.quantity.id',
        [item.quantity.extension]      NVARCHAR(MAX)       '$.quantity.extension',
        [item.quantity.value]          float               '$.quantity.value',
        [item.quantity.comparator]     NVARCHAR(64)        '$.quantity.comparator',
        [item.quantity.unit]           NVARCHAR(4000)      '$.quantity.unit',
        [item.quantity.system]         VARCHAR(256)        '$.quantity.system',
        [item.quantity.code]           NVARCHAR(4000)      '$.quantity.code',
        [item.unitPrice.id]            NVARCHAR(4000)      '$.unitPrice.id',
        [item.unitPrice.extension]     NVARCHAR(MAX)       '$.unitPrice.extension',
        [item.unitPrice.value]         float               '$.unitPrice.value',
        [item.unitPrice.currency]      NVARCHAR(4000)      '$.unitPrice.currency',
        [item.factor]                  float               '$.factor',
        [item.net.id]                  NVARCHAR(4000)      '$.net.id',
        [item.net.extension]           NVARCHAR(MAX)       '$.net.extension',
        [item.net.value]               float               '$.net.value',
        [item.net.currency]            NVARCHAR(4000)      '$.net.currency',
        [item.udi]                     NVARCHAR(MAX)       '$.udi' AS JSON,
        [item.bodySite.id]             NVARCHAR(4000)      '$.bodySite.id',
        [item.bodySite.extension]      NVARCHAR(MAX)       '$.bodySite.extension',
        [item.bodySite.coding]         NVARCHAR(MAX)       '$.bodySite.coding',
        [item.bodySite.text]           NVARCHAR(4000)      '$.bodySite.text',
        [item.subSite]                 NVARCHAR(MAX)       '$.subSite' AS JSON,
        [item.encounter]               NVARCHAR(MAX)       '$.encounter' AS JSON,
        [item.detail]                  NVARCHAR(MAX)       '$.detail' AS JSON,
        [item.serviced.date]           VARCHAR(10)         '$.serviced.date',
        [item.serviced.Period.id]      NVARCHAR(4000)      '$.serviced.Period.id',
        [item.serviced.Period.extension] NVARCHAR(MAX)       '$.serviced.Period.extension',
        [item.serviced.Period.start]   VARCHAR(30)         '$.serviced.Period.start',
        [item.serviced.Period.end]     VARCHAR(30)         '$.serviced.Period.end',
        [item.location.CodeableConcept.id] NVARCHAR(4000)      '$.location.CodeableConcept.id',
        [item.location.CodeableConcept.extension] NVARCHAR(MAX)       '$.location.CodeableConcept.extension',
        [item.location.CodeableConcept.coding] NVARCHAR(MAX)       '$.location.CodeableConcept.coding',
        [item.location.CodeableConcept.text] NVARCHAR(4000)      '$.location.CodeableConcept.text',
        [item.location.Address.id]     NVARCHAR(4000)      '$.location.Address.id',
        [item.location.Address.extension] NVARCHAR(MAX)       '$.location.Address.extension',
        [item.location.Address.use]    NVARCHAR(64)        '$.location.Address.use',
        [item.location.Address.type]   NVARCHAR(64)        '$.location.Address.type',
        [item.location.Address.text]   NVARCHAR(4000)      '$.location.Address.text',
        [item.location.Address.line]   NVARCHAR(MAX)       '$.location.Address.line',
        [item.location.Address.city]   NVARCHAR(4000)      '$.location.Address.city',
        [item.location.Address.district] NVARCHAR(4000)      '$.location.Address.district',
        [item.location.Address.state]  NVARCHAR(4000)      '$.location.Address.state',
        [item.location.Address.postalCode] NVARCHAR(4000)      '$.location.Address.postalCode',
        [item.location.Address.country] NVARCHAR(4000)      '$.location.Address.country',
        [item.location.Address.period] NVARCHAR(MAX)       '$.location.Address.period',
        [item.location.Reference.id]   NVARCHAR(4000)      '$.location.Reference.id',
        [item.location.Reference.extension] NVARCHAR(MAX)       '$.location.Reference.extension',
        [item.location.Reference.reference] NVARCHAR(4000)      '$.location.Reference.reference',
        [item.location.Reference.type] VARCHAR(256)        '$.location.Reference.type',
        [item.location.Reference.identifier] NVARCHAR(MAX)       '$.location.Reference.identifier',
        [item.location.Reference.display] NVARCHAR(4000)      '$.location.Reference.display'
    ) j
