CREATE EXTERNAL TABLE [fhir].[Task] (
    [resourceType] NVARCHAR(4000),
    [id] VARCHAR(64),
    [meta.id] NVARCHAR(4000),
    [meta.extension] NVARCHAR(MAX),
    [meta.versionId] VARCHAR(64),
    [meta.lastUpdated] VARCHAR(30),
    [meta.source] VARCHAR(256),
    [meta.profile] VARCHAR(MAX),
    [meta.security] VARCHAR(MAX),
    [meta.tag] VARCHAR(MAX),
    [implicitRules] VARCHAR(256),
    [language] NVARCHAR(4000),
    [text.id] NVARCHAR(4000),
    [text.extension] NVARCHAR(MAX),
    [text.status] NVARCHAR(64),
    [text.div] NVARCHAR(MAX),
    [extension] NVARCHAR(MAX),
    [modifierExtension] NVARCHAR(MAX),
    [identifier] VARCHAR(MAX),
    [instantiatesCanonical] VARCHAR(256),
    [instantiatesUri] VARCHAR(256),
    [basedOn] VARCHAR(MAX),
    [groupIdentifier.id] NVARCHAR(4000),
    [groupIdentifier.extension] NVARCHAR(MAX),
    [groupIdentifier.use] NVARCHAR(64),
    [groupIdentifier.type.id] NVARCHAR(4000),
    [groupIdentifier.type.extension] NVARCHAR(MAX),
    [groupIdentifier.type.coding] NVARCHAR(MAX),
    [groupIdentifier.type.text] NVARCHAR(4000),
    [groupIdentifier.system] VARCHAR(256),
    [groupIdentifier.value] NVARCHAR(4000),
    [groupIdentifier.period.id] NVARCHAR(4000),
    [groupIdentifier.period.extension] NVARCHAR(MAX),
    [groupIdentifier.period.start] VARCHAR(30),
    [groupIdentifier.period.end] VARCHAR(30),
    [groupIdentifier.assigner.id] NVARCHAR(4000),
    [groupIdentifier.assigner.extension] NVARCHAR(MAX),
    [groupIdentifier.assigner.reference] NVARCHAR(4000),
    [groupIdentifier.assigner.type] VARCHAR(256),
    [groupIdentifier.assigner.identifier] NVARCHAR(MAX),
    [groupIdentifier.assigner.display] NVARCHAR(4000),
    [partOf] VARCHAR(MAX),
    [status] NVARCHAR(64),
    [statusReason.id] NVARCHAR(4000),
    [statusReason.extension] NVARCHAR(MAX),
    [statusReason.coding] VARCHAR(MAX),
    [statusReason.text] NVARCHAR(4000),
    [businessStatus.id] NVARCHAR(4000),
    [businessStatus.extension] NVARCHAR(MAX),
    [businessStatus.coding] VARCHAR(MAX),
    [businessStatus.text] NVARCHAR(4000),
    [intent] NVARCHAR(64),
    [priority] NVARCHAR(4000),
    [code.id] NVARCHAR(4000),
    [code.extension] NVARCHAR(MAX),
    [code.coding] VARCHAR(MAX),
    [code.text] NVARCHAR(4000),
    [description] NVARCHAR(4000),
    [focus.id] NVARCHAR(4000),
    [focus.extension] NVARCHAR(MAX),
    [focus.reference] NVARCHAR(4000),
    [focus.type] VARCHAR(256),
    [focus.identifier.id] NVARCHAR(4000),
    [focus.identifier.extension] NVARCHAR(MAX),
    [focus.identifier.use] NVARCHAR(64),
    [focus.identifier.type] NVARCHAR(MAX),
    [focus.identifier.system] VARCHAR(256),
    [focus.identifier.value] NVARCHAR(4000),
    [focus.identifier.period] NVARCHAR(MAX),
    [focus.identifier.assigner] NVARCHAR(MAX),
    [focus.display] NVARCHAR(4000),
    [for.id] NVARCHAR(4000),
    [for.extension] NVARCHAR(MAX),
    [for.reference] NVARCHAR(4000),
    [for.type] VARCHAR(256),
    [for.identifier.id] NVARCHAR(4000),
    [for.identifier.extension] NVARCHAR(MAX),
    [for.identifier.use] NVARCHAR(64),
    [for.identifier.type] NVARCHAR(MAX),
    [for.identifier.system] VARCHAR(256),
    [for.identifier.value] NVARCHAR(4000),
    [for.identifier.period] NVARCHAR(MAX),
    [for.identifier.assigner] NVARCHAR(MAX),
    [for.display] NVARCHAR(4000),
    [encounter.id] NVARCHAR(4000),
    [encounter.extension] NVARCHAR(MAX),
    [encounter.reference] NVARCHAR(4000),
    [encounter.type] VARCHAR(256),
    [encounter.identifier.id] NVARCHAR(4000),
    [encounter.identifier.extension] NVARCHAR(MAX),
    [encounter.identifier.use] NVARCHAR(64),
    [encounter.identifier.type] NVARCHAR(MAX),
    [encounter.identifier.system] VARCHAR(256),
    [encounter.identifier.value] NVARCHAR(4000),
    [encounter.identifier.period] NVARCHAR(MAX),
    [encounter.identifier.assigner] NVARCHAR(MAX),
    [encounter.display] NVARCHAR(4000),
    [executionPeriod.id] NVARCHAR(4000),
    [executionPeriod.extension] NVARCHAR(MAX),
    [executionPeriod.start] VARCHAR(30),
    [executionPeriod.end] VARCHAR(30),
    [authoredOn] VARCHAR(30),
    [lastModified] VARCHAR(30),
    [requester.id] NVARCHAR(4000),
    [requester.extension] NVARCHAR(MAX),
    [requester.reference] NVARCHAR(4000),
    [requester.type] VARCHAR(256),
    [requester.identifier.id] NVARCHAR(4000),
    [requester.identifier.extension] NVARCHAR(MAX),
    [requester.identifier.use] NVARCHAR(64),
    [requester.identifier.type] NVARCHAR(MAX),
    [requester.identifier.system] VARCHAR(256),
    [requester.identifier.value] NVARCHAR(4000),
    [requester.identifier.period] NVARCHAR(MAX),
    [requester.identifier.assigner] NVARCHAR(MAX),
    [requester.display] NVARCHAR(4000),
    [performerType] VARCHAR(MAX),
    [owner.id] NVARCHAR(4000),
    [owner.extension] NVARCHAR(MAX),
    [owner.reference] NVARCHAR(4000),
    [owner.type] VARCHAR(256),
    [owner.identifier.id] NVARCHAR(4000),
    [owner.identifier.extension] NVARCHAR(MAX),
    [owner.identifier.use] NVARCHAR(64),
    [owner.identifier.type] NVARCHAR(MAX),
    [owner.identifier.system] VARCHAR(256),
    [owner.identifier.value] NVARCHAR(4000),
    [owner.identifier.period] NVARCHAR(MAX),
    [owner.identifier.assigner] NVARCHAR(MAX),
    [owner.display] NVARCHAR(4000),
    [location.id] NVARCHAR(4000),
    [location.extension] NVARCHAR(MAX),
    [location.reference] NVARCHAR(4000),
    [location.type] VARCHAR(256),
    [location.identifier.id] NVARCHAR(4000),
    [location.identifier.extension] NVARCHAR(MAX),
    [location.identifier.use] NVARCHAR(64),
    [location.identifier.type] NVARCHAR(MAX),
    [location.identifier.system] VARCHAR(256),
    [location.identifier.value] NVARCHAR(4000),
    [location.identifier.period] NVARCHAR(MAX),
    [location.identifier.assigner] NVARCHAR(MAX),
    [location.display] NVARCHAR(4000),
    [reasonCode.id] NVARCHAR(4000),
    [reasonCode.extension] NVARCHAR(MAX),
    [reasonCode.coding] VARCHAR(MAX),
    [reasonCode.text] NVARCHAR(4000),
    [reasonReference.id] NVARCHAR(4000),
    [reasonReference.extension] NVARCHAR(MAX),
    [reasonReference.reference] NVARCHAR(4000),
    [reasonReference.type] VARCHAR(256),
    [reasonReference.identifier.id] NVARCHAR(4000),
    [reasonReference.identifier.extension] NVARCHAR(MAX),
    [reasonReference.identifier.use] NVARCHAR(64),
    [reasonReference.identifier.type] NVARCHAR(MAX),
    [reasonReference.identifier.system] VARCHAR(256),
    [reasonReference.identifier.value] NVARCHAR(4000),
    [reasonReference.identifier.period] NVARCHAR(MAX),
    [reasonReference.identifier.assigner] NVARCHAR(MAX),
    [reasonReference.display] NVARCHAR(4000),
    [insurance] VARCHAR(MAX),
    [note] VARCHAR(MAX),
    [relevantHistory] VARCHAR(MAX),
    [restriction.id] NVARCHAR(4000),
    [restriction.extension] NVARCHAR(MAX),
    [restriction.modifierExtension] NVARCHAR(MAX),
    [restriction.repetitions] bigint,
    [restriction.period.id] NVARCHAR(4000),
    [restriction.period.extension] NVARCHAR(MAX),
    [restriction.period.start] VARCHAR(30),
    [restriction.period.end] VARCHAR(30),
    [restriction.recipient] VARCHAR(MAX),
    [input] VARCHAR(MAX),
    [output] VARCHAR(MAX),
) WITH (
    LOCATION='/Task/**',
    DATA_SOURCE = ParquetSource,
    FILE_FORMAT = ParquetFormat
);

GO

CREATE VIEW fhir.TaskIdentifier AS
SELECT
    [id],
    [identifier.JSON],
    [identifier.id],
    [identifier.extension],
    [identifier.use],
    [identifier.type.id],
    [identifier.type.extension],
    [identifier.type.coding],
    [identifier.type.text],
    [identifier.system],
    [identifier.value],
    [identifier.period.id],
    [identifier.period.extension],
    [identifier.period.start],
    [identifier.period.end],
    [identifier.assigner.id],
    [identifier.assigner.extension],
    [identifier.assigner.reference],
    [identifier.assigner.type],
    [identifier.assigner.identifier],
    [identifier.assigner.display]
FROM openrowset (
        BULK 'Task/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [identifier.JSON]  VARCHAR(MAX) '$.identifier'
    ) AS rowset
    CROSS APPLY openjson (rowset.[identifier.JSON]) with (
        [identifier.id]                NVARCHAR(4000)      '$.id',
        [identifier.extension]         NVARCHAR(MAX)       '$.extension',
        [identifier.use]               NVARCHAR(64)        '$.use',
        [identifier.type.id]           NVARCHAR(4000)      '$.type.id',
        [identifier.type.extension]    NVARCHAR(MAX)       '$.type.extension',
        [identifier.type.coding]       NVARCHAR(MAX)       '$.type.coding',
        [identifier.type.text]         NVARCHAR(4000)      '$.type.text',
        [identifier.system]            VARCHAR(256)        '$.system',
        [identifier.value]             NVARCHAR(4000)      '$.value',
        [identifier.period.id]         NVARCHAR(4000)      '$.period.id',
        [identifier.period.extension]  NVARCHAR(MAX)       '$.period.extension',
        [identifier.period.start]      VARCHAR(30)         '$.period.start',
        [identifier.period.end]        VARCHAR(30)         '$.period.end',
        [identifier.assigner.id]       NVARCHAR(4000)      '$.assigner.id',
        [identifier.assigner.extension] NVARCHAR(MAX)       '$.assigner.extension',
        [identifier.assigner.reference] NVARCHAR(4000)      '$.assigner.reference',
        [identifier.assigner.type]     VARCHAR(256)        '$.assigner.type',
        [identifier.assigner.identifier] NVARCHAR(MAX)       '$.assigner.identifier',
        [identifier.assigner.display]  NVARCHAR(4000)      '$.assigner.display'
    ) j

GO

CREATE VIEW fhir.TaskBasedOn AS
SELECT
    [id],
    [basedOn.JSON],
    [basedOn.id],
    [basedOn.extension],
    [basedOn.reference],
    [basedOn.type],
    [basedOn.identifier.id],
    [basedOn.identifier.extension],
    [basedOn.identifier.use],
    [basedOn.identifier.type],
    [basedOn.identifier.system],
    [basedOn.identifier.value],
    [basedOn.identifier.period],
    [basedOn.identifier.assigner],
    [basedOn.display]
FROM openrowset (
        BULK 'Task/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [basedOn.JSON]  VARCHAR(MAX) '$.basedOn'
    ) AS rowset
    CROSS APPLY openjson (rowset.[basedOn.JSON]) with (
        [basedOn.id]                   NVARCHAR(4000)      '$.id',
        [basedOn.extension]            NVARCHAR(MAX)       '$.extension',
        [basedOn.reference]            NVARCHAR(4000)      '$.reference',
        [basedOn.type]                 VARCHAR(256)        '$.type',
        [basedOn.identifier.id]        NVARCHAR(4000)      '$.identifier.id',
        [basedOn.identifier.extension] NVARCHAR(MAX)       '$.identifier.extension',
        [basedOn.identifier.use]       NVARCHAR(64)        '$.identifier.use',
        [basedOn.identifier.type]      NVARCHAR(MAX)       '$.identifier.type',
        [basedOn.identifier.system]    VARCHAR(256)        '$.identifier.system',
        [basedOn.identifier.value]     NVARCHAR(4000)      '$.identifier.value',
        [basedOn.identifier.period]    NVARCHAR(MAX)       '$.identifier.period',
        [basedOn.identifier.assigner]  NVARCHAR(MAX)       '$.identifier.assigner',
        [basedOn.display]              NVARCHAR(4000)      '$.display'
    ) j

GO

CREATE VIEW fhir.TaskPartOf AS
SELECT
    [id],
    [partOf.JSON],
    [partOf.id],
    [partOf.extension],
    [partOf.reference],
    [partOf.type],
    [partOf.identifier.id],
    [partOf.identifier.extension],
    [partOf.identifier.use],
    [partOf.identifier.type],
    [partOf.identifier.system],
    [partOf.identifier.value],
    [partOf.identifier.period],
    [partOf.identifier.assigner],
    [partOf.display]
FROM openrowset (
        BULK 'Task/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [partOf.JSON]  VARCHAR(MAX) '$.partOf'
    ) AS rowset
    CROSS APPLY openjson (rowset.[partOf.JSON]) with (
        [partOf.id]                    NVARCHAR(4000)      '$.id',
        [partOf.extension]             NVARCHAR(MAX)       '$.extension',
        [partOf.reference]             NVARCHAR(4000)      '$.reference',
        [partOf.type]                  VARCHAR(256)        '$.type',
        [partOf.identifier.id]         NVARCHAR(4000)      '$.identifier.id',
        [partOf.identifier.extension]  NVARCHAR(MAX)       '$.identifier.extension',
        [partOf.identifier.use]        NVARCHAR(64)        '$.identifier.use',
        [partOf.identifier.type]       NVARCHAR(MAX)       '$.identifier.type',
        [partOf.identifier.system]     VARCHAR(256)        '$.identifier.system',
        [partOf.identifier.value]      NVARCHAR(4000)      '$.identifier.value',
        [partOf.identifier.period]     NVARCHAR(MAX)       '$.identifier.period',
        [partOf.identifier.assigner]   NVARCHAR(MAX)       '$.identifier.assigner',
        [partOf.display]               NVARCHAR(4000)      '$.display'
    ) j

GO

CREATE VIEW fhir.TaskPerformerType AS
SELECT
    [id],
    [performerType.JSON],
    [performerType.id],
    [performerType.extension],
    [performerType.coding],
    [performerType.text]
FROM openrowset (
        BULK 'Task/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [performerType.JSON]  VARCHAR(MAX) '$.performerType'
    ) AS rowset
    CROSS APPLY openjson (rowset.[performerType.JSON]) with (
        [performerType.id]             NVARCHAR(4000)      '$.id',
        [performerType.extension]      NVARCHAR(MAX)       '$.extension',
        [performerType.coding]         NVARCHAR(MAX)       '$.coding' AS JSON,
        [performerType.text]           NVARCHAR(4000)      '$.text'
    ) j

GO

CREATE VIEW fhir.TaskInsurance AS
SELECT
    [id],
    [insurance.JSON],
    [insurance.id],
    [insurance.extension],
    [insurance.reference],
    [insurance.type],
    [insurance.identifier.id],
    [insurance.identifier.extension],
    [insurance.identifier.use],
    [insurance.identifier.type],
    [insurance.identifier.system],
    [insurance.identifier.value],
    [insurance.identifier.period],
    [insurance.identifier.assigner],
    [insurance.display]
FROM openrowset (
        BULK 'Task/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [insurance.JSON]  VARCHAR(MAX) '$.insurance'
    ) AS rowset
    CROSS APPLY openjson (rowset.[insurance.JSON]) with (
        [insurance.id]                 NVARCHAR(4000)      '$.id',
        [insurance.extension]          NVARCHAR(MAX)       '$.extension',
        [insurance.reference]          NVARCHAR(4000)      '$.reference',
        [insurance.type]               VARCHAR(256)        '$.type',
        [insurance.identifier.id]      NVARCHAR(4000)      '$.identifier.id',
        [insurance.identifier.extension] NVARCHAR(MAX)       '$.identifier.extension',
        [insurance.identifier.use]     NVARCHAR(64)        '$.identifier.use',
        [insurance.identifier.type]    NVARCHAR(MAX)       '$.identifier.type',
        [insurance.identifier.system]  VARCHAR(256)        '$.identifier.system',
        [insurance.identifier.value]   NVARCHAR(4000)      '$.identifier.value',
        [insurance.identifier.period]  NVARCHAR(MAX)       '$.identifier.period',
        [insurance.identifier.assigner] NVARCHAR(MAX)       '$.identifier.assigner',
        [insurance.display]            NVARCHAR(4000)      '$.display'
    ) j

GO

CREATE VIEW fhir.TaskNote AS
SELECT
    [id],
    [note.JSON],
    [note.id],
    [note.extension],
    [note.time],
    [note.text],
    [note.author.Reference.id],
    [note.author.Reference.extension],
    [note.author.Reference.reference],
    [note.author.Reference.type],
    [note.author.Reference.identifier],
    [note.author.Reference.display],
    [note.author.string]
FROM openrowset (
        BULK 'Task/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [note.JSON]  VARCHAR(MAX) '$.note'
    ) AS rowset
    CROSS APPLY openjson (rowset.[note.JSON]) with (
        [note.id]                      NVARCHAR(4000)      '$.id',
        [note.extension]               NVARCHAR(MAX)       '$.extension',
        [note.time]                    VARCHAR(30)         '$.time',
        [note.text]                    NVARCHAR(MAX)       '$.text',
        [note.author.Reference.id]     NVARCHAR(4000)      '$.author.Reference.id',
        [note.author.Reference.extension] NVARCHAR(MAX)       '$.author.Reference.extension',
        [note.author.Reference.reference] NVARCHAR(4000)      '$.author.Reference.reference',
        [note.author.Reference.type]   VARCHAR(256)        '$.author.Reference.type',
        [note.author.Reference.identifier] NVARCHAR(MAX)       '$.author.Reference.identifier',
        [note.author.Reference.display] NVARCHAR(4000)      '$.author.Reference.display',
        [note.author.string]           NVARCHAR(4000)      '$.author.string'
    ) j

GO

CREATE VIEW fhir.TaskRelevantHistory AS
SELECT
    [id],
    [relevantHistory.JSON],
    [relevantHistory.id],
    [relevantHistory.extension],
    [relevantHistory.reference],
    [relevantHistory.type],
    [relevantHistory.identifier.id],
    [relevantHistory.identifier.extension],
    [relevantHistory.identifier.use],
    [relevantHistory.identifier.type],
    [relevantHistory.identifier.system],
    [relevantHistory.identifier.value],
    [relevantHistory.identifier.period],
    [relevantHistory.identifier.assigner],
    [relevantHistory.display]
FROM openrowset (
        BULK 'Task/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [relevantHistory.JSON]  VARCHAR(MAX) '$.relevantHistory'
    ) AS rowset
    CROSS APPLY openjson (rowset.[relevantHistory.JSON]) with (
        [relevantHistory.id]           NVARCHAR(4000)      '$.id',
        [relevantHistory.extension]    NVARCHAR(MAX)       '$.extension',
        [relevantHistory.reference]    NVARCHAR(4000)      '$.reference',
        [relevantHistory.type]         VARCHAR(256)        '$.type',
        [relevantHistory.identifier.id] NVARCHAR(4000)      '$.identifier.id',
        [relevantHistory.identifier.extension] NVARCHAR(MAX)       '$.identifier.extension',
        [relevantHistory.identifier.use] NVARCHAR(64)        '$.identifier.use',
        [relevantHistory.identifier.type] NVARCHAR(MAX)       '$.identifier.type',
        [relevantHistory.identifier.system] VARCHAR(256)        '$.identifier.system',
        [relevantHistory.identifier.value] NVARCHAR(4000)      '$.identifier.value',
        [relevantHistory.identifier.period] NVARCHAR(MAX)       '$.identifier.period',
        [relevantHistory.identifier.assigner] NVARCHAR(MAX)       '$.identifier.assigner',
        [relevantHistory.display]      NVARCHAR(4000)      '$.display'
    ) j

GO

CREATE VIEW fhir.TaskInput AS
SELECT
    [id],
    [input.JSON],
    [input.id],
    [input.extension],
    [input.modifierExtension],
    [input.type.id],
    [input.type.extension],
    [input.type.coding],
    [input.type.text],
    [input.value.base64Binary],
    [input.value.boolean],
    [input.value.canonical],
    [input.value.code],
    [input.value.date],
    [input.value.dateTime],
    [input.value.decimal],
    [input.value.id],
    [input.value.instant],
    [input.value.integer],
    [input.value.markdown],
    [input.value.oid],
    [input.value.positiveInt],
    [input.value.string],
    [input.value.time],
    [input.value.unsignedInt],
    [input.value.uri],
    [input.value.url],
    [input.value.uuid],
    [input.value.Address.id],
    [input.value.Address.extension],
    [input.value.Address.use],
    [input.value.Address.type],
    [input.value.Address.text],
    [input.value.Address.line],
    [input.value.Address.city],
    [input.value.Address.district],
    [input.value.Address.state],
    [input.value.Address.postalCode],
    [input.value.Address.country],
    [input.value.Address.period],
    [input.value.Age.id],
    [input.value.Age.extension],
    [input.value.Age.value],
    [input.value.Age.comparator],
    [input.value.Age.unit],
    [input.value.Age.system],
    [input.value.Age.code],
    [input.value.Annotation.id],
    [input.value.Annotation.extension],
    [input.value.Annotation.time],
    [input.value.Annotation.text],
    [input.value.Annotation.author.Reference],
    [input.value.Annotation.author.string],
    [input.value.Attachment.id],
    [input.value.Attachment.extension],
    [input.value.Attachment.contentType],
    [input.value.Attachment.language],
    [input.value.Attachment.data],
    [input.value.Attachment.url],
    [input.value.Attachment.size],
    [input.value.Attachment.hash],
    [input.value.Attachment.title],
    [input.value.Attachment.creation],
    [input.value.CodeableConcept.id],
    [input.value.CodeableConcept.extension],
    [input.value.CodeableConcept.coding],
    [input.value.CodeableConcept.text],
    [input.value.Coding.id],
    [input.value.Coding.extension],
    [input.value.Coding.system],
    [input.value.Coding.version],
    [input.value.Coding.code],
    [input.value.Coding.display],
    [input.value.Coding.userSelected],
    [input.value.ContactPoint.id],
    [input.value.ContactPoint.extension],
    [input.value.ContactPoint.system],
    [input.value.ContactPoint.value],
    [input.value.ContactPoint.use],
    [input.value.ContactPoint.rank],
    [input.value.ContactPoint.period],
    [input.value.Count.id],
    [input.value.Count.extension],
    [input.value.Count.value],
    [input.value.Count.comparator],
    [input.value.Count.unit],
    [input.value.Count.system],
    [input.value.Count.code],
    [input.value.Distance.id],
    [input.value.Distance.extension],
    [input.value.Distance.value],
    [input.value.Distance.comparator],
    [input.value.Distance.unit],
    [input.value.Distance.system],
    [input.value.Distance.code],
    [input.value.Duration.id],
    [input.value.Duration.extension],
    [input.value.Duration.value],
    [input.value.Duration.comparator],
    [input.value.Duration.unit],
    [input.value.Duration.system],
    [input.value.Duration.code],
    [input.value.HumanName.id],
    [input.value.HumanName.extension],
    [input.value.HumanName.use],
    [input.value.HumanName.text],
    [input.value.HumanName.family],
    [input.value.HumanName.given],
    [input.value.HumanName.prefix],
    [input.value.HumanName.suffix],
    [input.value.HumanName.period],
    [input.value.Identifier.id],
    [input.value.Identifier.extension],
    [input.value.Identifier.use],
    [input.value.Identifier.type],
    [input.value.Identifier.system],
    [input.value.Identifier.value],
    [input.value.Identifier.period],
    [input.value.Identifier.assigner],
    [input.value.Money.id],
    [input.value.Money.extension],
    [input.value.Money.value],
    [input.value.Money.currency],
    [input.value.Period.id],
    [input.value.Period.extension],
    [input.value.Period.start],
    [input.value.Period.end],
    [input.value.Quantity.id],
    [input.value.Quantity.extension],
    [input.value.Quantity.value],
    [input.value.Quantity.comparator],
    [input.value.Quantity.unit],
    [input.value.Quantity.system],
    [input.value.Quantity.code],
    [input.value.Range.id],
    [input.value.Range.extension],
    [input.value.Range.low],
    [input.value.Range.high],
    [input.value.Ratio.id],
    [input.value.Ratio.extension],
    [input.value.Ratio.numerator],
    [input.value.Ratio.denominator],
    [input.value.Reference.id],
    [input.value.Reference.extension],
    [input.value.Reference.reference],
    [input.value.Reference.type],
    [input.value.Reference.identifier],
    [input.value.Reference.display],
    [input.value.SampledData.id],
    [input.value.SampledData.extension],
    [input.value.SampledData.origin],
    [input.value.SampledData.period],
    [input.value.SampledData.factor],
    [input.value.SampledData.lowerLimit],
    [input.value.SampledData.upperLimit],
    [input.value.SampledData.dimensions],
    [input.value.SampledData.data],
    [input.value.Signature.id],
    [input.value.Signature.extension],
    [input.value.Signature.type],
    [input.value.Signature.when],
    [input.value.Signature.who],
    [input.value.Signature.onBehalfOf],
    [input.value.Signature.targetFormat],
    [input.value.Signature.sigFormat],
    [input.value.Signature.data],
    [input.value.Timing.id],
    [input.value.Timing.extension],
    [input.value.Timing.modifierExtension],
    [input.value.Timing.event],
    [input.value.Timing.repeat],
    [input.value.Timing.code],
    [input.value.ContactDetail.id],
    [input.value.ContactDetail.extension],
    [input.value.ContactDetail.name],
    [input.value.ContactDetail.telecom],
    [input.value.Contributor.id],
    [input.value.Contributor.extension],
    [input.value.Contributor.type],
    [input.value.Contributor.name],
    [input.value.Contributor.contact],
    [input.value.DataRequirement.id],
    [input.value.DataRequirement.extension],
    [input.value.DataRequirement.type],
    [input.value.DataRequirement.profile],
    [input.value.DataRequirement.mustSupport],
    [input.value.DataRequirement.codeFilter],
    [input.value.DataRequirement.dateFilter],
    [input.value.DataRequirement.limit],
    [input.value.DataRequirement.sort],
    [input.value.DataRequirement.subject.CodeableConcept],
    [input.value.DataRequirement.subject.Reference],
    [input.value.Expression.id],
    [input.value.Expression.extension],
    [input.value.Expression.description],
    [input.value.Expression.name],
    [input.value.Expression.language],
    [input.value.Expression.expression],
    [input.value.Expression.reference],
    [input.value.ParameterDefinition.id],
    [input.value.ParameterDefinition.extension],
    [input.value.ParameterDefinition.name],
    [input.value.ParameterDefinition.use],
    [input.value.ParameterDefinition.min],
    [input.value.ParameterDefinition.max],
    [input.value.ParameterDefinition.documentation],
    [input.value.ParameterDefinition.type],
    [input.value.ParameterDefinition.profile],
    [input.value.RelatedArtifact.id],
    [input.value.RelatedArtifact.extension],
    [input.value.RelatedArtifact.type],
    [input.value.RelatedArtifact.label],
    [input.value.RelatedArtifact.display],
    [input.value.RelatedArtifact.citation],
    [input.value.RelatedArtifact.url],
    [input.value.RelatedArtifact.document],
    [input.value.RelatedArtifact.resource],
    [input.value.TriggerDefinition.id],
    [input.value.TriggerDefinition.extension],
    [input.value.TriggerDefinition.type],
    [input.value.TriggerDefinition.name],
    [input.value.TriggerDefinition.data],
    [input.value.TriggerDefinition.condition],
    [input.value.TriggerDefinition.timing.Timing],
    [input.value.TriggerDefinition.timing.Reference],
    [input.value.TriggerDefinition.timing.date],
    [input.value.TriggerDefinition.timing.dateTime],
    [input.value.UsageContext.id],
    [input.value.UsageContext.extension],
    [input.value.UsageContext.code],
    [input.value.UsageContext.value.CodeableConcept],
    [input.value.UsageContext.value.Quantity],
    [input.value.UsageContext.value.Range],
    [input.value.UsageContext.value.Reference],
    [input.value.Dosage.id],
    [input.value.Dosage.extension],
    [input.value.Dosage.modifierExtension],
    [input.value.Dosage.sequence],
    [input.value.Dosage.text],
    [input.value.Dosage.additionalInstruction],
    [input.value.Dosage.patientInstruction],
    [input.value.Dosage.timing],
    [input.value.Dosage.site],
    [input.value.Dosage.route],
    [input.value.Dosage.method],
    [input.value.Dosage.doseAndRate],
    [input.value.Dosage.maxDosePerPeriod],
    [input.value.Dosage.maxDosePerAdministration],
    [input.value.Dosage.maxDosePerLifetime],
    [input.value.Dosage.asNeeded.boolean],
    [input.value.Dosage.asNeeded.CodeableConcept],
    [input.value.Meta.id],
    [input.value.Meta.extension],
    [input.value.Meta.versionId],
    [input.value.Meta.lastUpdated],
    [input.value.Meta.source],
    [input.value.Meta.profile],
    [input.value.Meta.security],
    [input.value.Meta.tag]
FROM openrowset (
        BULK 'Task/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [input.JSON]  VARCHAR(MAX) '$.input'
    ) AS rowset
    CROSS APPLY openjson (rowset.[input.JSON]) with (
        [input.id]                     NVARCHAR(4000)      '$.id',
        [input.extension]              NVARCHAR(MAX)       '$.extension',
        [input.modifierExtension]      NVARCHAR(MAX)       '$.modifierExtension',
        [input.type.id]                NVARCHAR(4000)      '$.type.id',
        [input.type.extension]         NVARCHAR(MAX)       '$.type.extension',
        [input.type.coding]            NVARCHAR(MAX)       '$.type.coding',
        [input.type.text]              NVARCHAR(4000)      '$.type.text',
        [input.value.base64Binary]     NVARCHAR(MAX)       '$.value.base64Binary',
        [input.value.boolean]          bit                 '$.value.boolean',
        [input.value.canonical]        VARCHAR(256)        '$.value.canonical',
        [input.value.code]             NVARCHAR(4000)      '$.value.code',
        [input.value.date]             VARCHAR(10)         '$.value.date',
        [input.value.dateTime]         VARCHAR(30)         '$.value.dateTime',
        [input.value.decimal]          float               '$.value.decimal',
        [input.value.id]               VARCHAR(64)         '$.value.id',
        [input.value.instant]          VARCHAR(30)         '$.value.instant',
        [input.value.integer]          bigint              '$.value.integer',
        [input.value.markdown]         NVARCHAR(MAX)       '$.value.markdown',
        [input.value.oid]              VARCHAR(64)         '$.value.oid',
        [input.value.positiveInt]      bigint              '$.value.positiveInt',
        [input.value.string]           NVARCHAR(4000)      '$.value.string',
        [input.value.time]             NVARCHAR(MAX)       '$.value.time',
        [input.value.unsignedInt]      bigint              '$.value.unsignedInt',
        [input.value.uri]              VARCHAR(256)        '$.value.uri',
        [input.value.url]              VARCHAR(256)        '$.value.url',
        [input.value.uuid]             NVARCHAR(MAX)       '$.value.uuid',
        [input.value.Address.id]       NVARCHAR(4000)      '$.value.Address.id',
        [input.value.Address.extension] NVARCHAR(MAX)       '$.value.Address.extension',
        [input.value.Address.use]      NVARCHAR(64)        '$.value.Address.use',
        [input.value.Address.type]     NVARCHAR(64)        '$.value.Address.type',
        [input.value.Address.text]     NVARCHAR(4000)      '$.value.Address.text',
        [input.value.Address.line]     NVARCHAR(MAX)       '$.value.Address.line',
        [input.value.Address.city]     NVARCHAR(4000)      '$.value.Address.city',
        [input.value.Address.district] NVARCHAR(4000)      '$.value.Address.district',
        [input.value.Address.state]    NVARCHAR(4000)      '$.value.Address.state',
        [input.value.Address.postalCode] NVARCHAR(4000)      '$.value.Address.postalCode',
        [input.value.Address.country]  NVARCHAR(4000)      '$.value.Address.country',
        [input.value.Address.period]   NVARCHAR(MAX)       '$.value.Address.period',
        [input.value.Age.id]           NVARCHAR(4000)      '$.value.Age.id',
        [input.value.Age.extension]    NVARCHAR(MAX)       '$.value.Age.extension',
        [input.value.Age.value]        float               '$.value.Age.value',
        [input.value.Age.comparator]   NVARCHAR(64)        '$.value.Age.comparator',
        [input.value.Age.unit]         NVARCHAR(4000)      '$.value.Age.unit',
        [input.value.Age.system]       VARCHAR(256)        '$.value.Age.system',
        [input.value.Age.code]         NVARCHAR(4000)      '$.value.Age.code',
        [input.value.Annotation.id]    NVARCHAR(4000)      '$.value.Annotation.id',
        [input.value.Annotation.extension] NVARCHAR(MAX)       '$.value.Annotation.extension',
        [input.value.Annotation.time]  VARCHAR(30)         '$.value.Annotation.time',
        [input.value.Annotation.text]  NVARCHAR(MAX)       '$.value.Annotation.text',
        [input.value.Annotation.author.Reference] NVARCHAR(MAX)       '$.value.Annotation.author.Reference',
        [input.value.Annotation.author.string] NVARCHAR(4000)      '$.value.Annotation.author.string',
        [input.value.Attachment.id]    NVARCHAR(4000)      '$.value.Attachment.id',
        [input.value.Attachment.extension] NVARCHAR(MAX)       '$.value.Attachment.extension',
        [input.value.Attachment.contentType] NVARCHAR(4000)      '$.value.Attachment.contentType',
        [input.value.Attachment.language] NVARCHAR(4000)      '$.value.Attachment.language',
        [input.value.Attachment.data]  NVARCHAR(MAX)       '$.value.Attachment.data',
        [input.value.Attachment.url]   VARCHAR(256)        '$.value.Attachment.url',
        [input.value.Attachment.size]  bigint              '$.value.Attachment.size',
        [input.value.Attachment.hash]  NVARCHAR(MAX)       '$.value.Attachment.hash',
        [input.value.Attachment.title] NVARCHAR(4000)      '$.value.Attachment.title',
        [input.value.Attachment.creation] VARCHAR(30)         '$.value.Attachment.creation',
        [input.value.CodeableConcept.id] NVARCHAR(4000)      '$.value.CodeableConcept.id',
        [input.value.CodeableConcept.extension] NVARCHAR(MAX)       '$.value.CodeableConcept.extension',
        [input.value.CodeableConcept.coding] NVARCHAR(MAX)       '$.value.CodeableConcept.coding',
        [input.value.CodeableConcept.text] NVARCHAR(4000)      '$.value.CodeableConcept.text',
        [input.value.Coding.id]        NVARCHAR(4000)      '$.value.Coding.id',
        [input.value.Coding.extension] NVARCHAR(MAX)       '$.value.Coding.extension',
        [input.value.Coding.system]    VARCHAR(256)        '$.value.Coding.system',
        [input.value.Coding.version]   NVARCHAR(4000)      '$.value.Coding.version',
        [input.value.Coding.code]      NVARCHAR(4000)      '$.value.Coding.code',
        [input.value.Coding.display]   NVARCHAR(4000)      '$.value.Coding.display',
        [input.value.Coding.userSelected] bit                 '$.value.Coding.userSelected',
        [input.value.ContactPoint.id]  NVARCHAR(4000)      '$.value.ContactPoint.id',
        [input.value.ContactPoint.extension] NVARCHAR(MAX)       '$.value.ContactPoint.extension',
        [input.value.ContactPoint.system] NVARCHAR(64)        '$.value.ContactPoint.system',
        [input.value.ContactPoint.value] NVARCHAR(4000)      '$.value.ContactPoint.value',
        [input.value.ContactPoint.use] NVARCHAR(64)        '$.value.ContactPoint.use',
        [input.value.ContactPoint.rank] bigint              '$.value.ContactPoint.rank',
        [input.value.ContactPoint.period] NVARCHAR(MAX)       '$.value.ContactPoint.period',
        [input.value.Count.id]         NVARCHAR(4000)      '$.value.Count.id',
        [input.value.Count.extension]  NVARCHAR(MAX)       '$.value.Count.extension',
        [input.value.Count.value]      float               '$.value.Count.value',
        [input.value.Count.comparator] NVARCHAR(64)        '$.value.Count.comparator',
        [input.value.Count.unit]       NVARCHAR(4000)      '$.value.Count.unit',
        [input.value.Count.system]     VARCHAR(256)        '$.value.Count.system',
        [input.value.Count.code]       NVARCHAR(4000)      '$.value.Count.code',
        [input.value.Distance.id]      NVARCHAR(4000)      '$.value.Distance.id',
        [input.value.Distance.extension] NVARCHAR(MAX)       '$.value.Distance.extension',
        [input.value.Distance.value]   float               '$.value.Distance.value',
        [input.value.Distance.comparator] NVARCHAR(64)        '$.value.Distance.comparator',
        [input.value.Distance.unit]    NVARCHAR(4000)      '$.value.Distance.unit',
        [input.value.Distance.system]  VARCHAR(256)        '$.value.Distance.system',
        [input.value.Distance.code]    NVARCHAR(4000)      '$.value.Distance.code',
        [input.value.Duration.id]      NVARCHAR(4000)      '$.value.Duration.id',
        [input.value.Duration.extension] NVARCHAR(MAX)       '$.value.Duration.extension',
        [input.value.Duration.value]   float               '$.value.Duration.value',
        [input.value.Duration.comparator] NVARCHAR(64)        '$.value.Duration.comparator',
        [input.value.Duration.unit]    NVARCHAR(4000)      '$.value.Duration.unit',
        [input.value.Duration.system]  VARCHAR(256)        '$.value.Duration.system',
        [input.value.Duration.code]    NVARCHAR(4000)      '$.value.Duration.code',
        [input.value.HumanName.id]     NVARCHAR(4000)      '$.value.HumanName.id',
        [input.value.HumanName.extension] NVARCHAR(MAX)       '$.value.HumanName.extension',
        [input.value.HumanName.use]    NVARCHAR(64)        '$.value.HumanName.use',
        [input.value.HumanName.text]   NVARCHAR(4000)      '$.value.HumanName.text',
        [input.value.HumanName.family] NVARCHAR(4000)      '$.value.HumanName.family',
        [input.value.HumanName.given]  NVARCHAR(MAX)       '$.value.HumanName.given',
        [input.value.HumanName.prefix] NVARCHAR(MAX)       '$.value.HumanName.prefix',
        [input.value.HumanName.suffix] NVARCHAR(MAX)       '$.value.HumanName.suffix',
        [input.value.HumanName.period] NVARCHAR(MAX)       '$.value.HumanName.period',
        [input.value.Identifier.id]    NVARCHAR(4000)      '$.value.Identifier.id',
        [input.value.Identifier.extension] NVARCHAR(MAX)       '$.value.Identifier.extension',
        [input.value.Identifier.use]   NVARCHAR(64)        '$.value.Identifier.use',
        [input.value.Identifier.type]  NVARCHAR(MAX)       '$.value.Identifier.type',
        [input.value.Identifier.system] VARCHAR(256)        '$.value.Identifier.system',
        [input.value.Identifier.value] NVARCHAR(4000)      '$.value.Identifier.value',
        [input.value.Identifier.period] NVARCHAR(MAX)       '$.value.Identifier.period',
        [input.value.Identifier.assigner] NVARCHAR(MAX)       '$.value.Identifier.assigner',
        [input.value.Money.id]         NVARCHAR(4000)      '$.value.Money.id',
        [input.value.Money.extension]  NVARCHAR(MAX)       '$.value.Money.extension',
        [input.value.Money.value]      float               '$.value.Money.value',
        [input.value.Money.currency]   NVARCHAR(4000)      '$.value.Money.currency',
        [input.value.Period.id]        NVARCHAR(4000)      '$.value.Period.id',
        [input.value.Period.extension] NVARCHAR(MAX)       '$.value.Period.extension',
        [input.value.Period.start]     VARCHAR(30)         '$.value.Period.start',
        [input.value.Period.end]       VARCHAR(30)         '$.value.Period.end',
        [input.value.Quantity.id]      NVARCHAR(4000)      '$.value.Quantity.id',
        [input.value.Quantity.extension] NVARCHAR(MAX)       '$.value.Quantity.extension',
        [input.value.Quantity.value]   float               '$.value.Quantity.value',
        [input.value.Quantity.comparator] NVARCHAR(64)        '$.value.Quantity.comparator',
        [input.value.Quantity.unit]    NVARCHAR(4000)      '$.value.Quantity.unit',
        [input.value.Quantity.system]  VARCHAR(256)        '$.value.Quantity.system',
        [input.value.Quantity.code]    NVARCHAR(4000)      '$.value.Quantity.code',
        [input.value.Range.id]         NVARCHAR(4000)      '$.value.Range.id',
        [input.value.Range.extension]  NVARCHAR(MAX)       '$.value.Range.extension',
        [input.value.Range.low]        NVARCHAR(MAX)       '$.value.Range.low',
        [input.value.Range.high]       NVARCHAR(MAX)       '$.value.Range.high',
        [input.value.Ratio.id]         NVARCHAR(4000)      '$.value.Ratio.id',
        [input.value.Ratio.extension]  NVARCHAR(MAX)       '$.value.Ratio.extension',
        [input.value.Ratio.numerator]  NVARCHAR(MAX)       '$.value.Ratio.numerator',
        [input.value.Ratio.denominator] NVARCHAR(MAX)       '$.value.Ratio.denominator',
        [input.value.Reference.id]     NVARCHAR(4000)      '$.value.Reference.id',
        [input.value.Reference.extension] NVARCHAR(MAX)       '$.value.Reference.extension',
        [input.value.Reference.reference] NVARCHAR(4000)      '$.value.Reference.reference',
        [input.value.Reference.type]   VARCHAR(256)        '$.value.Reference.type',
        [input.value.Reference.identifier] NVARCHAR(MAX)       '$.value.Reference.identifier',
        [input.value.Reference.display] NVARCHAR(4000)      '$.value.Reference.display',
        [input.value.SampledData.id]   NVARCHAR(4000)      '$.value.SampledData.id',
        [input.value.SampledData.extension] NVARCHAR(MAX)       '$.value.SampledData.extension',
        [input.value.SampledData.origin] NVARCHAR(MAX)       '$.value.SampledData.origin',
        [input.value.SampledData.period] float               '$.value.SampledData.period',
        [input.value.SampledData.factor] float               '$.value.SampledData.factor',
        [input.value.SampledData.lowerLimit] float               '$.value.SampledData.lowerLimit',
        [input.value.SampledData.upperLimit] float               '$.value.SampledData.upperLimit',
        [input.value.SampledData.dimensions] bigint              '$.value.SampledData.dimensions',
        [input.value.SampledData.data] NVARCHAR(4000)      '$.value.SampledData.data',
        [input.value.Signature.id]     NVARCHAR(4000)      '$.value.Signature.id',
        [input.value.Signature.extension] NVARCHAR(MAX)       '$.value.Signature.extension',
        [input.value.Signature.type]   NVARCHAR(MAX)       '$.value.Signature.type',
        [input.value.Signature.when]   VARCHAR(30)         '$.value.Signature.when',
        [input.value.Signature.who]    NVARCHAR(MAX)       '$.value.Signature.who',
        [input.value.Signature.onBehalfOf] NVARCHAR(MAX)       '$.value.Signature.onBehalfOf',
        [input.value.Signature.targetFormat] NVARCHAR(4000)      '$.value.Signature.targetFormat',
        [input.value.Signature.sigFormat] NVARCHAR(4000)      '$.value.Signature.sigFormat',
        [input.value.Signature.data]   NVARCHAR(MAX)       '$.value.Signature.data',
        [input.value.Timing.id]        NVARCHAR(4000)      '$.value.Timing.id',
        [input.value.Timing.extension] NVARCHAR(MAX)       '$.value.Timing.extension',
        [input.value.Timing.modifierExtension] NVARCHAR(MAX)       '$.value.Timing.modifierExtension',
        [input.value.Timing.event]     NVARCHAR(MAX)       '$.value.Timing.event',
        [input.value.Timing.repeat]    NVARCHAR(MAX)       '$.value.Timing.repeat',
        [input.value.Timing.code]      NVARCHAR(MAX)       '$.value.Timing.code',
        [input.value.ContactDetail.id] NVARCHAR(4000)      '$.value.ContactDetail.id',
        [input.value.ContactDetail.extension] NVARCHAR(MAX)       '$.value.ContactDetail.extension',
        [input.value.ContactDetail.name] NVARCHAR(4000)      '$.value.ContactDetail.name',
        [input.value.ContactDetail.telecom] NVARCHAR(MAX)       '$.value.ContactDetail.telecom',
        [input.value.Contributor.id]   NVARCHAR(4000)      '$.value.Contributor.id',
        [input.value.Contributor.extension] NVARCHAR(MAX)       '$.value.Contributor.extension',
        [input.value.Contributor.type] NVARCHAR(64)        '$.value.Contributor.type',
        [input.value.Contributor.name] NVARCHAR(4000)      '$.value.Contributor.name',
        [input.value.Contributor.contact] NVARCHAR(MAX)       '$.value.Contributor.contact',
        [input.value.DataRequirement.id] NVARCHAR(4000)      '$.value.DataRequirement.id',
        [input.value.DataRequirement.extension] NVARCHAR(MAX)       '$.value.DataRequirement.extension',
        [input.value.DataRequirement.type] NVARCHAR(4000)      '$.value.DataRequirement.type',
        [input.value.DataRequirement.profile] NVARCHAR(MAX)       '$.value.DataRequirement.profile',
        [input.value.DataRequirement.mustSupport] NVARCHAR(MAX)       '$.value.DataRequirement.mustSupport',
        [input.value.DataRequirement.codeFilter] NVARCHAR(MAX)       '$.value.DataRequirement.codeFilter',
        [input.value.DataRequirement.dateFilter] NVARCHAR(MAX)       '$.value.DataRequirement.dateFilter',
        [input.value.DataRequirement.limit] bigint              '$.value.DataRequirement.limit',
        [input.value.DataRequirement.sort] NVARCHAR(MAX)       '$.value.DataRequirement.sort',
        [input.value.DataRequirement.subject.CodeableConcept] NVARCHAR(MAX)       '$.value.DataRequirement.subject.CodeableConcept',
        [input.value.DataRequirement.subject.Reference] NVARCHAR(MAX)       '$.value.DataRequirement.subject.Reference',
        [input.value.Expression.id]    NVARCHAR(4000)      '$.value.Expression.id',
        [input.value.Expression.extension] NVARCHAR(MAX)       '$.value.Expression.extension',
        [input.value.Expression.description] NVARCHAR(4000)      '$.value.Expression.description',
        [input.value.Expression.name]  VARCHAR(64)         '$.value.Expression.name',
        [input.value.Expression.language] NVARCHAR(64)        '$.value.Expression.language',
        [input.value.Expression.expression] NVARCHAR(4000)      '$.value.Expression.expression',
        [input.value.Expression.reference] VARCHAR(256)        '$.value.Expression.reference',
        [input.value.ParameterDefinition.id] NVARCHAR(4000)      '$.value.ParameterDefinition.id',
        [input.value.ParameterDefinition.extension] NVARCHAR(MAX)       '$.value.ParameterDefinition.extension',
        [input.value.ParameterDefinition.name] NVARCHAR(4000)      '$.value.ParameterDefinition.name',
        [input.value.ParameterDefinition.use] NVARCHAR(4000)      '$.value.ParameterDefinition.use',
        [input.value.ParameterDefinition.min] bigint              '$.value.ParameterDefinition.min',
        [input.value.ParameterDefinition.max] NVARCHAR(4000)      '$.value.ParameterDefinition.max',
        [input.value.ParameterDefinition.documentation] NVARCHAR(4000)      '$.value.ParameterDefinition.documentation',
        [input.value.ParameterDefinition.type] NVARCHAR(4000)      '$.value.ParameterDefinition.type',
        [input.value.ParameterDefinition.profile] VARCHAR(256)        '$.value.ParameterDefinition.profile',
        [input.value.RelatedArtifact.id] NVARCHAR(4000)      '$.value.RelatedArtifact.id',
        [input.value.RelatedArtifact.extension] NVARCHAR(MAX)       '$.value.RelatedArtifact.extension',
        [input.value.RelatedArtifact.type] NVARCHAR(64)        '$.value.RelatedArtifact.type',
        [input.value.RelatedArtifact.label] NVARCHAR(4000)      '$.value.RelatedArtifact.label',
        [input.value.RelatedArtifact.display] NVARCHAR(4000)      '$.value.RelatedArtifact.display',
        [input.value.RelatedArtifact.citation] NVARCHAR(MAX)       '$.value.RelatedArtifact.citation',
        [input.value.RelatedArtifact.url] VARCHAR(256)        '$.value.RelatedArtifact.url',
        [input.value.RelatedArtifact.document] NVARCHAR(MAX)       '$.value.RelatedArtifact.document',
        [input.value.RelatedArtifact.resource] VARCHAR(256)        '$.value.RelatedArtifact.resource',
        [input.value.TriggerDefinition.id] NVARCHAR(4000)      '$.value.TriggerDefinition.id',
        [input.value.TriggerDefinition.extension] NVARCHAR(MAX)       '$.value.TriggerDefinition.extension',
        [input.value.TriggerDefinition.type] NVARCHAR(64)        '$.value.TriggerDefinition.type',
        [input.value.TriggerDefinition.name] NVARCHAR(4000)      '$.value.TriggerDefinition.name',
        [input.value.TriggerDefinition.data] NVARCHAR(MAX)       '$.value.TriggerDefinition.data',
        [input.value.TriggerDefinition.condition] NVARCHAR(MAX)       '$.value.TriggerDefinition.condition',
        [input.value.TriggerDefinition.timing.Timing] NVARCHAR(MAX)       '$.value.TriggerDefinition.timing.Timing',
        [input.value.TriggerDefinition.timing.Reference] NVARCHAR(MAX)       '$.value.TriggerDefinition.timing.Reference',
        [input.value.TriggerDefinition.timing.date] VARCHAR(10)         '$.value.TriggerDefinition.timing.date',
        [input.value.TriggerDefinition.timing.dateTime] VARCHAR(30)         '$.value.TriggerDefinition.timing.dateTime',
        [input.value.UsageContext.id]  NVARCHAR(4000)      '$.value.UsageContext.id',
        [input.value.UsageContext.extension] NVARCHAR(MAX)       '$.value.UsageContext.extension',
        [input.value.UsageContext.code] NVARCHAR(MAX)       '$.value.UsageContext.code',
        [input.value.UsageContext.value.CodeableConcept] NVARCHAR(MAX)       '$.value.UsageContext.value.CodeableConcept',
        [input.value.UsageContext.value.Quantity] NVARCHAR(MAX)       '$.value.UsageContext.value.Quantity',
        [input.value.UsageContext.value.Range] NVARCHAR(MAX)       '$.value.UsageContext.value.Range',
        [input.value.UsageContext.value.Reference] NVARCHAR(MAX)       '$.value.UsageContext.value.Reference',
        [input.value.Dosage.id]        NVARCHAR(4000)      '$.value.Dosage.id',
        [input.value.Dosage.extension] NVARCHAR(MAX)       '$.value.Dosage.extension',
        [input.value.Dosage.modifierExtension] NVARCHAR(MAX)       '$.value.Dosage.modifierExtension',
        [input.value.Dosage.sequence]  bigint              '$.value.Dosage.sequence',
        [input.value.Dosage.text]      NVARCHAR(4000)      '$.value.Dosage.text',
        [input.value.Dosage.additionalInstruction] NVARCHAR(MAX)       '$.value.Dosage.additionalInstruction',
        [input.value.Dosage.patientInstruction] NVARCHAR(4000)      '$.value.Dosage.patientInstruction',
        [input.value.Dosage.timing]    NVARCHAR(MAX)       '$.value.Dosage.timing',
        [input.value.Dosage.site]      NVARCHAR(MAX)       '$.value.Dosage.site',
        [input.value.Dosage.route]     NVARCHAR(MAX)       '$.value.Dosage.route',
        [input.value.Dosage.method]    NVARCHAR(MAX)       '$.value.Dosage.method',
        [input.value.Dosage.doseAndRate] NVARCHAR(MAX)       '$.value.Dosage.doseAndRate',
        [input.value.Dosage.maxDosePerPeriod] NVARCHAR(MAX)       '$.value.Dosage.maxDosePerPeriod',
        [input.value.Dosage.maxDosePerAdministration] NVARCHAR(MAX)       '$.value.Dosage.maxDosePerAdministration',
        [input.value.Dosage.maxDosePerLifetime] NVARCHAR(MAX)       '$.value.Dosage.maxDosePerLifetime',
        [input.value.Dosage.asNeeded.boolean] bit                 '$.value.Dosage.asNeeded.boolean',
        [input.value.Dosage.asNeeded.CodeableConcept] NVARCHAR(MAX)       '$.value.Dosage.asNeeded.CodeableConcept',
        [input.value.Meta.id]          NVARCHAR(4000)      '$.value.Meta.id',
        [input.value.Meta.extension]   NVARCHAR(MAX)       '$.value.Meta.extension',
        [input.value.Meta.versionId]   VARCHAR(64)         '$.value.Meta.versionId',
        [input.value.Meta.lastUpdated] VARCHAR(30)         '$.value.Meta.lastUpdated',
        [input.value.Meta.source]      VARCHAR(256)        '$.value.Meta.source',
        [input.value.Meta.profile]     NVARCHAR(MAX)       '$.value.Meta.profile',
        [input.value.Meta.security]    NVARCHAR(MAX)       '$.value.Meta.security',
        [input.value.Meta.tag]         NVARCHAR(MAX)       '$.value.Meta.tag'
    ) j

GO

CREATE VIEW fhir.TaskOutput AS
SELECT
    [id],
    [output.JSON],
    [output.id],
    [output.extension],
    [output.modifierExtension],
    [output.type.id],
    [output.type.extension],
    [output.type.coding],
    [output.type.text],
    [output.value.base64Binary],
    [output.value.boolean],
    [output.value.canonical],
    [output.value.code],
    [output.value.date],
    [output.value.dateTime],
    [output.value.decimal],
    [output.value.id],
    [output.value.instant],
    [output.value.integer],
    [output.value.markdown],
    [output.value.oid],
    [output.value.positiveInt],
    [output.value.string],
    [output.value.time],
    [output.value.unsignedInt],
    [output.value.uri],
    [output.value.url],
    [output.value.uuid],
    [output.value.Address.id],
    [output.value.Address.extension],
    [output.value.Address.use],
    [output.value.Address.type],
    [output.value.Address.text],
    [output.value.Address.line],
    [output.value.Address.city],
    [output.value.Address.district],
    [output.value.Address.state],
    [output.value.Address.postalCode],
    [output.value.Address.country],
    [output.value.Address.period],
    [output.value.Age.id],
    [output.value.Age.extension],
    [output.value.Age.value],
    [output.value.Age.comparator],
    [output.value.Age.unit],
    [output.value.Age.system],
    [output.value.Age.code],
    [output.value.Annotation.id],
    [output.value.Annotation.extension],
    [output.value.Annotation.time],
    [output.value.Annotation.text],
    [output.value.Annotation.author.Reference],
    [output.value.Annotation.author.string],
    [output.value.Attachment.id],
    [output.value.Attachment.extension],
    [output.value.Attachment.contentType],
    [output.value.Attachment.language],
    [output.value.Attachment.data],
    [output.value.Attachment.url],
    [output.value.Attachment.size],
    [output.value.Attachment.hash],
    [output.value.Attachment.title],
    [output.value.Attachment.creation],
    [output.value.CodeableConcept.id],
    [output.value.CodeableConcept.extension],
    [output.value.CodeableConcept.coding],
    [output.value.CodeableConcept.text],
    [output.value.Coding.id],
    [output.value.Coding.extension],
    [output.value.Coding.system],
    [output.value.Coding.version],
    [output.value.Coding.code],
    [output.value.Coding.display],
    [output.value.Coding.userSelected],
    [output.value.ContactPoint.id],
    [output.value.ContactPoint.extension],
    [output.value.ContactPoint.system],
    [output.value.ContactPoint.value],
    [output.value.ContactPoint.use],
    [output.value.ContactPoint.rank],
    [output.value.ContactPoint.period],
    [output.value.Count.id],
    [output.value.Count.extension],
    [output.value.Count.value],
    [output.value.Count.comparator],
    [output.value.Count.unit],
    [output.value.Count.system],
    [output.value.Count.code],
    [output.value.Distance.id],
    [output.value.Distance.extension],
    [output.value.Distance.value],
    [output.value.Distance.comparator],
    [output.value.Distance.unit],
    [output.value.Distance.system],
    [output.value.Distance.code],
    [output.value.Duration.id],
    [output.value.Duration.extension],
    [output.value.Duration.value],
    [output.value.Duration.comparator],
    [output.value.Duration.unit],
    [output.value.Duration.system],
    [output.value.Duration.code],
    [output.value.HumanName.id],
    [output.value.HumanName.extension],
    [output.value.HumanName.use],
    [output.value.HumanName.text],
    [output.value.HumanName.family],
    [output.value.HumanName.given],
    [output.value.HumanName.prefix],
    [output.value.HumanName.suffix],
    [output.value.HumanName.period],
    [output.value.Identifier.id],
    [output.value.Identifier.extension],
    [output.value.Identifier.use],
    [output.value.Identifier.type],
    [output.value.Identifier.system],
    [output.value.Identifier.value],
    [output.value.Identifier.period],
    [output.value.Identifier.assigner],
    [output.value.Money.id],
    [output.value.Money.extension],
    [output.value.Money.value],
    [output.value.Money.currency],
    [output.value.Period.id],
    [output.value.Period.extension],
    [output.value.Period.start],
    [output.value.Period.end],
    [output.value.Quantity.id],
    [output.value.Quantity.extension],
    [output.value.Quantity.value],
    [output.value.Quantity.comparator],
    [output.value.Quantity.unit],
    [output.value.Quantity.system],
    [output.value.Quantity.code],
    [output.value.Range.id],
    [output.value.Range.extension],
    [output.value.Range.low],
    [output.value.Range.high],
    [output.value.Ratio.id],
    [output.value.Ratio.extension],
    [output.value.Ratio.numerator],
    [output.value.Ratio.denominator],
    [output.value.Reference.id],
    [output.value.Reference.extension],
    [output.value.Reference.reference],
    [output.value.Reference.type],
    [output.value.Reference.identifier],
    [output.value.Reference.display],
    [output.value.SampledData.id],
    [output.value.SampledData.extension],
    [output.value.SampledData.origin],
    [output.value.SampledData.period],
    [output.value.SampledData.factor],
    [output.value.SampledData.lowerLimit],
    [output.value.SampledData.upperLimit],
    [output.value.SampledData.dimensions],
    [output.value.SampledData.data],
    [output.value.Signature.id],
    [output.value.Signature.extension],
    [output.value.Signature.type],
    [output.value.Signature.when],
    [output.value.Signature.who],
    [output.value.Signature.onBehalfOf],
    [output.value.Signature.targetFormat],
    [output.value.Signature.sigFormat],
    [output.value.Signature.data],
    [output.value.Timing.id],
    [output.value.Timing.extension],
    [output.value.Timing.modifierExtension],
    [output.value.Timing.event],
    [output.value.Timing.repeat],
    [output.value.Timing.code],
    [output.value.ContactDetail.id],
    [output.value.ContactDetail.extension],
    [output.value.ContactDetail.name],
    [output.value.ContactDetail.telecom],
    [output.value.Contributor.id],
    [output.value.Contributor.extension],
    [output.value.Contributor.type],
    [output.value.Contributor.name],
    [output.value.Contributor.contact],
    [output.value.DataRequirement.id],
    [output.value.DataRequirement.extension],
    [output.value.DataRequirement.type],
    [output.value.DataRequirement.profile],
    [output.value.DataRequirement.mustSupport],
    [output.value.DataRequirement.codeFilter],
    [output.value.DataRequirement.dateFilter],
    [output.value.DataRequirement.limit],
    [output.value.DataRequirement.sort],
    [output.value.DataRequirement.subject.CodeableConcept],
    [output.value.DataRequirement.subject.Reference],
    [output.value.Expression.id],
    [output.value.Expression.extension],
    [output.value.Expression.description],
    [output.value.Expression.name],
    [output.value.Expression.language],
    [output.value.Expression.expression],
    [output.value.Expression.reference],
    [output.value.ParameterDefinition.id],
    [output.value.ParameterDefinition.extension],
    [output.value.ParameterDefinition.name],
    [output.value.ParameterDefinition.use],
    [output.value.ParameterDefinition.min],
    [output.value.ParameterDefinition.max],
    [output.value.ParameterDefinition.documentation],
    [output.value.ParameterDefinition.type],
    [output.value.ParameterDefinition.profile],
    [output.value.RelatedArtifact.id],
    [output.value.RelatedArtifact.extension],
    [output.value.RelatedArtifact.type],
    [output.value.RelatedArtifact.label],
    [output.value.RelatedArtifact.display],
    [output.value.RelatedArtifact.citation],
    [output.value.RelatedArtifact.url],
    [output.value.RelatedArtifact.document],
    [output.value.RelatedArtifact.resource],
    [output.value.TriggerDefinition.id],
    [output.value.TriggerDefinition.extension],
    [output.value.TriggerDefinition.type],
    [output.value.TriggerDefinition.name],
    [output.value.TriggerDefinition.data],
    [output.value.TriggerDefinition.condition],
    [output.value.TriggerDefinition.timing.Timing],
    [output.value.TriggerDefinition.timing.Reference],
    [output.value.TriggerDefinition.timing.date],
    [output.value.TriggerDefinition.timing.dateTime],
    [output.value.UsageContext.id],
    [output.value.UsageContext.extension],
    [output.value.UsageContext.code],
    [output.value.UsageContext.value.CodeableConcept],
    [output.value.UsageContext.value.Quantity],
    [output.value.UsageContext.value.Range],
    [output.value.UsageContext.value.Reference],
    [output.value.Dosage.id],
    [output.value.Dosage.extension],
    [output.value.Dosage.modifierExtension],
    [output.value.Dosage.sequence],
    [output.value.Dosage.text],
    [output.value.Dosage.additionalInstruction],
    [output.value.Dosage.patientInstruction],
    [output.value.Dosage.timing],
    [output.value.Dosage.site],
    [output.value.Dosage.route],
    [output.value.Dosage.method],
    [output.value.Dosage.doseAndRate],
    [output.value.Dosage.maxDosePerPeriod],
    [output.value.Dosage.maxDosePerAdministration],
    [output.value.Dosage.maxDosePerLifetime],
    [output.value.Dosage.asNeeded.boolean],
    [output.value.Dosage.asNeeded.CodeableConcept],
    [output.value.Meta.id],
    [output.value.Meta.extension],
    [output.value.Meta.versionId],
    [output.value.Meta.lastUpdated],
    [output.value.Meta.source],
    [output.value.Meta.profile],
    [output.value.Meta.security],
    [output.value.Meta.tag]
FROM openrowset (
        BULK 'Task/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [output.JSON]  VARCHAR(MAX) '$.output'
    ) AS rowset
    CROSS APPLY openjson (rowset.[output.JSON]) with (
        [output.id]                    NVARCHAR(4000)      '$.id',
        [output.extension]             NVARCHAR(MAX)       '$.extension',
        [output.modifierExtension]     NVARCHAR(MAX)       '$.modifierExtension',
        [output.type.id]               NVARCHAR(4000)      '$.type.id',
        [output.type.extension]        NVARCHAR(MAX)       '$.type.extension',
        [output.type.coding]           NVARCHAR(MAX)       '$.type.coding',
        [output.type.text]             NVARCHAR(4000)      '$.type.text',
        [output.value.base64Binary]    NVARCHAR(MAX)       '$.value.base64Binary',
        [output.value.boolean]         bit                 '$.value.boolean',
        [output.value.canonical]       VARCHAR(256)        '$.value.canonical',
        [output.value.code]            NVARCHAR(4000)      '$.value.code',
        [output.value.date]            VARCHAR(10)         '$.value.date',
        [output.value.dateTime]        VARCHAR(30)         '$.value.dateTime',
        [output.value.decimal]         float               '$.value.decimal',
        [output.value.id]              VARCHAR(64)         '$.value.id',
        [output.value.instant]         VARCHAR(30)         '$.value.instant',
        [output.value.integer]         bigint              '$.value.integer',
        [output.value.markdown]        NVARCHAR(MAX)       '$.value.markdown',
        [output.value.oid]             VARCHAR(64)         '$.value.oid',
        [output.value.positiveInt]     bigint              '$.value.positiveInt',
        [output.value.string]          NVARCHAR(4000)      '$.value.string',
        [output.value.time]            NVARCHAR(MAX)       '$.value.time',
        [output.value.unsignedInt]     bigint              '$.value.unsignedInt',
        [output.value.uri]             VARCHAR(256)        '$.value.uri',
        [output.value.url]             VARCHAR(256)        '$.value.url',
        [output.value.uuid]            NVARCHAR(MAX)       '$.value.uuid',
        [output.value.Address.id]      NVARCHAR(4000)      '$.value.Address.id',
        [output.value.Address.extension] NVARCHAR(MAX)       '$.value.Address.extension',
        [output.value.Address.use]     NVARCHAR(64)        '$.value.Address.use',
        [output.value.Address.type]    NVARCHAR(64)        '$.value.Address.type',
        [output.value.Address.text]    NVARCHAR(4000)      '$.value.Address.text',
        [output.value.Address.line]    NVARCHAR(MAX)       '$.value.Address.line',
        [output.value.Address.city]    NVARCHAR(4000)      '$.value.Address.city',
        [output.value.Address.district] NVARCHAR(4000)      '$.value.Address.district',
        [output.value.Address.state]   NVARCHAR(4000)      '$.value.Address.state',
        [output.value.Address.postalCode] NVARCHAR(4000)      '$.value.Address.postalCode',
        [output.value.Address.country] NVARCHAR(4000)      '$.value.Address.country',
        [output.value.Address.period]  NVARCHAR(MAX)       '$.value.Address.period',
        [output.value.Age.id]          NVARCHAR(4000)      '$.value.Age.id',
        [output.value.Age.extension]   NVARCHAR(MAX)       '$.value.Age.extension',
        [output.value.Age.value]       float               '$.value.Age.value',
        [output.value.Age.comparator]  NVARCHAR(64)        '$.value.Age.comparator',
        [output.value.Age.unit]        NVARCHAR(4000)      '$.value.Age.unit',
        [output.value.Age.system]      VARCHAR(256)        '$.value.Age.system',
        [output.value.Age.code]        NVARCHAR(4000)      '$.value.Age.code',
        [output.value.Annotation.id]   NVARCHAR(4000)      '$.value.Annotation.id',
        [output.value.Annotation.extension] NVARCHAR(MAX)       '$.value.Annotation.extension',
        [output.value.Annotation.time] VARCHAR(30)         '$.value.Annotation.time',
        [output.value.Annotation.text] NVARCHAR(MAX)       '$.value.Annotation.text',
        [output.value.Annotation.author.Reference] NVARCHAR(MAX)       '$.value.Annotation.author.Reference',
        [output.value.Annotation.author.string] NVARCHAR(4000)      '$.value.Annotation.author.string',
        [output.value.Attachment.id]   NVARCHAR(4000)      '$.value.Attachment.id',
        [output.value.Attachment.extension] NVARCHAR(MAX)       '$.value.Attachment.extension',
        [output.value.Attachment.contentType] NVARCHAR(4000)      '$.value.Attachment.contentType',
        [output.value.Attachment.language] NVARCHAR(4000)      '$.value.Attachment.language',
        [output.value.Attachment.data] NVARCHAR(MAX)       '$.value.Attachment.data',
        [output.value.Attachment.url]  VARCHAR(256)        '$.value.Attachment.url',
        [output.value.Attachment.size] bigint              '$.value.Attachment.size',
        [output.value.Attachment.hash] NVARCHAR(MAX)       '$.value.Attachment.hash',
        [output.value.Attachment.title] NVARCHAR(4000)      '$.value.Attachment.title',
        [output.value.Attachment.creation] VARCHAR(30)         '$.value.Attachment.creation',
        [output.value.CodeableConcept.id] NVARCHAR(4000)      '$.value.CodeableConcept.id',
        [output.value.CodeableConcept.extension] NVARCHAR(MAX)       '$.value.CodeableConcept.extension',
        [output.value.CodeableConcept.coding] NVARCHAR(MAX)       '$.value.CodeableConcept.coding',
        [output.value.CodeableConcept.text] NVARCHAR(4000)      '$.value.CodeableConcept.text',
        [output.value.Coding.id]       NVARCHAR(4000)      '$.value.Coding.id',
        [output.value.Coding.extension] NVARCHAR(MAX)       '$.value.Coding.extension',
        [output.value.Coding.system]   VARCHAR(256)        '$.value.Coding.system',
        [output.value.Coding.version]  NVARCHAR(4000)      '$.value.Coding.version',
        [output.value.Coding.code]     NVARCHAR(4000)      '$.value.Coding.code',
        [output.value.Coding.display]  NVARCHAR(4000)      '$.value.Coding.display',
        [output.value.Coding.userSelected] bit                 '$.value.Coding.userSelected',
        [output.value.ContactPoint.id] NVARCHAR(4000)      '$.value.ContactPoint.id',
        [output.value.ContactPoint.extension] NVARCHAR(MAX)       '$.value.ContactPoint.extension',
        [output.value.ContactPoint.system] NVARCHAR(64)        '$.value.ContactPoint.system',
        [output.value.ContactPoint.value] NVARCHAR(4000)      '$.value.ContactPoint.value',
        [output.value.ContactPoint.use] NVARCHAR(64)        '$.value.ContactPoint.use',
        [output.value.ContactPoint.rank] bigint              '$.value.ContactPoint.rank',
        [output.value.ContactPoint.period] NVARCHAR(MAX)       '$.value.ContactPoint.period',
        [output.value.Count.id]        NVARCHAR(4000)      '$.value.Count.id',
        [output.value.Count.extension] NVARCHAR(MAX)       '$.value.Count.extension',
        [output.value.Count.value]     float               '$.value.Count.value',
        [output.value.Count.comparator] NVARCHAR(64)        '$.value.Count.comparator',
        [output.value.Count.unit]      NVARCHAR(4000)      '$.value.Count.unit',
        [output.value.Count.system]    VARCHAR(256)        '$.value.Count.system',
        [output.value.Count.code]      NVARCHAR(4000)      '$.value.Count.code',
        [output.value.Distance.id]     NVARCHAR(4000)      '$.value.Distance.id',
        [output.value.Distance.extension] NVARCHAR(MAX)       '$.value.Distance.extension',
        [output.value.Distance.value]  float               '$.value.Distance.value',
        [output.value.Distance.comparator] NVARCHAR(64)        '$.value.Distance.comparator',
        [output.value.Distance.unit]   NVARCHAR(4000)      '$.value.Distance.unit',
        [output.value.Distance.system] VARCHAR(256)        '$.value.Distance.system',
        [output.value.Distance.code]   NVARCHAR(4000)      '$.value.Distance.code',
        [output.value.Duration.id]     NVARCHAR(4000)      '$.value.Duration.id',
        [output.value.Duration.extension] NVARCHAR(MAX)       '$.value.Duration.extension',
        [output.value.Duration.value]  float               '$.value.Duration.value',
        [output.value.Duration.comparator] NVARCHAR(64)        '$.value.Duration.comparator',
        [output.value.Duration.unit]   NVARCHAR(4000)      '$.value.Duration.unit',
        [output.value.Duration.system] VARCHAR(256)        '$.value.Duration.system',
        [output.value.Duration.code]   NVARCHAR(4000)      '$.value.Duration.code',
        [output.value.HumanName.id]    NVARCHAR(4000)      '$.value.HumanName.id',
        [output.value.HumanName.extension] NVARCHAR(MAX)       '$.value.HumanName.extension',
        [output.value.HumanName.use]   NVARCHAR(64)        '$.value.HumanName.use',
        [output.value.HumanName.text]  NVARCHAR(4000)      '$.value.HumanName.text',
        [output.value.HumanName.family] NVARCHAR(4000)      '$.value.HumanName.family',
        [output.value.HumanName.given] NVARCHAR(MAX)       '$.value.HumanName.given',
        [output.value.HumanName.prefix] NVARCHAR(MAX)       '$.value.HumanName.prefix',
        [output.value.HumanName.suffix] NVARCHAR(MAX)       '$.value.HumanName.suffix',
        [output.value.HumanName.period] NVARCHAR(MAX)       '$.value.HumanName.period',
        [output.value.Identifier.id]   NVARCHAR(4000)      '$.value.Identifier.id',
        [output.value.Identifier.extension] NVARCHAR(MAX)       '$.value.Identifier.extension',
        [output.value.Identifier.use]  NVARCHAR(64)        '$.value.Identifier.use',
        [output.value.Identifier.type] NVARCHAR(MAX)       '$.value.Identifier.type',
        [output.value.Identifier.system] VARCHAR(256)        '$.value.Identifier.system',
        [output.value.Identifier.value] NVARCHAR(4000)      '$.value.Identifier.value',
        [output.value.Identifier.period] NVARCHAR(MAX)       '$.value.Identifier.period',
        [output.value.Identifier.assigner] NVARCHAR(MAX)       '$.value.Identifier.assigner',
        [output.value.Money.id]        NVARCHAR(4000)      '$.value.Money.id',
        [output.value.Money.extension] NVARCHAR(MAX)       '$.value.Money.extension',
        [output.value.Money.value]     float               '$.value.Money.value',
        [output.value.Money.currency]  NVARCHAR(4000)      '$.value.Money.currency',
        [output.value.Period.id]       NVARCHAR(4000)      '$.value.Period.id',
        [output.value.Period.extension] NVARCHAR(MAX)       '$.value.Period.extension',
        [output.value.Period.start]    VARCHAR(30)         '$.value.Period.start',
        [output.value.Period.end]      VARCHAR(30)         '$.value.Period.end',
        [output.value.Quantity.id]     NVARCHAR(4000)      '$.value.Quantity.id',
        [output.value.Quantity.extension] NVARCHAR(MAX)       '$.value.Quantity.extension',
        [output.value.Quantity.value]  float               '$.value.Quantity.value',
        [output.value.Quantity.comparator] NVARCHAR(64)        '$.value.Quantity.comparator',
        [output.value.Quantity.unit]   NVARCHAR(4000)      '$.value.Quantity.unit',
        [output.value.Quantity.system] VARCHAR(256)        '$.value.Quantity.system',
        [output.value.Quantity.code]   NVARCHAR(4000)      '$.value.Quantity.code',
        [output.value.Range.id]        NVARCHAR(4000)      '$.value.Range.id',
        [output.value.Range.extension] NVARCHAR(MAX)       '$.value.Range.extension',
        [output.value.Range.low]       NVARCHAR(MAX)       '$.value.Range.low',
        [output.value.Range.high]      NVARCHAR(MAX)       '$.value.Range.high',
        [output.value.Ratio.id]        NVARCHAR(4000)      '$.value.Ratio.id',
        [output.value.Ratio.extension] NVARCHAR(MAX)       '$.value.Ratio.extension',
        [output.value.Ratio.numerator] NVARCHAR(MAX)       '$.value.Ratio.numerator',
        [output.value.Ratio.denominator] NVARCHAR(MAX)       '$.value.Ratio.denominator',
        [output.value.Reference.id]    NVARCHAR(4000)      '$.value.Reference.id',
        [output.value.Reference.extension] NVARCHAR(MAX)       '$.value.Reference.extension',
        [output.value.Reference.reference] NVARCHAR(4000)      '$.value.Reference.reference',
        [output.value.Reference.type]  VARCHAR(256)        '$.value.Reference.type',
        [output.value.Reference.identifier] NVARCHAR(MAX)       '$.value.Reference.identifier',
        [output.value.Reference.display] NVARCHAR(4000)      '$.value.Reference.display',
        [output.value.SampledData.id]  NVARCHAR(4000)      '$.value.SampledData.id',
        [output.value.SampledData.extension] NVARCHAR(MAX)       '$.value.SampledData.extension',
        [output.value.SampledData.origin] NVARCHAR(MAX)       '$.value.SampledData.origin',
        [output.value.SampledData.period] float               '$.value.SampledData.period',
        [output.value.SampledData.factor] float               '$.value.SampledData.factor',
        [output.value.SampledData.lowerLimit] float               '$.value.SampledData.lowerLimit',
        [output.value.SampledData.upperLimit] float               '$.value.SampledData.upperLimit',
        [output.value.SampledData.dimensions] bigint              '$.value.SampledData.dimensions',
        [output.value.SampledData.data] NVARCHAR(4000)      '$.value.SampledData.data',
        [output.value.Signature.id]    NVARCHAR(4000)      '$.value.Signature.id',
        [output.value.Signature.extension] NVARCHAR(MAX)       '$.value.Signature.extension',
        [output.value.Signature.type]  NVARCHAR(MAX)       '$.value.Signature.type',
        [output.value.Signature.when]  VARCHAR(30)         '$.value.Signature.when',
        [output.value.Signature.who]   NVARCHAR(MAX)       '$.value.Signature.who',
        [output.value.Signature.onBehalfOf] NVARCHAR(MAX)       '$.value.Signature.onBehalfOf',
        [output.value.Signature.targetFormat] NVARCHAR(4000)      '$.value.Signature.targetFormat',
        [output.value.Signature.sigFormat] NVARCHAR(4000)      '$.value.Signature.sigFormat',
        [output.value.Signature.data]  NVARCHAR(MAX)       '$.value.Signature.data',
        [output.value.Timing.id]       NVARCHAR(4000)      '$.value.Timing.id',
        [output.value.Timing.extension] NVARCHAR(MAX)       '$.value.Timing.extension',
        [output.value.Timing.modifierExtension] NVARCHAR(MAX)       '$.value.Timing.modifierExtension',
        [output.value.Timing.event]    NVARCHAR(MAX)       '$.value.Timing.event',
        [output.value.Timing.repeat]   NVARCHAR(MAX)       '$.value.Timing.repeat',
        [output.value.Timing.code]     NVARCHAR(MAX)       '$.value.Timing.code',
        [output.value.ContactDetail.id] NVARCHAR(4000)      '$.value.ContactDetail.id',
        [output.value.ContactDetail.extension] NVARCHAR(MAX)       '$.value.ContactDetail.extension',
        [output.value.ContactDetail.name] NVARCHAR(4000)      '$.value.ContactDetail.name',
        [output.value.ContactDetail.telecom] NVARCHAR(MAX)       '$.value.ContactDetail.telecom',
        [output.value.Contributor.id]  NVARCHAR(4000)      '$.value.Contributor.id',
        [output.value.Contributor.extension] NVARCHAR(MAX)       '$.value.Contributor.extension',
        [output.value.Contributor.type] NVARCHAR(64)        '$.value.Contributor.type',
        [output.value.Contributor.name] NVARCHAR(4000)      '$.value.Contributor.name',
        [output.value.Contributor.contact] NVARCHAR(MAX)       '$.value.Contributor.contact',
        [output.value.DataRequirement.id] NVARCHAR(4000)      '$.value.DataRequirement.id',
        [output.value.DataRequirement.extension] NVARCHAR(MAX)       '$.value.DataRequirement.extension',
        [output.value.DataRequirement.type] NVARCHAR(4000)      '$.value.DataRequirement.type',
        [output.value.DataRequirement.profile] NVARCHAR(MAX)       '$.value.DataRequirement.profile',
        [output.value.DataRequirement.mustSupport] NVARCHAR(MAX)       '$.value.DataRequirement.mustSupport',
        [output.value.DataRequirement.codeFilter] NVARCHAR(MAX)       '$.value.DataRequirement.codeFilter',
        [output.value.DataRequirement.dateFilter] NVARCHAR(MAX)       '$.value.DataRequirement.dateFilter',
        [output.value.DataRequirement.limit] bigint              '$.value.DataRequirement.limit',
        [output.value.DataRequirement.sort] NVARCHAR(MAX)       '$.value.DataRequirement.sort',
        [output.value.DataRequirement.subject.CodeableConcept] NVARCHAR(MAX)       '$.value.DataRequirement.subject.CodeableConcept',
        [output.value.DataRequirement.subject.Reference] NVARCHAR(MAX)       '$.value.DataRequirement.subject.Reference',
        [output.value.Expression.id]   NVARCHAR(4000)      '$.value.Expression.id',
        [output.value.Expression.extension] NVARCHAR(MAX)       '$.value.Expression.extension',
        [output.value.Expression.description] NVARCHAR(4000)      '$.value.Expression.description',
        [output.value.Expression.name] VARCHAR(64)         '$.value.Expression.name',
        [output.value.Expression.language] NVARCHAR(64)        '$.value.Expression.language',
        [output.value.Expression.expression] NVARCHAR(4000)      '$.value.Expression.expression',
        [output.value.Expression.reference] VARCHAR(256)        '$.value.Expression.reference',
        [output.value.ParameterDefinition.id] NVARCHAR(4000)      '$.value.ParameterDefinition.id',
        [output.value.ParameterDefinition.extension] NVARCHAR(MAX)       '$.value.ParameterDefinition.extension',
        [output.value.ParameterDefinition.name] NVARCHAR(4000)      '$.value.ParameterDefinition.name',
        [output.value.ParameterDefinition.use] NVARCHAR(4000)      '$.value.ParameterDefinition.use',
        [output.value.ParameterDefinition.min] bigint              '$.value.ParameterDefinition.min',
        [output.value.ParameterDefinition.max] NVARCHAR(4000)      '$.value.ParameterDefinition.max',
        [output.value.ParameterDefinition.documentation] NVARCHAR(4000)      '$.value.ParameterDefinition.documentation',
        [output.value.ParameterDefinition.type] NVARCHAR(4000)      '$.value.ParameterDefinition.type',
        [output.value.ParameterDefinition.profile] VARCHAR(256)        '$.value.ParameterDefinition.profile',
        [output.value.RelatedArtifact.id] NVARCHAR(4000)      '$.value.RelatedArtifact.id',
        [output.value.RelatedArtifact.extension] NVARCHAR(MAX)       '$.value.RelatedArtifact.extension',
        [output.value.RelatedArtifact.type] NVARCHAR(64)        '$.value.RelatedArtifact.type',
        [output.value.RelatedArtifact.label] NVARCHAR(4000)      '$.value.RelatedArtifact.label',
        [output.value.RelatedArtifact.display] NVARCHAR(4000)      '$.value.RelatedArtifact.display',
        [output.value.RelatedArtifact.citation] NVARCHAR(MAX)       '$.value.RelatedArtifact.citation',
        [output.value.RelatedArtifact.url] VARCHAR(256)        '$.value.RelatedArtifact.url',
        [output.value.RelatedArtifact.document] NVARCHAR(MAX)       '$.value.RelatedArtifact.document',
        [output.value.RelatedArtifact.resource] VARCHAR(256)        '$.value.RelatedArtifact.resource',
        [output.value.TriggerDefinition.id] NVARCHAR(4000)      '$.value.TriggerDefinition.id',
        [output.value.TriggerDefinition.extension] NVARCHAR(MAX)       '$.value.TriggerDefinition.extension',
        [output.value.TriggerDefinition.type] NVARCHAR(64)        '$.value.TriggerDefinition.type',
        [output.value.TriggerDefinition.name] NVARCHAR(4000)      '$.value.TriggerDefinition.name',
        [output.value.TriggerDefinition.data] NVARCHAR(MAX)       '$.value.TriggerDefinition.data',
        [output.value.TriggerDefinition.condition] NVARCHAR(MAX)       '$.value.TriggerDefinition.condition',
        [output.value.TriggerDefinition.timing.Timing] NVARCHAR(MAX)       '$.value.TriggerDefinition.timing.Timing',
        [output.value.TriggerDefinition.timing.Reference] NVARCHAR(MAX)       '$.value.TriggerDefinition.timing.Reference',
        [output.value.TriggerDefinition.timing.date] VARCHAR(10)         '$.value.TriggerDefinition.timing.date',
        [output.value.TriggerDefinition.timing.dateTime] VARCHAR(30)         '$.value.TriggerDefinition.timing.dateTime',
        [output.value.UsageContext.id] NVARCHAR(4000)      '$.value.UsageContext.id',
        [output.value.UsageContext.extension] NVARCHAR(MAX)       '$.value.UsageContext.extension',
        [output.value.UsageContext.code] NVARCHAR(MAX)       '$.value.UsageContext.code',
        [output.value.UsageContext.value.CodeableConcept] NVARCHAR(MAX)       '$.value.UsageContext.value.CodeableConcept',
        [output.value.UsageContext.value.Quantity] NVARCHAR(MAX)       '$.value.UsageContext.value.Quantity',
        [output.value.UsageContext.value.Range] NVARCHAR(MAX)       '$.value.UsageContext.value.Range',
        [output.value.UsageContext.value.Reference] NVARCHAR(MAX)       '$.value.UsageContext.value.Reference',
        [output.value.Dosage.id]       NVARCHAR(4000)      '$.value.Dosage.id',
        [output.value.Dosage.extension] NVARCHAR(MAX)       '$.value.Dosage.extension',
        [output.value.Dosage.modifierExtension] NVARCHAR(MAX)       '$.value.Dosage.modifierExtension',
        [output.value.Dosage.sequence] bigint              '$.value.Dosage.sequence',
        [output.value.Dosage.text]     NVARCHAR(4000)      '$.value.Dosage.text',
        [output.value.Dosage.additionalInstruction] NVARCHAR(MAX)       '$.value.Dosage.additionalInstruction',
        [output.value.Dosage.patientInstruction] NVARCHAR(4000)      '$.value.Dosage.patientInstruction',
        [output.value.Dosage.timing]   NVARCHAR(MAX)       '$.value.Dosage.timing',
        [output.value.Dosage.site]     NVARCHAR(MAX)       '$.value.Dosage.site',
        [output.value.Dosage.route]    NVARCHAR(MAX)       '$.value.Dosage.route',
        [output.value.Dosage.method]   NVARCHAR(MAX)       '$.value.Dosage.method',
        [output.value.Dosage.doseAndRate] NVARCHAR(MAX)       '$.value.Dosage.doseAndRate',
        [output.value.Dosage.maxDosePerPeriod] NVARCHAR(MAX)       '$.value.Dosage.maxDosePerPeriod',
        [output.value.Dosage.maxDosePerAdministration] NVARCHAR(MAX)       '$.value.Dosage.maxDosePerAdministration',
        [output.value.Dosage.maxDosePerLifetime] NVARCHAR(MAX)       '$.value.Dosage.maxDosePerLifetime',
        [output.value.Dosage.asNeeded.boolean] bit                 '$.value.Dosage.asNeeded.boolean',
        [output.value.Dosage.asNeeded.CodeableConcept] NVARCHAR(MAX)       '$.value.Dosage.asNeeded.CodeableConcept',
        [output.value.Meta.id]         NVARCHAR(4000)      '$.value.Meta.id',
        [output.value.Meta.extension]  NVARCHAR(MAX)       '$.value.Meta.extension',
        [output.value.Meta.versionId]  VARCHAR(64)         '$.value.Meta.versionId',
        [output.value.Meta.lastUpdated] VARCHAR(30)         '$.value.Meta.lastUpdated',
        [output.value.Meta.source]     VARCHAR(256)        '$.value.Meta.source',
        [output.value.Meta.profile]    NVARCHAR(MAX)       '$.value.Meta.profile',
        [output.value.Meta.security]   NVARCHAR(MAX)       '$.value.Meta.security',
        [output.value.Meta.tag]        NVARCHAR(MAX)       '$.value.Meta.tag'
    ) j
