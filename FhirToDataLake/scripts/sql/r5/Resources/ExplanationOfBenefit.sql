CREATE EXTERNAL TABLE [fhir].[ExplanationOfBenefit] (
    [resourceType] NVARCHAR(4000),
    [id] VARCHAR(64),
    [meta.id] NVARCHAR(100),
    [meta.extension] NVARCHAR(MAX),
    [meta.versionId] VARCHAR(64),
    [meta.lastUpdated] VARCHAR(64),
    [meta.source] VARCHAR(256),
    [meta.profile] VARCHAR(MAX),
    [meta.security] VARCHAR(MAX),
    [meta.tag] VARCHAR(MAX),
    [implicitRules] VARCHAR(256),
    [language] NVARCHAR(100),
    [text.id] NVARCHAR(100),
    [text.extension] NVARCHAR(MAX),
    [text.status] NVARCHAR(64),
    [text.div] NVARCHAR(MAX),
    [extension] NVARCHAR(MAX),
    [modifierExtension] NVARCHAR(MAX),
    [identifier] VARCHAR(MAX),
    [status] NVARCHAR(100),
    [type.id] NVARCHAR(100),
    [type.extension] NVARCHAR(MAX),
    [type.coding] VARCHAR(MAX),
    [type.text] NVARCHAR(4000),
    [subType.id] NVARCHAR(100),
    [subType.extension] NVARCHAR(MAX),
    [subType.coding] VARCHAR(MAX),
    [subType.text] NVARCHAR(4000),
    [use] NVARCHAR(100),
    [patient.id] NVARCHAR(100),
    [patient.extension] NVARCHAR(MAX),
    [patient.reference] NVARCHAR(4000),
    [patient.type] VARCHAR(256),
    [patient.identifier.id] NVARCHAR(100),
    [patient.identifier.extension] NVARCHAR(MAX),
    [patient.identifier.use] NVARCHAR(64),
    [patient.identifier.type] NVARCHAR(MAX),
    [patient.identifier.system] VARCHAR(256),
    [patient.identifier.value] NVARCHAR(4000),
    [patient.identifier.period] NVARCHAR(MAX),
    [patient.identifier.assigner] NVARCHAR(MAX),
    [patient.display] NVARCHAR(4000),
    [billablePeriod.id] NVARCHAR(100),
    [billablePeriod.extension] NVARCHAR(MAX),
    [billablePeriod.start] VARCHAR(64),
    [billablePeriod.end] VARCHAR(64),
    [created] VARCHAR(64),
    [enterer.id] NVARCHAR(100),
    [enterer.extension] NVARCHAR(MAX),
    [enterer.reference] NVARCHAR(4000),
    [enterer.type] VARCHAR(256),
    [enterer.identifier.id] NVARCHAR(100),
    [enterer.identifier.extension] NVARCHAR(MAX),
    [enterer.identifier.use] NVARCHAR(64),
    [enterer.identifier.type] NVARCHAR(MAX),
    [enterer.identifier.system] VARCHAR(256),
    [enterer.identifier.value] NVARCHAR(4000),
    [enterer.identifier.period] NVARCHAR(MAX),
    [enterer.identifier.assigner] NVARCHAR(MAX),
    [enterer.display] NVARCHAR(4000),
    [insurer.id] NVARCHAR(100),
    [insurer.extension] NVARCHAR(MAX),
    [insurer.reference] NVARCHAR(4000),
    [insurer.type] VARCHAR(256),
    [insurer.identifier.id] NVARCHAR(100),
    [insurer.identifier.extension] NVARCHAR(MAX),
    [insurer.identifier.use] NVARCHAR(64),
    [insurer.identifier.type] NVARCHAR(MAX),
    [insurer.identifier.system] VARCHAR(256),
    [insurer.identifier.value] NVARCHAR(4000),
    [insurer.identifier.period] NVARCHAR(MAX),
    [insurer.identifier.assigner] NVARCHAR(MAX),
    [insurer.display] NVARCHAR(4000),
    [provider.id] NVARCHAR(100),
    [provider.extension] NVARCHAR(MAX),
    [provider.reference] NVARCHAR(4000),
    [provider.type] VARCHAR(256),
    [provider.identifier.id] NVARCHAR(100),
    [provider.identifier.extension] NVARCHAR(MAX),
    [provider.identifier.use] NVARCHAR(64),
    [provider.identifier.type] NVARCHAR(MAX),
    [provider.identifier.system] VARCHAR(256),
    [provider.identifier.value] NVARCHAR(4000),
    [provider.identifier.period] NVARCHAR(MAX),
    [provider.identifier.assigner] NVARCHAR(MAX),
    [provider.display] NVARCHAR(4000),
    [priority.id] NVARCHAR(100),
    [priority.extension] NVARCHAR(MAX),
    [priority.coding] VARCHAR(MAX),
    [priority.text] NVARCHAR(4000),
    [fundsReserveRequested.id] NVARCHAR(100),
    [fundsReserveRequested.extension] NVARCHAR(MAX),
    [fundsReserveRequested.coding] VARCHAR(MAX),
    [fundsReserveRequested.text] NVARCHAR(4000),
    [fundsReserve.id] NVARCHAR(100),
    [fundsReserve.extension] NVARCHAR(MAX),
    [fundsReserve.coding] VARCHAR(MAX),
    [fundsReserve.text] NVARCHAR(4000),
    [related] VARCHAR(MAX),
    [prescription.id] NVARCHAR(100),
    [prescription.extension] NVARCHAR(MAX),
    [prescription.reference] NVARCHAR(4000),
    [prescription.type] VARCHAR(256),
    [prescription.identifier.id] NVARCHAR(100),
    [prescription.identifier.extension] NVARCHAR(MAX),
    [prescription.identifier.use] NVARCHAR(64),
    [prescription.identifier.type] NVARCHAR(MAX),
    [prescription.identifier.system] VARCHAR(256),
    [prescription.identifier.value] NVARCHAR(4000),
    [prescription.identifier.period] NVARCHAR(MAX),
    [prescription.identifier.assigner] NVARCHAR(MAX),
    [prescription.display] NVARCHAR(4000),
    [originalPrescription.id] NVARCHAR(100),
    [originalPrescription.extension] NVARCHAR(MAX),
    [originalPrescription.reference] NVARCHAR(4000),
    [originalPrescription.type] VARCHAR(256),
    [originalPrescription.identifier.id] NVARCHAR(100),
    [originalPrescription.identifier.extension] NVARCHAR(MAX),
    [originalPrescription.identifier.use] NVARCHAR(64),
    [originalPrescription.identifier.type] NVARCHAR(MAX),
    [originalPrescription.identifier.system] VARCHAR(256),
    [originalPrescription.identifier.value] NVARCHAR(4000),
    [originalPrescription.identifier.period] NVARCHAR(MAX),
    [originalPrescription.identifier.assigner] NVARCHAR(MAX),
    [originalPrescription.display] NVARCHAR(4000),
    [payee.id] NVARCHAR(100),
    [payee.extension] NVARCHAR(MAX),
    [payee.modifierExtension] NVARCHAR(MAX),
    [payee.type.id] NVARCHAR(100),
    [payee.type.extension] NVARCHAR(MAX),
    [payee.type.coding] NVARCHAR(MAX),
    [payee.type.text] NVARCHAR(4000),
    [payee.party.id] NVARCHAR(100),
    [payee.party.extension] NVARCHAR(MAX),
    [payee.party.reference] NVARCHAR(4000),
    [payee.party.type] VARCHAR(256),
    [payee.party.identifier] NVARCHAR(MAX),
    [payee.party.display] NVARCHAR(4000),
    [referral.id] NVARCHAR(100),
    [referral.extension] NVARCHAR(MAX),
    [referral.reference] NVARCHAR(4000),
    [referral.type] VARCHAR(256),
    [referral.identifier.id] NVARCHAR(100),
    [referral.identifier.extension] NVARCHAR(MAX),
    [referral.identifier.use] NVARCHAR(64),
    [referral.identifier.type] NVARCHAR(MAX),
    [referral.identifier.system] VARCHAR(256),
    [referral.identifier.value] NVARCHAR(4000),
    [referral.identifier.period] NVARCHAR(MAX),
    [referral.identifier.assigner] NVARCHAR(MAX),
    [referral.display] NVARCHAR(4000),
    [facility.id] NVARCHAR(100),
    [facility.extension] NVARCHAR(MAX),
    [facility.reference] NVARCHAR(4000),
    [facility.type] VARCHAR(256),
    [facility.identifier.id] NVARCHAR(100),
    [facility.identifier.extension] NVARCHAR(MAX),
    [facility.identifier.use] NVARCHAR(64),
    [facility.identifier.type] NVARCHAR(MAX),
    [facility.identifier.system] VARCHAR(256),
    [facility.identifier.value] NVARCHAR(4000),
    [facility.identifier.period] NVARCHAR(MAX),
    [facility.identifier.assigner] NVARCHAR(MAX),
    [facility.display] NVARCHAR(4000),
    [claim.id] NVARCHAR(100),
    [claim.extension] NVARCHAR(MAX),
    [claim.reference] NVARCHAR(4000),
    [claim.type] VARCHAR(256),
    [claim.identifier.id] NVARCHAR(100),
    [claim.identifier.extension] NVARCHAR(MAX),
    [claim.identifier.use] NVARCHAR(64),
    [claim.identifier.type] NVARCHAR(MAX),
    [claim.identifier.system] VARCHAR(256),
    [claim.identifier.value] NVARCHAR(4000),
    [claim.identifier.period] NVARCHAR(MAX),
    [claim.identifier.assigner] NVARCHAR(MAX),
    [claim.display] NVARCHAR(4000),
    [claimResponse.id] NVARCHAR(100),
    [claimResponse.extension] NVARCHAR(MAX),
    [claimResponse.reference] NVARCHAR(4000),
    [claimResponse.type] VARCHAR(256),
    [claimResponse.identifier.id] NVARCHAR(100),
    [claimResponse.identifier.extension] NVARCHAR(MAX),
    [claimResponse.identifier.use] NVARCHAR(64),
    [claimResponse.identifier.type] NVARCHAR(MAX),
    [claimResponse.identifier.system] VARCHAR(256),
    [claimResponse.identifier.value] NVARCHAR(4000),
    [claimResponse.identifier.period] NVARCHAR(MAX),
    [claimResponse.identifier.assigner] NVARCHAR(MAX),
    [claimResponse.display] NVARCHAR(4000),
    [outcome] NVARCHAR(100),
    [disposition] NVARCHAR(4000),
    [preAuthRef] VARCHAR(MAX),
    [preAuthRefPeriod] VARCHAR(MAX),
    [careTeam] VARCHAR(MAX),
    [supportingInfo] VARCHAR(MAX),
    [diagnosis] VARCHAR(MAX),
    [procedure] VARCHAR(MAX),
    [precedence] bigint,
    [insurance] VARCHAR(MAX),
    [accident.id] NVARCHAR(100),
    [accident.extension] NVARCHAR(MAX),
    [accident.modifierExtension] NVARCHAR(MAX),
    [accident.date] VARCHAR(64),
    [accident.type.id] NVARCHAR(100),
    [accident.type.extension] NVARCHAR(MAX),
    [accident.type.coding] NVARCHAR(MAX),
    [accident.type.text] NVARCHAR(4000),
    [accident.location.address.id] NVARCHAR(100),
    [accident.location.address.extension] NVARCHAR(MAX),
    [accident.location.address.use] NVARCHAR(64),
    [accident.location.address.type] NVARCHAR(64),
    [accident.location.address.text] NVARCHAR(4000),
    [accident.location.address.line] NVARCHAR(MAX),
    [accident.location.address.city] NVARCHAR(500),
    [accident.location.address.district] NVARCHAR(500),
    [accident.location.address.state] NVARCHAR(500),
    [accident.location.address.postalCode] NVARCHAR(100),
    [accident.location.address.country] NVARCHAR(500),
    [accident.location.address.period] NVARCHAR(MAX),
    [accident.location.reference.id] NVARCHAR(100),
    [accident.location.reference.extension] NVARCHAR(MAX),
    [accident.location.reference.reference] NVARCHAR(4000),
    [accident.location.reference.type] VARCHAR(256),
    [accident.location.reference.identifier] NVARCHAR(MAX),
    [accident.location.reference.display] NVARCHAR(4000),
    [item] VARCHAR(MAX),
    [addItem] VARCHAR(MAX),
    [adjudication] VARCHAR(MAX),
    [total] VARCHAR(MAX),
    [payment.id] NVARCHAR(100),
    [payment.extension] NVARCHAR(MAX),
    [payment.modifierExtension] NVARCHAR(MAX),
    [payment.type.id] NVARCHAR(100),
    [payment.type.extension] NVARCHAR(MAX),
    [payment.type.coding] NVARCHAR(MAX),
    [payment.type.text] NVARCHAR(4000),
    [payment.adjustment.id] NVARCHAR(100),
    [payment.adjustment.extension] NVARCHAR(MAX),
    [payment.adjustment.value] float,
    [payment.adjustment.currency] NVARCHAR(100),
    [payment.adjustmentReason.id] NVARCHAR(100),
    [payment.adjustmentReason.extension] NVARCHAR(MAX),
    [payment.adjustmentReason.coding] NVARCHAR(MAX),
    [payment.adjustmentReason.text] NVARCHAR(4000),
    [payment.date] VARCHAR(64),
    [payment.amount.id] NVARCHAR(100),
    [payment.amount.extension] NVARCHAR(MAX),
    [payment.amount.value] float,
    [payment.amount.currency] NVARCHAR(100),
    [payment.identifier.id] NVARCHAR(100),
    [payment.identifier.extension] NVARCHAR(MAX),
    [payment.identifier.use] NVARCHAR(64),
    [payment.identifier.type] NVARCHAR(MAX),
    [payment.identifier.system] VARCHAR(256),
    [payment.identifier.value] NVARCHAR(4000),
    [payment.identifier.period] NVARCHAR(MAX),
    [payment.identifier.assigner] NVARCHAR(MAX),
    [formCode.id] NVARCHAR(100),
    [formCode.extension] NVARCHAR(MAX),
    [formCode.coding] VARCHAR(MAX),
    [formCode.text] NVARCHAR(4000),
    [form.id] NVARCHAR(100),
    [form.extension] NVARCHAR(MAX),
    [form.contentType] NVARCHAR(100),
    [form.language] NVARCHAR(100),
    [form.data] NVARCHAR(MAX),
    [form.url] VARCHAR(256),
    [form.size] NVARCHAR(MAX),
    [form.hash] NVARCHAR(MAX),
    [form.title] NVARCHAR(4000),
    [form.creation] VARCHAR(64),
    [form.height] bigint,
    [form.width] bigint,
    [form.frames] bigint,
    [form.duration] float,
    [form.pages] bigint,
    [processNote] VARCHAR(MAX),
    [benefitPeriod.id] NVARCHAR(100),
    [benefitPeriod.extension] NVARCHAR(MAX),
    [benefitPeriod.start] VARCHAR(64),
    [benefitPeriod.end] VARCHAR(64),
    [benefitBalance] VARCHAR(MAX),
) WITH (
    LOCATION='/ExplanationOfBenefit/**',
    DATA_SOURCE = ParquetSource,
    FILE_FORMAT = ParquetFormat
);

GO

CREATE VIEW fhir.ExplanationOfBenefitIdentifier AS
SELECT
    [id],
    [identifier.JSON],
    [identifier.id],
    [identifier.extension],
    [identifier.use],
    [identifier.type.id],
    [identifier.type.extension],
    [identifier.type.coding],
    [identifier.type.text],
    [identifier.system],
    [identifier.value],
    [identifier.period.id],
    [identifier.period.extension],
    [identifier.period.start],
    [identifier.period.end],
    [identifier.assigner.id],
    [identifier.assigner.extension],
    [identifier.assigner.reference],
    [identifier.assigner.type],
    [identifier.assigner.identifier],
    [identifier.assigner.display]
FROM openrowset (
        BULK 'ExplanationOfBenefit/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [identifier.JSON]  VARCHAR(MAX) '$.identifier'
    ) AS rowset
    CROSS APPLY openjson (rowset.[identifier.JSON]) with (
        [identifier.id]                NVARCHAR(100)       '$.id',
        [identifier.extension]         NVARCHAR(MAX)       '$.extension',
        [identifier.use]               NVARCHAR(64)        '$.use',
        [identifier.type.id]           NVARCHAR(100)       '$.type.id',
        [identifier.type.extension]    NVARCHAR(MAX)       '$.type.extension',
        [identifier.type.coding]       NVARCHAR(MAX)       '$.type.coding',
        [identifier.type.text]         NVARCHAR(4000)      '$.type.text',
        [identifier.system]            VARCHAR(256)        '$.system',
        [identifier.value]             NVARCHAR(4000)      '$.value',
        [identifier.period.id]         NVARCHAR(100)       '$.period.id',
        [identifier.period.extension]  NVARCHAR(MAX)       '$.period.extension',
        [identifier.period.start]      VARCHAR(64)         '$.period.start',
        [identifier.period.end]        VARCHAR(64)         '$.period.end',
        [identifier.assigner.id]       NVARCHAR(100)       '$.assigner.id',
        [identifier.assigner.extension] NVARCHAR(MAX)       '$.assigner.extension',
        [identifier.assigner.reference] NVARCHAR(4000)      '$.assigner.reference',
        [identifier.assigner.type]     VARCHAR(256)        '$.assigner.type',
        [identifier.assigner.identifier] NVARCHAR(MAX)       '$.assigner.identifier',
        [identifier.assigner.display]  NVARCHAR(4000)      '$.assigner.display'
    ) j

GO

CREATE VIEW fhir.ExplanationOfBenefitRelated AS
SELECT
    [id],
    [related.JSON],
    [related.id],
    [related.extension],
    [related.modifierExtension],
    [related.claim.id],
    [related.claim.extension],
    [related.claim.reference],
    [related.claim.type],
    [related.claim.identifier],
    [related.claim.display],
    [related.relationship.id],
    [related.relationship.extension],
    [related.relationship.coding],
    [related.relationship.text],
    [related.reference.id],
    [related.reference.extension],
    [related.reference.use],
    [related.reference.type],
    [related.reference.system],
    [related.reference.value],
    [related.reference.period],
    [related.reference.assigner]
FROM openrowset (
        BULK 'ExplanationOfBenefit/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [related.JSON]  VARCHAR(MAX) '$.related'
    ) AS rowset
    CROSS APPLY openjson (rowset.[related.JSON]) with (
        [related.id]                   NVARCHAR(100)       '$.id',
        [related.extension]            NVARCHAR(MAX)       '$.extension',
        [related.modifierExtension]    NVARCHAR(MAX)       '$.modifierExtension',
        [related.claim.id]             NVARCHAR(100)       '$.claim.id',
        [related.claim.extension]      NVARCHAR(MAX)       '$.claim.extension',
        [related.claim.reference]      NVARCHAR(4000)      '$.claim.reference',
        [related.claim.type]           VARCHAR(256)        '$.claim.type',
        [related.claim.identifier]     NVARCHAR(MAX)       '$.claim.identifier',
        [related.claim.display]        NVARCHAR(4000)      '$.claim.display',
        [related.relationship.id]      NVARCHAR(100)       '$.relationship.id',
        [related.relationship.extension] NVARCHAR(MAX)       '$.relationship.extension',
        [related.relationship.coding]  NVARCHAR(MAX)       '$.relationship.coding',
        [related.relationship.text]    NVARCHAR(4000)      '$.relationship.text',
        [related.reference.id]         NVARCHAR(100)       '$.reference.id',
        [related.reference.extension]  NVARCHAR(MAX)       '$.reference.extension',
        [related.reference.use]        NVARCHAR(64)        '$.reference.use',
        [related.reference.type]       NVARCHAR(MAX)       '$.reference.type',
        [related.reference.system]     VARCHAR(256)        '$.reference.system',
        [related.reference.value]      NVARCHAR(4000)      '$.reference.value',
        [related.reference.period]     NVARCHAR(MAX)       '$.reference.period',
        [related.reference.assigner]   NVARCHAR(MAX)       '$.reference.assigner'
    ) j

GO

CREATE VIEW fhir.ExplanationOfBenefitPreAuthRef AS
SELECT
    [id],
    [preAuthRef.JSON],
    [preAuthRef]
FROM openrowset (
        BULK 'ExplanationOfBenefit/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [preAuthRef.JSON]  VARCHAR(MAX) '$.preAuthRef'
    ) AS rowset
    CROSS APPLY openjson (rowset.[preAuthRef.JSON]) with (
        [preAuthRef]                   NVARCHAR(MAX)       '$'
    ) j

GO

CREATE VIEW fhir.ExplanationOfBenefitPreAuthRefPeriod AS
SELECT
    [id],
    [preAuthRefPeriod.JSON],
    [preAuthRefPeriod.id],
    [preAuthRefPeriod.extension],
    [preAuthRefPeriod.start],
    [preAuthRefPeriod.end]
FROM openrowset (
        BULK 'ExplanationOfBenefit/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [preAuthRefPeriod.JSON]  VARCHAR(MAX) '$.preAuthRefPeriod'
    ) AS rowset
    CROSS APPLY openjson (rowset.[preAuthRefPeriod.JSON]) with (
        [preAuthRefPeriod.id]          NVARCHAR(100)       '$.id',
        [preAuthRefPeriod.extension]   NVARCHAR(MAX)       '$.extension',
        [preAuthRefPeriod.start]       VARCHAR(64)         '$.start',
        [preAuthRefPeriod.end]         VARCHAR(64)         '$.end'
    ) j

GO

CREATE VIEW fhir.ExplanationOfBenefitCareTeam AS
SELECT
    [id],
    [careTeam.JSON],
    [careTeam.id],
    [careTeam.extension],
    [careTeam.modifierExtension],
    [careTeam.sequence],
    [careTeam.provider.id],
    [careTeam.provider.extension],
    [careTeam.provider.reference],
    [careTeam.provider.type],
    [careTeam.provider.identifier],
    [careTeam.provider.display],
    [careTeam.responsible],
    [careTeam.role.id],
    [careTeam.role.extension],
    [careTeam.role.coding],
    [careTeam.role.text],
    [careTeam.qualification.id],
    [careTeam.qualification.extension],
    [careTeam.qualification.coding],
    [careTeam.qualification.text]
FROM openrowset (
        BULK 'ExplanationOfBenefit/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [careTeam.JSON]  VARCHAR(MAX) '$.careTeam'
    ) AS rowset
    CROSS APPLY openjson (rowset.[careTeam.JSON]) with (
        [careTeam.id]                  NVARCHAR(100)       '$.id',
        [careTeam.extension]           NVARCHAR(MAX)       '$.extension',
        [careTeam.modifierExtension]   NVARCHAR(MAX)       '$.modifierExtension',
        [careTeam.sequence]            bigint              '$.sequence',
        [careTeam.provider.id]         NVARCHAR(100)       '$.provider.id',
        [careTeam.provider.extension]  NVARCHAR(MAX)       '$.provider.extension',
        [careTeam.provider.reference]  NVARCHAR(4000)      '$.provider.reference',
        [careTeam.provider.type]       VARCHAR(256)        '$.provider.type',
        [careTeam.provider.identifier] NVARCHAR(MAX)       '$.provider.identifier',
        [careTeam.provider.display]    NVARCHAR(4000)      '$.provider.display',
        [careTeam.responsible]         bit                 '$.responsible',
        [careTeam.role.id]             NVARCHAR(100)       '$.role.id',
        [careTeam.role.extension]      NVARCHAR(MAX)       '$.role.extension',
        [careTeam.role.coding]         NVARCHAR(MAX)       '$.role.coding',
        [careTeam.role.text]           NVARCHAR(4000)      '$.role.text',
        [careTeam.qualification.id]    NVARCHAR(100)       '$.qualification.id',
        [careTeam.qualification.extension] NVARCHAR(MAX)       '$.qualification.extension',
        [careTeam.qualification.coding] NVARCHAR(MAX)       '$.qualification.coding',
        [careTeam.qualification.text]  NVARCHAR(4000)      '$.qualification.text'
    ) j

GO

CREATE VIEW fhir.ExplanationOfBenefitSupportingInfo AS
SELECT
    [id],
    [supportingInfo.JSON],
    [supportingInfo.id],
    [supportingInfo.extension],
    [supportingInfo.modifierExtension],
    [supportingInfo.sequence],
    [supportingInfo.category.id],
    [supportingInfo.category.extension],
    [supportingInfo.category.coding],
    [supportingInfo.category.text],
    [supportingInfo.code.id],
    [supportingInfo.code.extension],
    [supportingInfo.code.coding],
    [supportingInfo.code.text],
    [supportingInfo.reason.id],
    [supportingInfo.reason.extension],
    [supportingInfo.reason.system],
    [supportingInfo.reason.version],
    [supportingInfo.reason.code],
    [supportingInfo.reason.display],
    [supportingInfo.reason.userSelected],
    [supportingInfo.timing.date],
    [supportingInfo.timing.period.id],
    [supportingInfo.timing.period.extension],
    [supportingInfo.timing.period.start],
    [supportingInfo.timing.period.end],
    [supportingInfo.value.boolean],
    [supportingInfo.value.string],
    [supportingInfo.value.quantity.id],
    [supportingInfo.value.quantity.extension],
    [supportingInfo.value.quantity.value],
    [supportingInfo.value.quantity.comparator],
    [supportingInfo.value.quantity.unit],
    [supportingInfo.value.quantity.system],
    [supportingInfo.value.quantity.code],
    [supportingInfo.value.attachment.id],
    [supportingInfo.value.attachment.extension],
    [supportingInfo.value.attachment.contentType],
    [supportingInfo.value.attachment.language],
    [supportingInfo.value.attachment.data],
    [supportingInfo.value.attachment.url],
    [supportingInfo.value.attachment.size],
    [supportingInfo.value.attachment.hash],
    [supportingInfo.value.attachment.title],
    [supportingInfo.value.attachment.creation],
    [supportingInfo.value.attachment.height],
    [supportingInfo.value.attachment.width],
    [supportingInfo.value.attachment.frames],
    [supportingInfo.value.attachment.duration],
    [supportingInfo.value.attachment.pages],
    [supportingInfo.value.reference.id],
    [supportingInfo.value.reference.extension],
    [supportingInfo.value.reference.reference],
    [supportingInfo.value.reference.type],
    [supportingInfo.value.reference.identifier],
    [supportingInfo.value.reference.display]
FROM openrowset (
        BULK 'ExplanationOfBenefit/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [supportingInfo.JSON]  VARCHAR(MAX) '$.supportingInfo'
    ) AS rowset
    CROSS APPLY openjson (rowset.[supportingInfo.JSON]) with (
        [supportingInfo.id]            NVARCHAR(100)       '$.id',
        [supportingInfo.extension]     NVARCHAR(MAX)       '$.extension',
        [supportingInfo.modifierExtension] NVARCHAR(MAX)       '$.modifierExtension',
        [supportingInfo.sequence]      bigint              '$.sequence',
        [supportingInfo.category.id]   NVARCHAR(100)       '$.category.id',
        [supportingInfo.category.extension] NVARCHAR(MAX)       '$.category.extension',
        [supportingInfo.category.coding] NVARCHAR(MAX)       '$.category.coding',
        [supportingInfo.category.text] NVARCHAR(4000)      '$.category.text',
        [supportingInfo.code.id]       NVARCHAR(100)       '$.code.id',
        [supportingInfo.code.extension] NVARCHAR(MAX)       '$.code.extension',
        [supportingInfo.code.coding]   NVARCHAR(MAX)       '$.code.coding',
        [supportingInfo.code.text]     NVARCHAR(4000)      '$.code.text',
        [supportingInfo.reason.id]     NVARCHAR(100)       '$.reason.id',
        [supportingInfo.reason.extension] NVARCHAR(MAX)       '$.reason.extension',
        [supportingInfo.reason.system] VARCHAR(256)        '$.reason.system',
        [supportingInfo.reason.version] NVARCHAR(100)       '$.reason.version',
        [supportingInfo.reason.code]   NVARCHAR(4000)      '$.reason.code',
        [supportingInfo.reason.display] NVARCHAR(4000)      '$.reason.display',
        [supportingInfo.reason.userSelected] bit                 '$.reason.userSelected',
        [supportingInfo.timing.date]   VARCHAR(64)         '$.timing.date',
        [supportingInfo.timing.period.id] NVARCHAR(100)       '$.timing.period.id',
        [supportingInfo.timing.period.extension] NVARCHAR(MAX)       '$.timing.period.extension',
        [supportingInfo.timing.period.start] VARCHAR(64)         '$.timing.period.start',
        [supportingInfo.timing.period.end] VARCHAR(64)         '$.timing.period.end',
        [supportingInfo.value.boolean] bit                 '$.value.boolean',
        [supportingInfo.value.string]  NVARCHAR(4000)      '$.value.string',
        [supportingInfo.value.quantity.id] NVARCHAR(100)       '$.value.quantity.id',
        [supportingInfo.value.quantity.extension] NVARCHAR(MAX)       '$.value.quantity.extension',
        [supportingInfo.value.quantity.value] float               '$.value.quantity.value',
        [supportingInfo.value.quantity.comparator] NVARCHAR(64)        '$.value.quantity.comparator',
        [supportingInfo.value.quantity.unit] NVARCHAR(100)       '$.value.quantity.unit',
        [supportingInfo.value.quantity.system] VARCHAR(256)        '$.value.quantity.system',
        [supportingInfo.value.quantity.code] NVARCHAR(4000)      '$.value.quantity.code',
        [supportingInfo.value.attachment.id] NVARCHAR(100)       '$.value.attachment.id',
        [supportingInfo.value.attachment.extension] NVARCHAR(MAX)       '$.value.attachment.extension',
        [supportingInfo.value.attachment.contentType] NVARCHAR(100)       '$.value.attachment.contentType',
        [supportingInfo.value.attachment.language] NVARCHAR(100)       '$.value.attachment.language',
        [supportingInfo.value.attachment.data] NVARCHAR(MAX)       '$.value.attachment.data',
        [supportingInfo.value.attachment.url] VARCHAR(256)        '$.value.attachment.url',
        [supportingInfo.value.attachment.size] NVARCHAR(MAX)       '$.value.attachment.size',
        [supportingInfo.value.attachment.hash] NVARCHAR(MAX)       '$.value.attachment.hash',
        [supportingInfo.value.attachment.title] NVARCHAR(4000)      '$.value.attachment.title',
        [supportingInfo.value.attachment.creation] VARCHAR(64)         '$.value.attachment.creation',
        [supportingInfo.value.attachment.height] bigint              '$.value.attachment.height',
        [supportingInfo.value.attachment.width] bigint              '$.value.attachment.width',
        [supportingInfo.value.attachment.frames] bigint              '$.value.attachment.frames',
        [supportingInfo.value.attachment.duration] float               '$.value.attachment.duration',
        [supportingInfo.value.attachment.pages] bigint              '$.value.attachment.pages',
        [supportingInfo.value.reference.id] NVARCHAR(100)       '$.value.reference.id',
        [supportingInfo.value.reference.extension] NVARCHAR(MAX)       '$.value.reference.extension',
        [supportingInfo.value.reference.reference] NVARCHAR(4000)      '$.value.reference.reference',
        [supportingInfo.value.reference.type] VARCHAR(256)        '$.value.reference.type',
        [supportingInfo.value.reference.identifier] NVARCHAR(MAX)       '$.value.reference.identifier',
        [supportingInfo.value.reference.display] NVARCHAR(4000)      '$.value.reference.display'
    ) j

GO

CREATE VIEW fhir.ExplanationOfBenefitDiagnosis AS
SELECT
    [id],
    [diagnosis.JSON],
    [diagnosis.id],
    [diagnosis.extension],
    [diagnosis.modifierExtension],
    [diagnosis.sequence],
    [diagnosis.type],
    [diagnosis.onAdmission.id],
    [diagnosis.onAdmission.extension],
    [diagnosis.onAdmission.coding],
    [diagnosis.onAdmission.text],
    [diagnosis.packageCode.id],
    [diagnosis.packageCode.extension],
    [diagnosis.packageCode.coding],
    [diagnosis.packageCode.text],
    [diagnosis.diagnosis.codeableConcept.id],
    [diagnosis.diagnosis.codeableConcept.extension],
    [diagnosis.diagnosis.codeableConcept.coding],
    [diagnosis.diagnosis.codeableConcept.text],
    [diagnosis.diagnosis.reference.id],
    [diagnosis.diagnosis.reference.extension],
    [diagnosis.diagnosis.reference.reference],
    [diagnosis.diagnosis.reference.type],
    [diagnosis.diagnosis.reference.identifier],
    [diagnosis.diagnosis.reference.display]
FROM openrowset (
        BULK 'ExplanationOfBenefit/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [diagnosis.JSON]  VARCHAR(MAX) '$.diagnosis'
    ) AS rowset
    CROSS APPLY openjson (rowset.[diagnosis.JSON]) with (
        [diagnosis.id]                 NVARCHAR(100)       '$.id',
        [diagnosis.extension]          NVARCHAR(MAX)       '$.extension',
        [diagnosis.modifierExtension]  NVARCHAR(MAX)       '$.modifierExtension',
        [diagnosis.sequence]           bigint              '$.sequence',
        [diagnosis.type]               NVARCHAR(MAX)       '$.type' AS JSON,
        [diagnosis.onAdmission.id]     NVARCHAR(100)       '$.onAdmission.id',
        [diagnosis.onAdmission.extension] NVARCHAR(MAX)       '$.onAdmission.extension',
        [diagnosis.onAdmission.coding] NVARCHAR(MAX)       '$.onAdmission.coding',
        [diagnosis.onAdmission.text]   NVARCHAR(4000)      '$.onAdmission.text',
        [diagnosis.packageCode.id]     NVARCHAR(100)       '$.packageCode.id',
        [diagnosis.packageCode.extension] NVARCHAR(MAX)       '$.packageCode.extension',
        [diagnosis.packageCode.coding] NVARCHAR(MAX)       '$.packageCode.coding',
        [diagnosis.packageCode.text]   NVARCHAR(4000)      '$.packageCode.text',
        [diagnosis.diagnosis.codeableConcept.id] NVARCHAR(100)       '$.diagnosis.codeableConcept.id',
        [diagnosis.diagnosis.codeableConcept.extension] NVARCHAR(MAX)       '$.diagnosis.codeableConcept.extension',
        [diagnosis.diagnosis.codeableConcept.coding] NVARCHAR(MAX)       '$.diagnosis.codeableConcept.coding',
        [diagnosis.diagnosis.codeableConcept.text] NVARCHAR(4000)      '$.diagnosis.codeableConcept.text',
        [diagnosis.diagnosis.reference.id] NVARCHAR(100)       '$.diagnosis.reference.id',
        [diagnosis.diagnosis.reference.extension] NVARCHAR(MAX)       '$.diagnosis.reference.extension',
        [diagnosis.diagnosis.reference.reference] NVARCHAR(4000)      '$.diagnosis.reference.reference',
        [diagnosis.diagnosis.reference.type] VARCHAR(256)        '$.diagnosis.reference.type',
        [diagnosis.diagnosis.reference.identifier] NVARCHAR(MAX)       '$.diagnosis.reference.identifier',
        [diagnosis.diagnosis.reference.display] NVARCHAR(4000)      '$.diagnosis.reference.display'
    ) j

GO

CREATE VIEW fhir.ExplanationOfBenefitProcedure AS
SELECT
    [id],
    [procedure.JSON],
    [procedure.id],
    [procedure.extension],
    [procedure.modifierExtension],
    [procedure.sequence],
    [procedure.type],
    [procedure.date],
    [procedure.udi],
    [procedure.procedure.codeableConcept.id],
    [procedure.procedure.codeableConcept.extension],
    [procedure.procedure.codeableConcept.coding],
    [procedure.procedure.codeableConcept.text],
    [procedure.procedure.reference.id],
    [procedure.procedure.reference.extension],
    [procedure.procedure.reference.reference],
    [procedure.procedure.reference.type],
    [procedure.procedure.reference.identifier],
    [procedure.procedure.reference.display]
FROM openrowset (
        BULK 'ExplanationOfBenefit/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [procedure.JSON]  VARCHAR(MAX) '$.procedure'
    ) AS rowset
    CROSS APPLY openjson (rowset.[procedure.JSON]) with (
        [procedure.id]                 NVARCHAR(100)       '$.id',
        [procedure.extension]          NVARCHAR(MAX)       '$.extension',
        [procedure.modifierExtension]  NVARCHAR(MAX)       '$.modifierExtension',
        [procedure.sequence]           bigint              '$.sequence',
        [procedure.type]               NVARCHAR(MAX)       '$.type' AS JSON,
        [procedure.date]               VARCHAR(64)         '$.date',
        [procedure.udi]                NVARCHAR(MAX)       '$.udi' AS JSON,
        [procedure.procedure.codeableConcept.id] NVARCHAR(100)       '$.procedure.codeableConcept.id',
        [procedure.procedure.codeableConcept.extension] NVARCHAR(MAX)       '$.procedure.codeableConcept.extension',
        [procedure.procedure.codeableConcept.coding] NVARCHAR(MAX)       '$.procedure.codeableConcept.coding',
        [procedure.procedure.codeableConcept.text] NVARCHAR(4000)      '$.procedure.codeableConcept.text',
        [procedure.procedure.reference.id] NVARCHAR(100)       '$.procedure.reference.id',
        [procedure.procedure.reference.extension] NVARCHAR(MAX)       '$.procedure.reference.extension',
        [procedure.procedure.reference.reference] NVARCHAR(4000)      '$.procedure.reference.reference',
        [procedure.procedure.reference.type] VARCHAR(256)        '$.procedure.reference.type',
        [procedure.procedure.reference.identifier] NVARCHAR(MAX)       '$.procedure.reference.identifier',
        [procedure.procedure.reference.display] NVARCHAR(4000)      '$.procedure.reference.display'
    ) j

GO

CREATE VIEW fhir.ExplanationOfBenefitInsurance AS
SELECT
    [id],
    [insurance.JSON],
    [insurance.id],
    [insurance.extension],
    [insurance.modifierExtension],
    [insurance.focal],
    [insurance.coverage.id],
    [insurance.coverage.extension],
    [insurance.coverage.reference],
    [insurance.coverage.type],
    [insurance.coverage.identifier],
    [insurance.coverage.display],
    [insurance.preAuthRef]
FROM openrowset (
        BULK 'ExplanationOfBenefit/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [insurance.JSON]  VARCHAR(MAX) '$.insurance'
    ) AS rowset
    CROSS APPLY openjson (rowset.[insurance.JSON]) with (
        [insurance.id]                 NVARCHAR(100)       '$.id',
        [insurance.extension]          NVARCHAR(MAX)       '$.extension',
        [insurance.modifierExtension]  NVARCHAR(MAX)       '$.modifierExtension',
        [insurance.focal]              bit                 '$.focal',
        [insurance.coverage.id]        NVARCHAR(100)       '$.coverage.id',
        [insurance.coverage.extension] NVARCHAR(MAX)       '$.coverage.extension',
        [insurance.coverage.reference] NVARCHAR(4000)      '$.coverage.reference',
        [insurance.coverage.type]      VARCHAR(256)        '$.coverage.type',
        [insurance.coverage.identifier] NVARCHAR(MAX)       '$.coverage.identifier',
        [insurance.coverage.display]   NVARCHAR(4000)      '$.coverage.display',
        [insurance.preAuthRef]         NVARCHAR(MAX)       '$.preAuthRef' AS JSON
    ) j

GO

CREATE VIEW fhir.ExplanationOfBenefitItem AS
SELECT
    [id],
    [item.JSON],
    [item.id],
    [item.extension],
    [item.modifierExtension],
    [item.sequence],
    [item.careTeamSequence],
    [item.diagnosisSequence],
    [item.procedureSequence],
    [item.informationSequence],
    [item.revenue.id],
    [item.revenue.extension],
    [item.revenue.coding],
    [item.revenue.text],
    [item.category.id],
    [item.category.extension],
    [item.category.coding],
    [item.category.text],
    [item.productOrService.id],
    [item.productOrService.extension],
    [item.productOrService.coding],
    [item.productOrService.text],
    [item.modifier],
    [item.programCode],
    [item.quantity.id],
    [item.quantity.extension],
    [item.quantity.value],
    [item.quantity.comparator],
    [item.quantity.unit],
    [item.quantity.system],
    [item.quantity.code],
    [item.unitPrice.id],
    [item.unitPrice.extension],
    [item.unitPrice.value],
    [item.unitPrice.currency],
    [item.factor],
    [item.net.id],
    [item.net.extension],
    [item.net.value],
    [item.net.currency],
    [item.udi],
    [item.bodySite.id],
    [item.bodySite.extension],
    [item.bodySite.coding],
    [item.bodySite.text],
    [item.subSite],
    [item.encounter],
    [item.noteNumber],
    [item.adjudication],
    [item.detail],
    [item.serviced.date],
    [item.serviced.period.id],
    [item.serviced.period.extension],
    [item.serviced.period.start],
    [item.serviced.period.end],
    [item.location.codeableConcept.id],
    [item.location.codeableConcept.extension],
    [item.location.codeableConcept.coding],
    [item.location.codeableConcept.text],
    [item.location.address.id],
    [item.location.address.extension],
    [item.location.address.use],
    [item.location.address.type],
    [item.location.address.text],
    [item.location.address.line],
    [item.location.address.city],
    [item.location.address.district],
    [item.location.address.state],
    [item.location.address.postalCode],
    [item.location.address.country],
    [item.location.address.period],
    [item.location.reference.id],
    [item.location.reference.extension],
    [item.location.reference.reference],
    [item.location.reference.type],
    [item.location.reference.identifier],
    [item.location.reference.display]
FROM openrowset (
        BULK 'ExplanationOfBenefit/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [item.JSON]  VARCHAR(MAX) '$.item'
    ) AS rowset
    CROSS APPLY openjson (rowset.[item.JSON]) with (
        [item.id]                      NVARCHAR(100)       '$.id',
        [item.extension]               NVARCHAR(MAX)       '$.extension',
        [item.modifierExtension]       NVARCHAR(MAX)       '$.modifierExtension',
        [item.sequence]                bigint              '$.sequence',
        [item.careTeamSequence]        NVARCHAR(MAX)       '$.careTeamSequence' AS JSON,
        [item.diagnosisSequence]       NVARCHAR(MAX)       '$.diagnosisSequence' AS JSON,
        [item.procedureSequence]       NVARCHAR(MAX)       '$.procedureSequence' AS JSON,
        [item.informationSequence]     NVARCHAR(MAX)       '$.informationSequence' AS JSON,
        [item.revenue.id]              NVARCHAR(100)       '$.revenue.id',
        [item.revenue.extension]       NVARCHAR(MAX)       '$.revenue.extension',
        [item.revenue.coding]          NVARCHAR(MAX)       '$.revenue.coding',
        [item.revenue.text]            NVARCHAR(4000)      '$.revenue.text',
        [item.category.id]             NVARCHAR(100)       '$.category.id',
        [item.category.extension]      NVARCHAR(MAX)       '$.category.extension',
        [item.category.coding]         NVARCHAR(MAX)       '$.category.coding',
        [item.category.text]           NVARCHAR(4000)      '$.category.text',
        [item.productOrService.id]     NVARCHAR(100)       '$.productOrService.id',
        [item.productOrService.extension] NVARCHAR(MAX)       '$.productOrService.extension',
        [item.productOrService.coding] NVARCHAR(MAX)       '$.productOrService.coding',
        [item.productOrService.text]   NVARCHAR(4000)      '$.productOrService.text',
        [item.modifier]                NVARCHAR(MAX)       '$.modifier' AS JSON,
        [item.programCode]             NVARCHAR(MAX)       '$.programCode' AS JSON,
        [item.quantity.id]             NVARCHAR(100)       '$.quantity.id',
        [item.quantity.extension]      NVARCHAR(MAX)       '$.quantity.extension',
        [item.quantity.value]          float               '$.quantity.value',
        [item.quantity.comparator]     NVARCHAR(64)        '$.quantity.comparator',
        [item.quantity.unit]           NVARCHAR(100)       '$.quantity.unit',
        [item.quantity.system]         VARCHAR(256)        '$.quantity.system',
        [item.quantity.code]           NVARCHAR(4000)      '$.quantity.code',
        [item.unitPrice.id]            NVARCHAR(100)       '$.unitPrice.id',
        [item.unitPrice.extension]     NVARCHAR(MAX)       '$.unitPrice.extension',
        [item.unitPrice.value]         float               '$.unitPrice.value',
        [item.unitPrice.currency]      NVARCHAR(100)       '$.unitPrice.currency',
        [item.factor]                  float               '$.factor',
        [item.net.id]                  NVARCHAR(100)       '$.net.id',
        [item.net.extension]           NVARCHAR(MAX)       '$.net.extension',
        [item.net.value]               float               '$.net.value',
        [item.net.currency]            NVARCHAR(100)       '$.net.currency',
        [item.udi]                     NVARCHAR(MAX)       '$.udi' AS JSON,
        [item.bodySite.id]             NVARCHAR(100)       '$.bodySite.id',
        [item.bodySite.extension]      NVARCHAR(MAX)       '$.bodySite.extension',
        [item.bodySite.coding]         NVARCHAR(MAX)       '$.bodySite.coding',
        [item.bodySite.text]           NVARCHAR(4000)      '$.bodySite.text',
        [item.subSite]                 NVARCHAR(MAX)       '$.subSite' AS JSON,
        [item.encounter]               NVARCHAR(MAX)       '$.encounter' AS JSON,
        [item.noteNumber]              NVARCHAR(MAX)       '$.noteNumber' AS JSON,
        [item.adjudication]            NVARCHAR(MAX)       '$.adjudication' AS JSON,
        [item.detail]                  NVARCHAR(MAX)       '$.detail' AS JSON,
        [item.serviced.date]           VARCHAR(64)         '$.serviced.date',
        [item.serviced.period.id]      NVARCHAR(100)       '$.serviced.period.id',
        [item.serviced.period.extension] NVARCHAR(MAX)       '$.serviced.period.extension',
        [item.serviced.period.start]   VARCHAR(64)         '$.serviced.period.start',
        [item.serviced.period.end]     VARCHAR(64)         '$.serviced.period.end',
        [item.location.codeableConcept.id] NVARCHAR(100)       '$.location.codeableConcept.id',
        [item.location.codeableConcept.extension] NVARCHAR(MAX)       '$.location.codeableConcept.extension',
        [item.location.codeableConcept.coding] NVARCHAR(MAX)       '$.location.codeableConcept.coding',
        [item.location.codeableConcept.text] NVARCHAR(4000)      '$.location.codeableConcept.text',
        [item.location.address.id]     NVARCHAR(100)       '$.location.address.id',
        [item.location.address.extension] NVARCHAR(MAX)       '$.location.address.extension',
        [item.location.address.use]    NVARCHAR(64)        '$.location.address.use',
        [item.location.address.type]   NVARCHAR(64)        '$.location.address.type',
        [item.location.address.text]   NVARCHAR(4000)      '$.location.address.text',
        [item.location.address.line]   NVARCHAR(MAX)       '$.location.address.line',
        [item.location.address.city]   NVARCHAR(500)       '$.location.address.city',
        [item.location.address.district] NVARCHAR(500)       '$.location.address.district',
        [item.location.address.state]  NVARCHAR(500)       '$.location.address.state',
        [item.location.address.postalCode] NVARCHAR(100)       '$.location.address.postalCode',
        [item.location.address.country] NVARCHAR(500)       '$.location.address.country',
        [item.location.address.period] NVARCHAR(MAX)       '$.location.address.period',
        [item.location.reference.id]   NVARCHAR(100)       '$.location.reference.id',
        [item.location.reference.extension] NVARCHAR(MAX)       '$.location.reference.extension',
        [item.location.reference.reference] NVARCHAR(4000)      '$.location.reference.reference',
        [item.location.reference.type] VARCHAR(256)        '$.location.reference.type',
        [item.location.reference.identifier] NVARCHAR(MAX)       '$.location.reference.identifier',
        [item.location.reference.display] NVARCHAR(4000)      '$.location.reference.display'
    ) j

GO

CREATE VIEW fhir.ExplanationOfBenefitAddItem AS
SELECT
    [id],
    [addItem.JSON],
    [addItem.id],
    [addItem.extension],
    [addItem.modifierExtension],
    [addItem.itemSequence],
    [addItem.detailSequence],
    [addItem.subDetailSequence],
    [addItem.provider],
    [addItem.productOrService.id],
    [addItem.productOrService.extension],
    [addItem.productOrService.coding],
    [addItem.productOrService.text],
    [addItem.modifier],
    [addItem.programCode],
    [addItem.quantity.id],
    [addItem.quantity.extension],
    [addItem.quantity.value],
    [addItem.quantity.comparator],
    [addItem.quantity.unit],
    [addItem.quantity.system],
    [addItem.quantity.code],
    [addItem.unitPrice.id],
    [addItem.unitPrice.extension],
    [addItem.unitPrice.value],
    [addItem.unitPrice.currency],
    [addItem.factor],
    [addItem.net.id],
    [addItem.net.extension],
    [addItem.net.value],
    [addItem.net.currency],
    [addItem.bodySite.id],
    [addItem.bodySite.extension],
    [addItem.bodySite.coding],
    [addItem.bodySite.text],
    [addItem.subSite],
    [addItem.noteNumber],
    [addItem.adjudication],
    [addItem.detail],
    [addItem.serviced.date],
    [addItem.serviced.period.id],
    [addItem.serviced.period.extension],
    [addItem.serviced.period.start],
    [addItem.serviced.period.end],
    [addItem.location.codeableConcept.id],
    [addItem.location.codeableConcept.extension],
    [addItem.location.codeableConcept.coding],
    [addItem.location.codeableConcept.text],
    [addItem.location.address.id],
    [addItem.location.address.extension],
    [addItem.location.address.use],
    [addItem.location.address.type],
    [addItem.location.address.text],
    [addItem.location.address.line],
    [addItem.location.address.city],
    [addItem.location.address.district],
    [addItem.location.address.state],
    [addItem.location.address.postalCode],
    [addItem.location.address.country],
    [addItem.location.address.period],
    [addItem.location.reference.id],
    [addItem.location.reference.extension],
    [addItem.location.reference.reference],
    [addItem.location.reference.type],
    [addItem.location.reference.identifier],
    [addItem.location.reference.display]
FROM openrowset (
        BULK 'ExplanationOfBenefit/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [addItem.JSON]  VARCHAR(MAX) '$.addItem'
    ) AS rowset
    CROSS APPLY openjson (rowset.[addItem.JSON]) with (
        [addItem.id]                   NVARCHAR(100)       '$.id',
        [addItem.extension]            NVARCHAR(MAX)       '$.extension',
        [addItem.modifierExtension]    NVARCHAR(MAX)       '$.modifierExtension',
        [addItem.itemSequence]         NVARCHAR(MAX)       '$.itemSequence' AS JSON,
        [addItem.detailSequence]       NVARCHAR(MAX)       '$.detailSequence' AS JSON,
        [addItem.subDetailSequence]    NVARCHAR(MAX)       '$.subDetailSequence' AS JSON,
        [addItem.provider]             NVARCHAR(MAX)       '$.provider' AS JSON,
        [addItem.productOrService.id]  NVARCHAR(100)       '$.productOrService.id',
        [addItem.productOrService.extension] NVARCHAR(MAX)       '$.productOrService.extension',
        [addItem.productOrService.coding] NVARCHAR(MAX)       '$.productOrService.coding',
        [addItem.productOrService.text] NVARCHAR(4000)      '$.productOrService.text',
        [addItem.modifier]             NVARCHAR(MAX)       '$.modifier' AS JSON,
        [addItem.programCode]          NVARCHAR(MAX)       '$.programCode' AS JSON,
        [addItem.quantity.id]          NVARCHAR(100)       '$.quantity.id',
        [addItem.quantity.extension]   NVARCHAR(MAX)       '$.quantity.extension',
        [addItem.quantity.value]       float               '$.quantity.value',
        [addItem.quantity.comparator]  NVARCHAR(64)        '$.quantity.comparator',
        [addItem.quantity.unit]        NVARCHAR(100)       '$.quantity.unit',
        [addItem.quantity.system]      VARCHAR(256)        '$.quantity.system',
        [addItem.quantity.code]        NVARCHAR(4000)      '$.quantity.code',
        [addItem.unitPrice.id]         NVARCHAR(100)       '$.unitPrice.id',
        [addItem.unitPrice.extension]  NVARCHAR(MAX)       '$.unitPrice.extension',
        [addItem.unitPrice.value]      float               '$.unitPrice.value',
        [addItem.unitPrice.currency]   NVARCHAR(100)       '$.unitPrice.currency',
        [addItem.factor]               float               '$.factor',
        [addItem.net.id]               NVARCHAR(100)       '$.net.id',
        [addItem.net.extension]        NVARCHAR(MAX)       '$.net.extension',
        [addItem.net.value]            float               '$.net.value',
        [addItem.net.currency]         NVARCHAR(100)       '$.net.currency',
        [addItem.bodySite.id]          NVARCHAR(100)       '$.bodySite.id',
        [addItem.bodySite.extension]   NVARCHAR(MAX)       '$.bodySite.extension',
        [addItem.bodySite.coding]      NVARCHAR(MAX)       '$.bodySite.coding',
        [addItem.bodySite.text]        NVARCHAR(4000)      '$.bodySite.text',
        [addItem.subSite]              NVARCHAR(MAX)       '$.subSite' AS JSON,
        [addItem.noteNumber]           NVARCHAR(MAX)       '$.noteNumber' AS JSON,
        [addItem.adjudication]         NVARCHAR(MAX)       '$.adjudication' AS JSON,
        [addItem.detail]               NVARCHAR(MAX)       '$.detail' AS JSON,
        [addItem.serviced.date]        VARCHAR(64)         '$.serviced.date',
        [addItem.serviced.period.id]   NVARCHAR(100)       '$.serviced.period.id',
        [addItem.serviced.period.extension] NVARCHAR(MAX)       '$.serviced.period.extension',
        [addItem.serviced.period.start] VARCHAR(64)         '$.serviced.period.start',
        [addItem.serviced.period.end]  VARCHAR(64)         '$.serviced.period.end',
        [addItem.location.codeableConcept.id] NVARCHAR(100)       '$.location.codeableConcept.id',
        [addItem.location.codeableConcept.extension] NVARCHAR(MAX)       '$.location.codeableConcept.extension',
        [addItem.location.codeableConcept.coding] NVARCHAR(MAX)       '$.location.codeableConcept.coding',
        [addItem.location.codeableConcept.text] NVARCHAR(4000)      '$.location.codeableConcept.text',
        [addItem.location.address.id]  NVARCHAR(100)       '$.location.address.id',
        [addItem.location.address.extension] NVARCHAR(MAX)       '$.location.address.extension',
        [addItem.location.address.use] NVARCHAR(64)        '$.location.address.use',
        [addItem.location.address.type] NVARCHAR(64)        '$.location.address.type',
        [addItem.location.address.text] NVARCHAR(4000)      '$.location.address.text',
        [addItem.location.address.line] NVARCHAR(MAX)       '$.location.address.line',
        [addItem.location.address.city] NVARCHAR(500)       '$.location.address.city',
        [addItem.location.address.district] NVARCHAR(500)       '$.location.address.district',
        [addItem.location.address.state] NVARCHAR(500)       '$.location.address.state',
        [addItem.location.address.postalCode] NVARCHAR(100)       '$.location.address.postalCode',
        [addItem.location.address.country] NVARCHAR(500)       '$.location.address.country',
        [addItem.location.address.period] NVARCHAR(MAX)       '$.location.address.period',
        [addItem.location.reference.id] NVARCHAR(100)       '$.location.reference.id',
        [addItem.location.reference.extension] NVARCHAR(MAX)       '$.location.reference.extension',
        [addItem.location.reference.reference] NVARCHAR(4000)      '$.location.reference.reference',
        [addItem.location.reference.type] VARCHAR(256)        '$.location.reference.type',
        [addItem.location.reference.identifier] NVARCHAR(MAX)       '$.location.reference.identifier',
        [addItem.location.reference.display] NVARCHAR(4000)      '$.location.reference.display'
    ) j

GO

CREATE VIEW fhir.ExplanationOfBenefitAdjudication AS
SELECT
    [id],
    [adjudication.JSON],
    [adjudication.id],
    [adjudication.extension],
    [adjudication.modifierExtension],
    [adjudication.category.id],
    [adjudication.category.extension],
    [adjudication.category.coding],
    [adjudication.category.text],
    [adjudication.reason.id],
    [adjudication.reason.extension],
    [adjudication.reason.coding],
    [adjudication.reason.text],
    [adjudication.amount.id],
    [adjudication.amount.extension],
    [adjudication.amount.value],
    [adjudication.amount.currency],
    [adjudication.value]
FROM openrowset (
        BULK 'ExplanationOfBenefit/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [adjudication.JSON]  VARCHAR(MAX) '$.adjudication'
    ) AS rowset
    CROSS APPLY openjson (rowset.[adjudication.JSON]) with (
        [adjudication.id]              NVARCHAR(100)       '$.id',
        [adjudication.extension]       NVARCHAR(MAX)       '$.extension',
        [adjudication.modifierExtension] NVARCHAR(MAX)       '$.modifierExtension',
        [adjudication.category.id]     NVARCHAR(100)       '$.category.id',
        [adjudication.category.extension] NVARCHAR(MAX)       '$.category.extension',
        [adjudication.category.coding] NVARCHAR(MAX)       '$.category.coding',
        [adjudication.category.text]   NVARCHAR(4000)      '$.category.text',
        [adjudication.reason.id]       NVARCHAR(100)       '$.reason.id',
        [adjudication.reason.extension] NVARCHAR(MAX)       '$.reason.extension',
        [adjudication.reason.coding]   NVARCHAR(MAX)       '$.reason.coding',
        [adjudication.reason.text]     NVARCHAR(4000)      '$.reason.text',
        [adjudication.amount.id]       NVARCHAR(100)       '$.amount.id',
        [adjudication.amount.extension] NVARCHAR(MAX)       '$.amount.extension',
        [adjudication.amount.value]    float               '$.amount.value',
        [adjudication.amount.currency] NVARCHAR(100)       '$.amount.currency',
        [adjudication.value]           float               '$.value'
    ) j

GO

CREATE VIEW fhir.ExplanationOfBenefitTotal AS
SELECT
    [id],
    [total.JSON],
    [total.id],
    [total.extension],
    [total.modifierExtension],
    [total.category.id],
    [total.category.extension],
    [total.category.coding],
    [total.category.text],
    [total.amount.id],
    [total.amount.extension],
    [total.amount.value],
    [total.amount.currency]
FROM openrowset (
        BULK 'ExplanationOfBenefit/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [total.JSON]  VARCHAR(MAX) '$.total'
    ) AS rowset
    CROSS APPLY openjson (rowset.[total.JSON]) with (
        [total.id]                     NVARCHAR(100)       '$.id',
        [total.extension]              NVARCHAR(MAX)       '$.extension',
        [total.modifierExtension]      NVARCHAR(MAX)       '$.modifierExtension',
        [total.category.id]            NVARCHAR(100)       '$.category.id',
        [total.category.extension]     NVARCHAR(MAX)       '$.category.extension',
        [total.category.coding]        NVARCHAR(MAX)       '$.category.coding',
        [total.category.text]          NVARCHAR(4000)      '$.category.text',
        [total.amount.id]              NVARCHAR(100)       '$.amount.id',
        [total.amount.extension]       NVARCHAR(MAX)       '$.amount.extension',
        [total.amount.value]           float               '$.amount.value',
        [total.amount.currency]        NVARCHAR(100)       '$.amount.currency'
    ) j

GO

CREATE VIEW fhir.ExplanationOfBenefitProcessNote AS
SELECT
    [id],
    [processNote.JSON],
    [processNote.id],
    [processNote.extension],
    [processNote.modifierExtension],
    [processNote.number],
    [processNote.type],
    [processNote.text],
    [processNote.language.id],
    [processNote.language.extension],
    [processNote.language.coding],
    [processNote.language.text]
FROM openrowset (
        BULK 'ExplanationOfBenefit/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [processNote.JSON]  VARCHAR(MAX) '$.processNote'
    ) AS rowset
    CROSS APPLY openjson (rowset.[processNote.JSON]) with (
        [processNote.id]               NVARCHAR(100)       '$.id',
        [processNote.extension]        NVARCHAR(MAX)       '$.extension',
        [processNote.modifierExtension] NVARCHAR(MAX)       '$.modifierExtension',
        [processNote.number]           bigint              '$.number',
        [processNote.type]             NVARCHAR(100)       '$.type',
        [processNote.text]             NVARCHAR(4000)      '$.text',
        [processNote.language.id]      NVARCHAR(100)       '$.language.id',
        [processNote.language.extension] NVARCHAR(MAX)       '$.language.extension',
        [processNote.language.coding]  NVARCHAR(MAX)       '$.language.coding',
        [processNote.language.text]    NVARCHAR(4000)      '$.language.text'
    ) j

GO

CREATE VIEW fhir.ExplanationOfBenefitBenefitBalance AS
SELECT
    [id],
    [benefitBalance.JSON],
    [benefitBalance.id],
    [benefitBalance.extension],
    [benefitBalance.modifierExtension],
    [benefitBalance.category.id],
    [benefitBalance.category.extension],
    [benefitBalance.category.coding],
    [benefitBalance.category.text],
    [benefitBalance.excluded],
    [benefitBalance.name],
    [benefitBalance.description],
    [benefitBalance.network.id],
    [benefitBalance.network.extension],
    [benefitBalance.network.coding],
    [benefitBalance.network.text],
    [benefitBalance.unit.id],
    [benefitBalance.unit.extension],
    [benefitBalance.unit.coding],
    [benefitBalance.unit.text],
    [benefitBalance.term.id],
    [benefitBalance.term.extension],
    [benefitBalance.term.coding],
    [benefitBalance.term.text],
    [benefitBalance.financial]
FROM openrowset (
        BULK 'ExplanationOfBenefit/**',
        DATA_SOURCE = 'ParquetSource',
        FORMAT = 'PARQUET'
    ) WITH (
        [id]   VARCHAR(64),
       [benefitBalance.JSON]  VARCHAR(MAX) '$.benefitBalance'
    ) AS rowset
    CROSS APPLY openjson (rowset.[benefitBalance.JSON]) with (
        [benefitBalance.id]            NVARCHAR(100)       '$.id',
        [benefitBalance.extension]     NVARCHAR(MAX)       '$.extension',
        [benefitBalance.modifierExtension] NVARCHAR(MAX)       '$.modifierExtension',
        [benefitBalance.category.id]   NVARCHAR(100)       '$.category.id',
        [benefitBalance.category.extension] NVARCHAR(MAX)       '$.category.extension',
        [benefitBalance.category.coding] NVARCHAR(MAX)       '$.category.coding',
        [benefitBalance.category.text] NVARCHAR(4000)      '$.category.text',
        [benefitBalance.excluded]      bit                 '$.excluded',
        [benefitBalance.name]          NVARCHAR(500)       '$.name',
        [benefitBalance.description]   NVARCHAR(4000)      '$.description',
        [benefitBalance.network.id]    NVARCHAR(100)       '$.network.id',
        [benefitBalance.network.extension] NVARCHAR(MAX)       '$.network.extension',
        [benefitBalance.network.coding] NVARCHAR(MAX)       '$.network.coding',
        [benefitBalance.network.text]  NVARCHAR(4000)      '$.network.text',
        [benefitBalance.unit.id]       NVARCHAR(100)       '$.unit.id',
        [benefitBalance.unit.extension] NVARCHAR(MAX)       '$.unit.extension',
        [benefitBalance.unit.coding]   NVARCHAR(MAX)       '$.unit.coding',
        [benefitBalance.unit.text]     NVARCHAR(4000)      '$.unit.text',
        [benefitBalance.term.id]       NVARCHAR(100)       '$.term.id',
        [benefitBalance.term.extension] NVARCHAR(MAX)       '$.term.extension',
        [benefitBalance.term.coding]   NVARCHAR(MAX)       '$.term.coding',
        [benefitBalance.term.text]     NVARCHAR(4000)      '$.term.text',
        [benefitBalance.financial]     NVARCHAR(MAX)       '$.financial' AS JSON
    ) j
