steps:
- task: NuGetAuthenticate@0
  displayName: 'NuGet Authenticate'

- task: NuGetToolInstaller@1
  displayName: 'Use NuGet 5.11'
  inputs:
    versionSpec: 5.11

- task: NuGetCommand@2
  displayName: 'NuGet restore packages.config'
  inputs:
    restoreSolution: '**/*.Native/packages.config'
    vstsFeed: 'FhirAnalytics/FhirAnalyticsPublic'
    restoreDirectory: '../../packages'

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore solution'
  inputs:
    command: restore
    projects: FhirToDataLake/*.sln

- task: MSBuild@1
  displayName: 'Build solution'
  inputs:
    solution: FhirToDataLake/*.sln
    msbuildArchitecture: $(buildPlatform)
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArguments: '-p:ApplicationVersion=$(version)'

- script: |
    "%ProgramFiles(x86)%\Microsoft SDKs\Azure\Storage Emulator\AzureStorageEmulator.exe" init /server "(localdb)\MsSqlLocalDb"
    "%ProgramFiles(x86)%\Microsoft SDKs\Azure\Storage Emulator\AzureStorageEmulator.exe" start
  displayName: 'Start Azure Storage Emulator'

- script: |
    docker pull healthplatformregistry.azurecr.io/fhir-analytics-data-source:v0.0.1
    docker run --rm -d -p 5000:5000 --name mock-data-source healthplatformregistry.azurecr.io/fhir-analytics-data-source:v0.0.1
  displayName: Start mock-data-source

- task: AzureKeyVault@2
  inputs:
    azureSubscription: 'ResoluteOpenSource'
    KeyVaultName: 'fhiranalyticspipeline'
    SecretsFilter: '*'
    RunAsPreJob: false

- task: PowerShell@2
  displayName: Login Azure Account
  inputs:
    targetType: 'inline'
    script: |
      az login -u $(pipeline-service-principal-name) -p $(pipeline-service-principal-password) --service-principal --tenant $(pipeline-tenant-id)

- task: VSTest@2
  displayName: 'Run native tests'
  inputs:
    testAssemblyVer2: |
      **\*Native*\**\*UnitTests.dll
      !**\obj\**
      !**\ref\**
    searchFolder: '$(Build.SourcesDirectory)'
    codeCoverageEnabled: true
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  displayName: 'Run managed tests'
  inputs:
    testAssemblyVer2: |
      FhirToDataLake\**\*Tests.dll
      !**\*Native*\**\*UnitTests.dll
      !**\obj\**
      !**\ref\**
    searchFolder: '$(Build.SourcesDirectory)'
    codeCoverageEnabled: true
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: PowerShell@2
  displayName: Logout Azure Account
  inputs:
    targetType: 'inline'
    script: |
      az logout
      Write-Host "Cleared Azure Account successfully."

- task: Docker@2
  displayName: Stop mock-data-source
  condition: succeededOrFailed()
  inputs:
    command: stop
    container: mock-data-source

# ref: https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/azure-function-app?view=azure-devops#error-publish-using-zip-deploy-option-is-not-supported-for-msbuild-package-type
- task: MSBuild@1
  displayName: 'Publish function app'
  inputs:
    solution: FhirToDataLake/**/*.FunctionApp.csproj
    msbuildArchitecture: $(BuildPlatform)
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'
    msbuildArguments: '-p:DeployOnBuild=true -p:DeployDefaultTarget=WebPublish -p:WebPublishMethod=FileSystem -p:DeleteExistingFiles=True -p:publishUrl=$(Build.SourcesDirectory)/bin/publish/functionapp -p:ApplicationVersion=$(version)'

- task: ArchiveFiles@2
  displayName: 'Archive function app'
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/bin/publish/functionapp'
    includeRootFolder: false
    archiveFile: '$(Build.ArtifactStagingDirectory)/FhirToDataLake/Microsoft.Health.Fhir.Synapse.FunctionApp.zip'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/FhirToDataLake'
    ArtifactName: FhirToDataLakeBuild