steps:
- task: NuGetAuthenticate@0
  displayName: 'NuGet Authenticate'

- task: NuGetToolInstaller@1
  displayName: 'Use NuGet 5.11'
  inputs:
    versionSpec: 5.11

# Install for Project dependencies
- task: UseDotNet@2
  displayName: 'Install .NET Core sdk 3.1'
  inputs:
    packageType: sdk
    version: 3.1.402
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: UseDotNet@2
  displayName: 'Use .NET Core sdk 6.0'
  inputs:
    packageType: sdk
    version: 6.0.302
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore solution'
  inputs:
    command: restore
    projects: FhirToDataLake/*.sln
    feedsToUse: 'config'
    nugetConfigPath: 'FhirToDataLake/NuGet.Config'

- task: DotNetCoreCLI@2
  displayName: 'dotnet build solution'
  inputs:
    command: build
    projects: FhirToDataLake/*.sln
    arguments: '--configuration $(buildConfiguration) -p:Version=$(version)'

- task: DotNetCoreCLI@2
  displayName: Dotnet Publish FhirToDataLake Function App
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: FhirToDataLake/**/*.FunctionApp.csproj
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/FunctionApp'
    zipAfterPublish: True

- task: PublishPipelineArtifact@1
  displayName: Publish FhirToDataLake Function App as Artifact
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/FunctionApp'
    artifact: FhirToDataLakeFunctionApp
    publishLocation: pipeline

- task: PowerShell@2
  displayName: Build FhirToDataLake Tool Docker Image
  inputs:
    targetType: inline
    workingDirectory: FhirToDataLake
    script: |
      docker build -t $(imageName):$(version) -f ./src/Microsoft.Health.Fhir.Synapse.Tool/Dockerfile .
      docker save $(imageName):$(version) -o $(Build.ArtifactStagingDirectory)/$(imageName).tar

- task: PublishPipelineArtifact@1
  displayName: Publish FhirToDataLake Tool Image As Artifact
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/$(imageName).tar'
    artifact: FhirToDataLakeImage
    publishLocation: pipeline
