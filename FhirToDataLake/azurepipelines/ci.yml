steps:
- task: NuGetAuthenticate@0
  displayName: 'NuGet Authenticate'

- task: NuGetToolInstaller@1
  displayName: 'Use NuGet 5.11'
  inputs:
    versionSpec: 5.11

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore solution'
  inputs:
    command: restore
    projects: FhirToDataLake/*.sln
    feedsToUse: 'config'
    nugetConfigPath: 'FhirToDataLake/NuGet.Config'

- task: MSBuild@1
  displayName: 'Build solution'
  inputs:
    solution: FhirToDataLake/*.sln
    msbuildArchitecture: $(buildPlatform)
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArguments: '-p:ApplicationVersion=$(version)'

- script: |
    docker pull mcr.microsoft.com/azure-storage/azurite
    docker run -d --name azurite-emulator-analytics-ci -p 10000:10000 -p 10001:10001 -p 10002:10002 \
        mcr.microsoft.com/azure-storage/azurite
  displayName: 'Start Azurite Emulator'

- task: AzureKeyVault@2
  inputs:
    azureSubscription: 'ResoluteOpenSource'
    KeyVaultName: 'fhiranalyticspipeline'
    SecretsFilter: '*'
    RunAsPreJob: false

- task: AzureCLI@2
  displayName: Run Unit tests
  inputs:
    azureSubscription: 'ResoluteOpenSource'
    workingDirectory: FhirToDataLake
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      export LD_LIBRARY_PATH=.
      dotnet test test/**/bin/x64/Release/net5.0/*.UnitTests.dll --verbosity detailed
  env:
    TestContainerRegistryServer: $(pipeline-container-registry-server)
    TestContainerRegistryPassword: $(pipeline-container-registry-password)
    AZURE_CLIENT_ID: $(pipeline-service-principal-name)
    AZURE_CLIENT_SECRET: $(pipeline-service-principal-password)
    AZURE_TENANT_ID: $(pipeline-tenant-id)
    'dataLakeStore:storageUrl': $(DATALAKESTORE:STORAGEURL)

- task: AzureCLI@2
  displayName: Run E2E tests
  inputs:
    azureSubscription: 'ResoluteOpenSource'
    workingDirectory: FhirToDataLake
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      export LD_LIBRARY_PATH=.
      dotnet test test/**/bin/x64/Release/net5.0/*.E2ETests.dll --verbosity detailed
  env:
    'dataLakeStore:storageUrl': $(DATALAKESTORE:STORAGEURL)

- task: Docker@2
  displayName: Stop Azurite Emulator
  condition: succeededOrFailed()
  inputs:
    command: stop
    container: azurite-emulator-analytics-ci

# ref: https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/azure-function-app?view=azure-devops#error-publish-using-zip-deploy-option-is-not-supported-for-msbuild-package-type
- task: MSBuild@1
  displayName: 'Publish function app'
  inputs:
    solution: FhirToDataLake/**/*.FunctionApp.csproj
    msbuildArchitecture: $(BuildPlatform)
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'
    msbuildArguments: '-p:DeployOnBuild=true -p:DeployDefaultTarget=WebPublish -p:WebPublishMethod=FileSystem -p:DeleteExistingFiles=True -p:publishUrl=$(Build.SourcesDirectory)/bin/publish/functionapp -p:ApplicationVersion=$(version)'

- task: ArchiveFiles@2
  displayName: 'Archive function app'
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/bin/publish/functionapp'
    includeRootFolder: false
    archiveFile: '$(Build.ArtifactStagingDirectory)/FhirToDataLake/Microsoft.Health.Fhir.Synapse.FunctionApp.zip'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/FhirToDataLake'
    ArtifactName: FhirToDataLakeBuild